
MySTL/include/Test/test.cc,135
#define _SCL_SECURE_NO_WARNINGS_SCL_SECURE_NO_WARNINGS2,19
#define _CRTDBG_MAP_ALLOC _CRTDBG_MAP_ALLOC6,100
int main()main24,549

MySTL/include/Test/unordered_set_test.hh,281
#define UNORDERED_SET_TEST_HUNORDERED_SET_TEST_H2,32
namespace mystdmystd10,250
namespace testtest12,268
namespace unordered_set_testunordered_set_test14,285
void unordered_set_test()unordered_set_test17,317
void unordered_multiset_test()unordered_multiset_test96,3507

MySTL/include/Test/unordered_map_test.hh,427
#define UNORDERED_MAP_TEST_HUNORDERED_MAP_TEST_H2,32
namespace mystdmystd11,251
namespace testtest13,269
namespace unordered_map_testunordered_map_test15,286
#define PAIR_U PAIR_U19,339
#define MAP_COUT(MAP_COUT22,401
#define MAP_FUN_AFTER(MAP_FUN_AFTER30,651
#define MAP_VALUE(MAP_VALUE38,842
void unordered_map_test()unordered_map_test44,1017
void unordered_multimap_test()unordered_multimap_test129,4552

MySTL/include/Test/Lib/redbud/platform.h,1152
#define ALINSHANS_REDBUD_PLATFORM_H_ALINSHANS_REDBUD_PLATFORM_H_11,427
  #define REDBUD_WIN REDBUD_WIN17,609
  #define REDBUD_LINUX REDBUD_LINUX19,697
  #define REDBUD_OSX REDBUD_OSX21,768
  #define REDBUD_CLANG REDBUD_CLANG30,966
  #define REDBUD_GNUC REDBUD_GNUC32,1023
  #define REDBUD_MSVC REDBUD_MSVC34,1078
#define REDBUD_TO_STRING(REDBUD_TO_STRING42,1264
#define REDBUD_STRING(REDBUD_STRING43,1295
#define REDBUD_DO_JOIN(REDBUD_DO_JOIN48,1430
#define REDBUD_JOIN(REDBUD_JOIN49,1464
#define REDBUD_MAJOR REDBUD_MAJOR54,1604
#define REDBUD_MINOR REDBUD_MINOR55,1627
#define REDBUD_PATCH REDBUD_PATCH56,1650
#define REDBUD_VERSION REDBUD_VERSION57,1673
#define _VERSION_CODE(_VERSION_CODE60,1755
#define GNUC_VERSION GNUC_VERSION63,1822
#define CLANG_VERSION CLANG_VERSION66,1909
  #define _REDBUD_API _REDBUD_API73,2121
    #define REDBUD_HAS_CXX11 REDBUD_HAS_CXX1181,2338
    #define REDBUD_HAS_CXX11 REDBUD_HAS_CXX1184,2483
    #define REDBUD_HAS_CXX11 REDBUD_HAS_CXX1186,2587
    #define REDBUD_HAS_CXX11 REDBUD_HAS_CXX1188,2627
namespace redbudredbud99,2878
  #define NOMINMAXNOMINMAX103,2914

MySTL/include/Test/Lib/redbud/io/color.h,3614
#define ALINSHANS_REDBUD_IO_COLOR_H_ALINSHANS_REDBUD_IO_COLOR_H_12,506
namespace redbudredbud28,823
namespace ioio30,842
enum class formatformat44,1415
  reset      = 0,  // All attributes off.reset46,1435
  bold       = 1,  // Bold or increased intensity.bold47,1477
  faint      = 2,  // Faint (decreased intensity).faint48,1528
  italic     = 3,  // Italian font.italic49,1579
  underline  = 4,  // Underline.underline50,1615
  blinkslow  = 5,  // Blink slowly.blinkslow51,1648
  blinkrapid = 6,  // Blink quickly.blinkrapid52,1684
  inverse    = 7,  // Swap foreground and background.inverse53,1721
  conceal    = 8,  // Hide the text.conceal54,1775
  strikeline = 9   // Characters legible, but marked for deletion.strikeline55,1812
enum class fgfg59,1913
  black   = 30,black61,1929
  red     = 31,red62,1945
  green   = 32,green63,1961
  yellow  = 33,yellow64,1977
  blue    = 34,blue65,1993
  purple  = 35,purple66,2009
  cyan    = 36,cyan67,2025
  white   = 37,white68,2041
  reserve = 38,reserve69,2057
  reset   = 39reset70,2073
enum class bgbg74,2122
  black   = 40,black76,2138
  red     = 41,red77,2154
  green   = 42,green78,2170
  yellow  = 43,yellow79,2186
  blue    = 44,blue80,2202
  purple  = 45,purple81,2218
  cyan    = 46,cyan82,2234
  white   = 47,white83,2250
  reserve = 38,reserve84,2266
  reset   = 39reset85,2282
enum class hfghfg89,2341
  black  = 90,black91,2358
  red    = 91,red92,2373
  green  = 92,green93,2388
  yellow = 93,yellow94,2403
  blue   = 94,blue95,2418
  purple = 95,purple96,2433
  cyan   = 96,cyan97,2448
  white  = 97white98,2463
enum class hbghbg102,2521
  black  = 100,black104,2538
  red    = 101,red105,2554
  green  = 102,green106,2570
  yellow = 103,yellow107,2586
  blue   = 104,blue108,2602
  purple = 105,purple109,2618
  cyan   = 106,cyan110,2634
  white  = 107white111,2650
enum class statestate115,2696
  automatic = 0,  // Automatic control.automatic117,2715
  manual    = 1   // Manual control.manual118,2755
namespace detailsdetails123,2887
inline const std::streambuf*& get_coutbuf()get_coutbuf127,2945
inline const std::streambuf*& get_cerrbuf()get_cerrbuf133,3066
inline const std::streambuf*& get_clogbuf()get_clogbuf139,3187
inline int get_iword()get_iword146,3361
inline bool is_modifiable()is_modifiable153,3516
inline bool is_terminal(const std::streambuf* buf)is_terminal182,4169
using color_return_t = typename std::enable_if<color_return_t206,4771
using state_return_t = typename std::enable_if<state_return_t215,5090
inline color_return_t<T> set_color(std::ostream& os, const T& value)set_color222,5321
static constexpr WORD default_state = (FOREGROUND_BLUE | default_state229,5480
inline WORD get_rgb(WORD rgb)get_rgb234,5701
inline void set_attributes(redbud::io::fg color, WORD& state)set_attributes241,5852
inline void set_attributes(redbud::io::bg color, WORD& state)set_attributes256,6135
inline void set_attributes(redbud::io::hfg color, WORD& state)set_attributes270,6395
inline void set_attributes(redbud::io::hbg color, WORD& state)set_attributes277,6573
inline void set_attributes(redbud::io::format format, WORD& state)set_attributes284,6758
inline WORD& current_state()current_state292,6908
inline HANDLE get_console_handle()get_console_handle298,6995
inline color_return_t<T> set_color(std::ostream& os, const T& value)set_color305,7122
operator<<(std::ostream& os, const T& value)operator <<325,7631
operator<<(std::ostream& os, const T& value)operator <<336,7910

MySTL/include/Test/CMakeLists.txt,159
set(APP_SRC test.cc)APP_SRC2,53
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)EXECUTABLE_OUTPUT_PATH3,74
add_executable(test ${APP_SRC})test4,128

MySTL/include/Test/test.hh,3333
#define MYTINYSTL_TEST_HMYTINYSTL_TEST_H2,28
namespace mystdmystd17,354
namespace testtest19,372
#define green green22,390
#define red red23,456
namespace testtest32,636
class TestCaseTestCase37,698
  TestCase(const char* case_name) : testcase_name(case_name) {}TestCase41,783
  const char* testcase_name;  // 测试案例的名称testcase_name47,928
  int         nTestResult;    // 测试案例的执行结果 nTestResult48,983
  double      nFailed;        // 测试失败的案例数nFailed49,1045
  double      nPassed;        // 测试通过的案例数nPassed50,1103
class UnitTestUnitTest55,1268
  TestCase* CurrentTestCase;          // 当前执行的测试案例CurrentTestCase67,1460
  double    nPassed;                  // 通过案例数nPassed68,1529
  double    nFailed;                  // 失败案例数nFailed69,1586
  std::vector<TestCase*> testcases_;  // 保存案例集合testcases_72,1655
UnitTest* UnitTest::GetInstance()GetInstance75,1719
TestCase* UnitTest::RegisterTestCase(TestCase* testcase)RegisterTestCase81,1806
void UnitTest::Run()Run87,1921
#define TESTCASE_NAME(TESTCASE_NAME123,3328
#define MYTINYSTL_TEST_(MYTINYSTL_TEST_127,3502
#define EXPECT_TRUE(EXPECT_TRUE171,5271
#define EXPECT_FALSE(EXPECT_FALSE182,5878
#define EXPECT_EQ(EXPECT_EQ219,7659
#define EXPECT_NE(EXPECT_NE232,8365
#define EXPECT_LT(EXPECT_LT245,9104
#define EXPECT_LE(EXPECT_LE258,9843
#define EXPECT_GT(EXPECT_GT271,10582
#define EXPECT_GE(EXPECT_GE284,11321
#define EXPECT_STREQ(EXPECT_STREQ317,12788
#define EXPECT_STRNE(EXPECT_STRNE345,14569
#define EXPECT_PTR_EQ(EXPECT_PTR_EQ400,17414
#define EXPECT_PTR_NE(EXPECT_PTR_NE413,18153
#define EXPECT_PTR_RANGE_EQ(EXPECT_PTR_RANGE_EQ426,18892
#define EXPECT_PTR_RANGE_NE(EXPECT_PTR_RANGE_NE437,19499
#define EXPECT_CON_EQ(EXPECT_CON_EQ467,20682
#define EXPECT_CON_NE(EXPECT_CON_NE485,21815
#define LEN1 LEN1506,22995
#define LEN2 LEN2507,23017
#define LEN3 LEN3508,23040
#define LEN1 LEN1510,23070
#define LEN2 LEN2511,23093
#define LEN3 LEN3512,23117
#define SCALE_LLL(SCALE_LLL515,23150
#define SCALE_LL(SCALE_LL516,23180
#define SCALE_L(SCALE_L517,23210
#define SCALE_M(SCALE_M518,23239
#define SCALE_S(SCALE_S519,23264
#define SCALE_SS(SCALE_SS520,23293
#define SCALE_SSS(SCALE_SSS521,23323
#define WIDE WIDE523,23354
#define PASSED PASSED526,23396
#define COUT(COUT529,23465
#define STR_COUT(STR_COUT537,23831
#define FUN_AFTER(FUN_AFTER543,24060
#define STR_FUN_AFTER(STR_FUN_AFTER550,24367
#define FUN_VALUE(FUN_VALUE558,24708
void test_len(size_t len1, size_t len2, size_t len3, size_t wide)test_len564,24922
#define TEST_LEN(TEST_LEN578,25305
#define FUN_TEST_FORMAT1(FUN_TEST_FORMAT1582,25412
#define FUN_TEST_FORMAT2(FUN_TEST_FORMAT2599,26369
#define LIST_SORT_DO_TEST(LIST_SORT_DO_TEST616,27326
#define MAP_EMPLACE_DO_TEST(MAP_EMPLACE_DO_TEST634,28346
#define CON_TEST_P1(CON_TEST_P1652,29324
#define CON_TEST_P2(CON_TEST_P2663,29944
#define MAP_EMPLACE_TEST(MAP_EMPLACE_TEST674,30571
#define LIST_SORT_TEST(LIST_SORT_TEST685,31180
#define TEST(TEST697,31810
#define RUN_ALL_TESTS(RUN_ALL_TESTS701,31902
#define PERFORMANCE_TEST_ON PERFORMANCE_TEST_ON706,32031
#define LARGER_TEST_DATA_ON LARGER_TEST_DATA_ON711,32155

MySTL/include/Test/vector_test.hh,176
#define VECTOR_TEST_HVECTOR_TEST_H2,25
namespace mystdmystd11,186
namespace testtest13,204
namespace vector_testvector_test15,221
void vector_test()vector_test18,246

MySTL/include/a.sh,0

MySTL/include/CMakeLists.txt,450
project(MyTinySTL)MyTinySTL3,37
set(CMAKE_CXX_COMPILER clang++)CMAKE_CXX_COMPILER5,57
set(MyTinySTL_VERSION_MAJOR 2)MyTinySTL_VERSION_MAJOR10,171
set(MyTinySTL_VERSION_MINOR 0)MyTinySTL_VERSION_MINOR11,202
set(MyTinySTL_VERSION_PATCH 0)MyTinySTL_VERSION_PATCH12,233
set(MyTinySTL_VERSION "${MyTinySTL_VERSION_MAJOR}.${MyTinySTL_VERSION_MINOR}.${MyTinySTL_VERSIONMyTinySTL_VERSION13,264
set(CMAKE_BUILD_TYPE debug)CMAKE_BUILD_TYPE17,455

MySTL/include/MyTinySTL/hashtable.hh,15636
#define HASHTABLE_HHHASHTABLE_HH2,21
namespace mystd{mystd13,225
struct hash{};hash16,263
inline std::size_t unaligned_load(const char* p, int len)unaligned_load18,279
size_t __hash_bit(const void* ptr, size_t len)__hash_bit26,578
inline size_t __hash_long( const long long Key )                // ((ax+b)mod p ) mod M 通用散__hash_long72,1618
struct hash<long> {hash91,2327
    size_t operator()( const long long Key )operator ()92,2347
struct hash<unsigned long> {hash99,2452
    size_t operator()( const long long Key )operator ()100,2481
struct hash<long long> {hash107,2586
    size_t operator()( const long long Key )operator ()108,2611
struct hash<unsigned long long> {hash115,2716
    size_t operator()( const long long Key )operator ()116,2750
struct hash<Key*>{hash123,2864
    size_t operator()(Key* p) const noexceptoperator ()124,2883
struct hash<bool> {hash131,2999
    size_t operator()( const bool Key )operator ()132,3019
struct hash<short>{hash140,3128
    size_t operator() ( const long long Key ) constoperator () 141,3148
struct hash<unsigned short>{hash148,3260
    size_t operator() ( const long long Key ) constoperator () 149,3289
struct hash<int>{hash156,3401
    size_t operator() ( const long long Key ) constoperator () 157,3419
struct hash<unsigned int>{hash164,3531
    size_t operator() ( const long long Key ) constoperator () 165,3558
struct hash<float>{hash172,3670
    size_t operator()(const float& val)operator ()173,3690
struct hash<double>{hash181,3846
    size_t operator()(const double& val)operator ()182,3867
struct hash<long double>{hash190,4025
    size_t operator()(const long double& val)operator ()191,4051
struct hash<std::string> {hash198,4218
    size_t operator()( const std::string & Key )operator ()199,4245
struct hash<const char*> {hash211,4486
    size_t operator()( const char* Key )operator ()212,4513
struct hash<char*> {hash219,4626
    size_t operator()( const char* Key )operator ()220,4647
namespace mystd{mystd229,4753
struct integral_constantintegral_constant233,4869
  static constexpr Object value = v;value235,4896
using bool_constant = integral_constant<bool, b>;bool_constant239,4955
using true_type  = bool_constant<true>;true_type241,5006
using false_type = bool_constant<false>;false_type242,5046
struct is_pair final : false_type {};is_pair245,5111
struct is_pair<std::pair<Object1, Object2>> final : true_type{} ;is_pair248,5188
size_t distance(Object first, Object last)distance251,5279
struct value_traits_imp {value_traits_imp264,5464
    using key_type    = Object;key_type265,5490
    using mapped_type = Object;mapped_type266,5522
    using value_type  = Object;value_type267,5554
    static const key_type& get_key( const Object1& value )get_key270,5615
    static const key_type& get_value( const Object1& value )get_value276,5737
struct value_traits_imp<Object, true> {value_traits_imp283,5860
    using key_type    = typename std::remove_cv<typename Object::first_type>::type;key_type285,5929
    using mapped_type = typename Object::second_type;mapped_type286,6013
    using value_type  = Object;value_type287,6067
    static const key_type& get_key( const Object1& value)get_key290,6128
    static const value_type& get_value( const Object1& value )get_value296,6255
struct value_traits{value_traits303,6380
    static constexpr bool is_map = mystd::is_pair<Object>::value;is_map304,6401
    using value_traits_type = value_traits_imp<Object, is_map>;value_traits_type306,6468
    using key_type    = typename value_traits_type::key_type;key_type308,6533
    using mapped_type = typename value_traits_type::mapped_type;mapped_type309,6595
    using value_type  = typename value_traits_type::value_type;value_type310,6660
    static const key_type& get_key(const Object1& value)get_key313,6753
    static const key_type& get_value(const Object1& value)get_value319,6901
static constexpr unsigned long long PRIME_NUM = 99;PRIME_NUM328,7131
static constexpr size_t prime_list[] = {prime_list330,7209
inline size_t next_prime( size_t n )next_prime344,8099
class hashtable{hashtable355,8488
    using value_traits_type = value_traits<Object>;value_traits_type364,8660
    using key_type          = typename value_traits_type::key_type;key_type365,8712
    using mapped_type       = typename value_traits_type::mapped_type;mapped_type366,8780
    using value_type        = typename value_traits_type::value_type;value_type367,8851
    using node_ptr_type = hashtableNode*;node_ptr_type370,8965
    using bucket_type   = std::vector<node_ptr_type>;bucket_type371,9007
    std::allocator<Object>        data_allocator;data_allocator373,9062
    std::allocator<hashtableNode> node_allocator;node_allocator374,9112
    hashtableNode*               node_ptr;node_ptr377,9174
    std::vector<hashtableNode *> theBucket;  // 动态扩充更方便theBucket378,9217
    size_t                       theSize;theSize379,9287
    size_t                       theBucketSize;theBucketSize380,9329
    float                        theLoadFactor;theLoadFactor381,9377
    hashFun                      theHash;theHash382,9425
    keyEqual                     equal;equal383,9467
    bool is_equal( const key_type& key1, const key_type& key2  )is_equal386,9519
    bool is_equal( const key_type& key1, const key_type& key2  ) constis_equal391,9633
    iterator Begin() noexceptBegin396,9753
    const_iterator Begin() const noexceptBegin406,9981
    explicit hashtable( size_t bucket_count,hashtable416,10288
    hashtable( const hashtable& rhs )hashtable424,10578
    hashtable( hashtable&& rhs ) noexcepthashtable430,10709
    hashtable& operator=(const hashtable& rhs )operator =443,11110
    hashtable& operator=(hashtable&& rhs ) noexceptoperator =452,11290
    ~hashtable()~hashtable459,11440
    iterator begin() noexceptbegin464,11487
    const_iterator begin() const noexceptbegin469,11554
    iterator end() noexceptend474,11633
    const_iterator end() const noexceptend479,11716
    const_iterator cbegin() const noexceptcbegin484,11839
    const_iterator cend() const noexceptcend489,11919
    bool empty() const noexceptempty495,12024
    size_t size() const noexceptsize500,12098
    size_t max_size() const noexceptmax_size505,12168
    iterator emplace_multi( Args&& ...args )emplace_multi512,12306
    std::pair<iterator, bool> emplace_unique( Args&& ... args )emplace_unique530,12732
    iterator emplace_multi_use_hint(const_iterator , Args &&...args)emplace_multi_use_hint547,13176
    iterator emplace_unique_use_hint(const_iterator , Args &&...args)emplace_unique_use_hint553,13344
    iterator insert_multi_noresize( const value_type& value )insert_multi_noresize558,13491
    std::pair<iterator, bool> insert_unique_noresize( const value_type& value )insert_unique_noresize576,14154
    iterator insert_multi( const value_type& value )insert_multi592,14761
    iterator insert_multi(value_type&& value)insert_multi598,14901
    std::pair<iterator, bool> insert_unique( const value_type& value )insert_unique603,15008
    std::pair<iterator, bool> insert_unique( value_type&& value )insert_unique609,15167
    iterator insert_multi_use_hint(const value_type &value)insert_multi_use_hint614,15298
    iterator insert_multi_use_hint(value_type &&value)insert_multi_use_hint618,15404
    iterator insert_unique_use_hint(const value_type &value)insert_unique_use_hint623,15520
    iterator insert_unique_use_hint(value_type &&value)insert_unique_use_hint627,15634
    void insert_multi( Object1 first, Object1 last )insert_multi633,15778
    void insert_unique(Object1 first, Object1 last)insert_unique639,15914
    void erase( const_iterator position )erase645,16039
    void erase( const_iterator first, const_iterator last )erase673,16884
    size_t erase_multi( const key_type& key )erase_multi698,17872
    size_t erase_unique( const key_type& key )erase_unique708,18136
    void clear()clear735,19025
    void swap( hashtable& rhs ) noexceptswap751,19472
    size_t count( const key_type& key ) constcount764,19867
    iterator find( const key_type& key )find777,20216
    const_iterator find( const key_type& key ) constfind785,20500
    std::pair<iterator, iterator> equal_range_multi( const key_type& key )equal_range_multi793,20822
    std::pair<const_iterator, const_iterator> equal_range_multi(const key_type& key) constequal_range_multi814,21781
    std::pair<iterator, iterator> equal_range_unique( const key_type& key )equal_range_unique838,22980
    std::pair<const_iterator, const_iterator> equal_range_unique(const key_type& key ) constequal_range_unique857,23758
    local_iterator begin( size_t n ) noexceptbegin881,24910
    local_iterator end( size_t n ) noexceptend887,25028
    const_local_iterator begin( size_t n ) const noexceptbegin893,25140
    const_local_iterator cbegin( size_t n ) const noexceptcbegin898,25270
    const_local_iterator end( size_t n ) const noexceptend904,25404
    const_local_iterator cend( size_t n ) const noexceptcend910,25528
    size_t bucket_count() const noexceptbucket_count916,25653
    size_t bucket_size( size_t n ) const noexceptbucket_size921,25737
    size_t bucket( const key_type& key ) constbucket930,25936
    float load_factor() const noexceptload_factor936,26040
    float max_load_factor() const noexceptmax_load_factor941,26180
    void max_load_factor( float n )max_load_factor946,26266
    void rehash( size_t count )rehash952,26391
    void reserve(size_t count )reserve965,26763
    void init( size_t n )init971,26897
    void copy_init( const hashtable& ht )copy_init987,27255
    node_ptr_type create_node(Args&& ... args )create_node1016,28224
    void destroy_node(node_ptr_type node )destroy_node1031,28631
    size_t hash( const key_type& key, size_t n ) consthash1038,28827
    size_t hash( const key_type& key ) consthash1043,28928
    void rehash_if_need(size_t n )rehash_if_need1048,29031
    void copy_insert_multi( Object1 first, Object1 last )copy_insert_multi1057,29259
    void copy_insert_unique(Object1 first, Object1 last )copy_insert_unique1065,29494
    std::pair<iterator, bool> insert_node_unique(node_ptr_type np )insert_node_unique1072,29703
    iterator insert_node_multi(node_ptr_type np)insert_node_multi1093,30422
    void replace_bucket(size_t bucket_count )replace_bucket1118,31158
    void erase_bucket(size_t n, node_ptr_type first, node_ptr_type last )erase_bucket1147,32370
    void erase_bucket(size_t n, node_ptr_type last)erase_bucket1165,32900
    struct hashtableNode{hashtableNode1181,33231
        Object         value;value1182,33257
        hashtableNode* next;next1183,33287
        hashtableNode( const Object& n ) : value(n), next(nullptr){}hashtableNode1186,33352
        hashtableNode( const hashtableNode& node ) : value( node.value), next(node.next){}hashtableNode1188,33422
        hashtableNode( hashtableNode&& node ) : value( std::move(node.value)), next(node.next)hashtableNode1189,33513
    struct iterator {iterator1196,33728
        using contain_ptr_type       = hashtable<Object, hashFun, keyEqual>*;contain_ptr_type1197,33750
        hashtableNode*   node_ptr;      //迭代器指向的节点node_ptr1199,33829
        contain_ptr_type hashtable_ptr; //保持与容器的连接hashtable_ptr1200,33896
        iterator( hashtableNode* n , contain_ptr_type t )iterator1204,33995
        iterator( const iterator& rhs )iterator1210,34131
        iterator( const const_iterator& rhs )iterator1216,34276
        iterator& operator=( const iterator& rhs )operator =1222,34427
        iterator& operator=( const const_iterator& rhs )operator =1231,34664
        Object& operator*() const { return node_ptr -> value; }operator *1240,34907
        Object* operator->() const  { return &(operator*());}operator ->1242,34972
        iterator& operator++()operator ++1245,35080
        iterator operator++(int)operator ++1261,35809
        bool operator==(const iterator& rhs)operator ==1268,35942
        bool operator!=(const iterator& rhs)operator !=1271,36033
    struct const_iterator{const_iterator1276,36190
        using node_ptr_type          = hashtableNode*;node_ptr_type1277,36217
        using contain_ptr_type       = hashtable<Object, hashFun, keyEqual>*;contain_ptr_type1278,36272
        node_ptr_type    node_ptr;  //迭代器指向的节点node_ptr1280,36351
        contain_ptr_type hashtable_ptr; //保持与容器的连接hashtable_ptr1281,36414
        const_iterator( node_ptr_type n , contain_ptr_type t )const_iterator1284,36518
        const_iterator( const iterator& rhs )const_iterator1290,36664
        const_iterator( const const_iterator & rhs )const_iterator1296,36820
        const_iterator& operator=( const iterator& rhs )operator =1302,36983
        const_iterator operator=( const const_iterator & rhs )operator =1311,37231
        const Object& operator*() const { return node_ptr -> value;}operator *1320,37485
        const Object* operator->() const { return &(operator*()); }operator ->1321,37554
        const_iterator& operator++()operator ++1323,37623
        const_iterator operator++( int )operator ++1339,38145
        bool operator==(const const_iterator& rhs)operator ==1346,38292
        bool operator!=(const const_iterator& rhs)operator !=1349,38389
    struct local_iterator {local_iterator1354,38494
        hashtableNode* node_ptr;node_ptr1356,38523
        local_iterator( hashtableNode* n ):node_ptr(n) {}local_iterator1358,38557
        local_iterator(const local_iterator& rhs ):node_ptr(rhs.node_ptr) {}local_iterator1360,38616
        local_iterator(const const_local_iterator& rhs ): node_ptr(rhs.node_ptr) {}local_iterator1362,38694
        Object& operator*() const { return node_ptr -> value; };operator *1364,38779
        Object* operator->() const { return &(operator*());}operator ->1365,38844
        local_iterator& operator++()operator ++1367,38906
        local_iterator operator++( int )operator ++1374,39074
        bool operator==( const local_iterator& rhs ) const { return node_ptr == rhs.node_ptr; }operator ==1381,39220
        bool operator!=( const local_iterator& rhs ) const { return node_ptr != rhs.node_ptr; }operator !=1382,39316
    struct const_local_iterator {const_local_iterator1385,39420
        hashtableNode* node_ptr;node_ptr1387,39455
        const_local_iterator( hashtableNode* n ):node_ptr(n) {}const_local_iterator1389,39489
        const_local_iterator(const local_iterator& rhs ):node_ptr(rhs.node_ptr) {}const_local_iterator1391,39554
        const_local_iterator(const const_local_iterator& rhs ): node_ptr(rhs.node_ptr) {}const_local_iterator1393,39638
        const Object& operator*() const { return node_ptr -> value; };operator *1395,39729
        const Object* operator->() const { return &(operator*());}operator ->1396,39800
        const_local_iterator& operator++()operator ++1398,39868
        const_local_iterator operator++( int )operator ++1405,40042
        bool operator==( const const_local_iterator& rhs ) const { return node_ptr == rhs.node_poperator ==1412,40200
        bool operator!=( const const_local_iterator& rhs ) const { return node_ptr != rhs.node_poperator !=1413,40302
void swap( hashtable<Object, hashFun, keyEqual> & lhs,swap1418,40470

MySTL/include/MyTinySTL/unordered_map.hh,7748
#define UNORDERED_MAP_HHUNORDERED_MAP_HH3,109
namespace mystd {mystd9,180
class unordered_map{unordered_map14,353
    using base_type = mystd::hashtable<std::pair<const Key, Object>, Hash, keyEqual>;base_type16,385
    base_type Hashtable;Hashtable17,471
    using key_type   = typename base_type::key_type;key_type20,507
    using value_type = typename base_type::value_type;value_type21,560
    using iterator       = typename base_type::iterator;iterator23,616
    using const_iterator = typename base_type::const_iterator;const_iterator24,673
    unordered_map()unordered_map27,747
    explicit unordered_map(size_t bucket_count,unordered_map30,819
    unordered_map(inputIterator first, inputIterator last,unordered_map37,1072
    unordered_map( std::initializer_list<value_type> list,unordered_map47,1497
    unordered_map( const unordered_map& rhs)unordered_map57,1953
    unordered_map(unordered_map&& rhs) noexceptunordered_map60,2039
    unordered_map& operator=(const unordered_map& rhs)operator =66,2193
    unordered_map& operator=(unordered_map&& rhs)operator =74,2370
    unordered_map& operator=(std::initializer_list<value_type> list)operator =81,2502
    size_t size() const noexceptsize91,2831
    bool empty() const noexceptempty96,2910
    void clear()clear101,2989
    size_t bucket_count() const noexceptbucket_count106,3046
    float load_factor() const noexceptload_factor111,3141
    float max_load_factor() const noexceptmax_load_factor116,3233
    void max_load_factor( float mlf )max_load_factor120,3332
    void reserve( size_t count )reserve126,3424
    void rehash( size_t count )rehash131,3504
    size_t bucket_size(size_t n ) const noexceptbucket_size136,3582
    size_t bucket( const key_type& key) constbucket141,3685
    iterator begin() noexceptbegin147,3799
    iterator end() noexceptend151,3875
    const_iterator begin() const noexceptbegin156,3948
    const_iterator end() const noexceptend160,4036
    const_iterator cbegin() const noexceptcbegin165,4121
    const_iterator cend() const noexceptcend169,4211
    Object& operator[](const key_type& key)operator []176,4319
    Object& operator[](key_type&& key)operator []184,4547
    Object& at( const key_type& key)at192,4778
    const Object& at( const key_type& key ) constat199,4944
    void swap(unordered_map& other) noexceptswap208,5142
    bool operator==( const unordered_map& rhs ) constoperator ==214,5261
    bool operator!=( const unordered_map& rhs ) constoperator !=219,5388
    iterator find( const key_type& key )find225,5536
    const_iterator find( const key_type& key ) constfind230,5626
    size_t count( const key_type& key ) constcount235,5728
    void insert(inputIterator first, inputIterator last)insert242,5881
    std::pair<iterator, bool> insert(const value_type& value)insert247,5997
    std::pair<iterator, bool> insert(value_type&& value)insert252,6119
    iterator insert( const_iterator hint, const value_type& value)insert257,6248
    iterator insert( const_iterator hint, value_type&& value)insert261,6389
    std::pair<iterator, bool> emplace(Args&& ...args)emplace267,6566
    size_t erase( const key_type& key)erase273,6717
    void erase(iterator pos)erase278,6813
    void erase(iterator first, iterator last)erase283,6885
    friend bool operator==(const unordered_map& lhs, const unordered_map& rhs )operator ==289,6992
    friend bool operator!=( const unordered_map& lhs, const unordered_map& rhs )operator !=294,7149
bool operator==(const unordered_map<Key, Object, Hash, keyEqual>& lhs,operator ==301,7373
bool operator!=(const unordered_map<Key, Object, Hash, keyEqual>& lhs,operator !=307,7604
void swap(unordered_map<Key, Object, Hash, keyEqual>& lhs,swap314,7836
class unordered_multimap{unordered_multimap325,8243
    using base_type = mystd::hashtable<std::pair<const Key, Object>, Hash, keyEqual>;base_type327,8280
    base_type Hashtable;Hashtable328,8366
    using key_type   = typename base_type::key_type;key_type331,8402
    using value_type = typename base_type::value_type;value_type332,8455
    using iterator       = typename base_type::iterator;iterator334,8511
    using const_iterator = typename base_type::const_iterator;const_iterator335,8568
    unordered_multimap()unordered_multimap338,8642
    explicit unordered_multimap(size_t bucket_count,unordered_multimap341,8719
    unordered_multimap(inputIterator first, inputIterator last,unordered_multimap347,8986
    unordered_multimap( std::initializer_list<value_type> list,unordered_multimap357,9430
    unordered_multimap( const unordered_multimap& rhs)unordered_multimap367,9905
    unordered_multimap(unordered_multimap&& rhs) noexceptunordered_multimap370,10001
    unordered_multimap& operator=(const unordered_multimap& rhs)operator =376,10170
    unordered_multimap& operator=(unordered_multimap&& rhs)operator =384,10358
    unordered_multimap& operator=(std::initializer_list<value_type> list)operator =390,10499
    size_t size() const noexceptsize400,10832
    bool empty() const noexceptempty405,10911
    void clear()clear410,10990
    size_t bucket_count() const noexceptbucket_count415,11047
    float load_factor() const noexceptload_factor420,11142
    float max_load_factor() const noexceptmax_load_factor425,11234
    void max_load_factor( float mlf )max_load_factor430,11334
    void reserve( size_t count )reserve435,11425
    void rehash( size_t count )rehash440,11505
    size_t bucket_size(size_t n ) const noexceptbucket_size445,11583
    size_t bucket( const key_type& key) constbucket450,11686
    iterator begin() noexceptbegin456,11800
    iterator end() noexceptend461,11877
    const_iterator begin() const noexceptbegin466,11950
    const_iterator end() const noexceptend470,12038
    const_iterator cbegin() const noexceptcbegin475,12123
    const_iterator cend() const noexceptcend479,12213
    Object& operator[](const key_type& key)operator []486,12321
    Object& operator[](key_type&& key)operator []494,12548
    Object& at( const key_type& key)at502,12778
    const Object& at( const key_type& key ) constat509,12941
    void swap(unordered_multimap& other) noexceptswap518,13136
    bool operator==( const unordered_multimap& rhs ) constoperator ==524,13260
    bool operator!=( const unordered_multimap& rhs ) constoperator !=529,13391
    iterator find(const key_type& key)find535,13543
    const_iterator find( const key_type& key ) constfind540,13631
    size_t count( const key_type& key ) constcount545,13733
    void insert(inputIterator first, inputIterator last)insert552,13886
    iterator insert(const value_type& value)insert557,14001
    iterator insert(value_type&& value)insert562,14105
    iterator insert( const_iterator hint, const value_type& value)insert567,14216
    iterator insert( const_iterator hint, value_type&& value)insert571,14356
    iterator emplace(Args&& ...args)emplace577,14532
    void erase(iterator pos)erase583,14665
    void erase(iterator first, iterator last)erase588,14737
    size_t erase( const key_type& key)erase593,14834
    friend bool operator==(const unordered_multimap& lhs, const unordered_multimap& rhs )operator ==600,14940
    friend bool operator!=( const unordered_multimap& lhs, const unordered_multimap& rhs )operator !=605,15106
bool operator==(const unordered_multimap<Key, Object, Hash, keyEqual>& lhs,operator ==612,15340
bool operator!=(const unordered_multimap<Key, Object, Hash, keyEqual>& lhs,operator !=619,15584
void swap(unordered_multimap<Key, Object, Hash, keyEqual>& lhs,swap626,15828

MySTL/include/MyTinySTL/vector.hh,4138
#define VECTOR_HHVECTOR_HH2,18
namespace mystd {mystd16,338
size_t distance_u(Object first, Object last)distance_u18,380
class vector{vector30,528
    using iterator = T*;iterator31,542
    using const_iterator =  const T*;const_iterator32,567
    iterator _begin;_begin36,680
    iterator _end;_end37,701
    iterator _cap;_cap38,720
    std::allocator<T> alloc;alloc39,739
    vector()vector42,779
    explicit vector(size_t n )vector47,824
    vector(size_t n, const T& value)vector52,894
    vector( const vector& rhs )vector57,973
    vector( vector&& rhs ) noexceptvector64,1102
    vector(std::initializer_list<T> list)vector72,1305
    vector(Iter first, Iter last)vector80,1545
    vector& operator=(const vector& rhs)operator =95,2538
    vector& operator=(vector&& rhs)operator =122,3568
    vector& operator=(std::initializer_list<T> list)operator =136,3974
    ~vector()~vector143,4127
    iterator begin() noexceptbegin155,4391
    iterator end() noexceptend159,4456
    const_iterator begin() const noexceptbegin164,4518
    const_iterator end() const noexceptend168,4595
    const_iterator cbegin() const noexceptcbegin173,4669
    const_iterator cend() const noexceptcend177,4747
    size_t capacity() constcapacity183,4848
    size_t size() constsize188,4919
    size_t max_size()max_size192,4985
    bool empty() constempty196,5071
    void clear()clear201,5138
    void reserve( size_t n)reserve207,5262
    void shrink_to_fit()shrink_to_fit226,5780
    void resize(size_t size)resize247,6356
    void resize(size_t new_size, const T&value)resize252,6425
    void reverse()reverse275,7188
    T &operator[](size_t n)operator []282,7279
    const T &operator[](size_t n) constoperator []288,7378
    T& at(size_t n )at294,7489
    const T& at(size_t n ) constat302,7788
    T* data()data310,8099
    const T *data() constdata312,8136
    T &front()front315,8186
    const T &front() constfront320,8263
    T &back()back325,8352
    const T &back() constback330,8432
    void assign(std::initializer_list<T> list)assign337,8580
    void assign(iterator first, iterator last)assign344,8736
    void assign(size_t n, const T &value)assign387,9809
    void swap(vector<T>& v)swap401,10204
    bool operator ==(const vector<T> & rhs) constoperator ==409,10368
    bool operator != (const vector<T> & rhs) constoperator !=413,10507
    void push_back(const T& value)push_back419,10671
    void push_back(T&& value)push_back431,10913
    void emplace_back(Args&& ...args)emplace_back438,11026
    iterator insert(const_iterator pos, const T& value)insert451,11347
    iterator emplace (iterator pos, Args&&...args)emplace494,12580
    iterator insert(iterator pos, Iter first, Iter last)insert521,13469
    iterator insert(iterator pos, size_t n, const T& value)insert587,15064
    void pop_back()pop_back655,16822
    iterator erase(iterator pos)erase662,16924
    iterator erase(iterator first, iterator last)erase675,17221
    void init( size_t size = 0, size_t cap = 16 ) //1init685,17517
    void fill_init(size_t n, const T& value )fill_init700,17890
    void range_init(T1 first, T1 last)range_init708,18217
    void destroy(iterator first, iterator last)destroy716,18477
    void reallocate_emplace(iterator pos, Args&& ...args)reallocate_emplace725,18720
    size_t get_new_cap(size_t addSize)get_new_cap746,19411
    T2 uncopy(T1 first, T1 last, T2 begin)uncopy762,19955
    T2 unmove(T1 first, T1 last, T2 begin)unmove772,20172
bool operator==(const vector<T>& lhs, const vector<T>& rhs)operator ==786,20412
bool operator<(const vector<T>& lhs, const vector<T>& rhs)operator <792,20519
bool operator!=(const vector<T>& lhs, const vector<T>& rhs)operator !=798,20691
bool operator>(const vector<T>& lhs, const vector<T>& rhs)operator >804,20801
bool operator<=(const vector<T>& lhs, const vector<T>& rhs)operator <=810,20906
bool operator>=(const vector<T>& lhs, const vector<T>& rhs)operator >=816,21015
void swap(vector<T>& lhs, vector<T>& rhs)swap823,21149

MySTL/include/MyTinySTL/unordered_set.hh,7203
#define UNORDERED_SET_HHUNORDERED_SET_HH3,112
namespace mystd{mystd9,164
class unordered_set{unordered_set14,323
    using base_type = mystd::hashtable<Key, Hash, keyEqual> ;base_type16,355
    base_type Hashtable;Hashtable17,417
    using key_type   = typename base_type::key_type;key_type20,453
    using value_type = typename base_type::value_type;value_type21,506
    using iterator       = typename base_type::iterator;iterator23,562
    using const_iterator = typename base_type::const_iterator;const_iterator24,619
    unordered_set()unordered_set27,693
    explicit unordered_set(size_t bucket_count,unordered_set30,765
    unordered_set(inputIterator first, inputIterator last,unordered_set36,1019
    unordered_set( std::initializer_list<value_type> list,unordered_set46,1444
    unordered_set( const unordered_set& rhs)unordered_set56,1900
    unordered_set( unordered_set&& rhs) noexceptunordered_set59,1987
    unordered_set& operator=(const unordered_set& rhs)operator =65,2143
    unordered_set& operator=(unordered_set&& rhs)operator =70,2267
    unordered_set& operator=(std::initializer_list<value_type> list)operator =76,2398
    size_t size() const noexceptsize86,2726
    bool empty() const noexceptempty90,2804
    void clear()clear95,2883
    size_t bucket_count() const noexceptbucket_count100,2940
    float load_factor() const noexceptload_factor105,3035
    float max_load_factor() const noexceptmax_load_factor110,3127
    void max_load_factor(float mlf)max_load_factor114,3226
    void reserve( size_t count )reserve119,3315
    void rehash( size_t count )rehash124,3395
    size_t bucket_size(size_t n) const noexceptbucket_size129,3473
    size_t bucket(const key_type& key)    constbucket134,3575
    iterator begin() noexceptbegin141,3692
    iterator end() noexceptend145,3768
    const_iterator begin() const noexceptbegin150,3841
    const_iterator end() const noexceptend154,3929
    const_iterator cbegin() const noexceptcbegin159,4014
    const_iterator cend() const noexceptcend163,4104
    void swap(unordered_set& other) noexceptswap169,4211
    bool operator==( const unordered_set& rhs)operator ==175,4330
    bool operator!=( const unordered_set& rhs)operator !=180,4450
    iterator find(const key_type& key)find187,4592
    const_iterator find(const key_type& key)  constfind191,4679
    size_t count(const key_type& key) constcount196,4780
    void insert(inputIterator first, inputIterator last)insert203,4931
    std::pair<iterator, bool> insert(const value_type& value)insert207,5046
    std::pair<iterator, bool> insert(value_type&& value)insert212,5168
    iterator insert(const_iterator hint, const value_type& value)insert217,5297
    iterator insert(const_iterator hint, value_type&& value)insert221,5437
    std::pair<iterator, bool> emplace(Args&& ...args)emplace228,5629
    iterator emplace_hint(const_iterator hint, Args&& ...args)emplace_hint234,5795
    size_t erase(const key_type& key)erase240,5970
    void erase(iterator pos)erase245,6065
    void erase(iterator first, iterator last)erase250,6137
    friend bool operator==(const unordered_set& lhs, const unordered_set& rhs)operator ==257,6245
    friend bool operator!=(const unordered_set& lhs, const unordered_set& rhs)operator !=261,6393
bool operator==(const unordered_set<Key, Hash, keyEqual>& lhs,operator ==268,6595
bool operator!=(const unordered_set<Key, Hash, keyEqual>& lhs,operator !=275,6798
void swap(unordered_set<Key, Hash, keyEqual>& lhs,swap282,7001
class unordered_multiset{unordered_multiset294,7379
    using base_type = mystd::hashtable<Key, Hash, keyEqual>;base_type296,7416
    base_type Hashtable;Hashtable297,7477
    using key_type   = typename base_type::key_type;key_type300,7513
    using value_type = typename base_type::value_type;value_type301,7566
    using iterator       = typename base_type::iterator;iterator303,7622
    using const_iterator = typename base_type::const_iterator;const_iterator304,7679
    unordered_multiset()unordered_multiset307,7753
    explicit unordered_multiset(size_t bucket_count,unordered_multiset310,7830
    unordered_multiset(inputIterator first, inputIterator last,unordered_multiset316,8098
    unordered_multiset(std::initializer_list<value_type> list,unordered_multiset326,8540
    unordered_multiset(const unordered_multiset& rhs)unordered_multiset336,9010
    unordered_multiset(unordered_multiset&& rhs) noexceptunordered_multiset338,9105
    unordered_multiset& operator=(const unordered_multiset& rhs)operator =344,9275
    unordered_multiset& operator=(unordered_multiset&& rhs)operator =352,9463
    unordered_multiset& operator=(std::initializer_list<value_type> list)operator =358,9604
    size_t size() const noexceptsize369,9937
    bool empty() const noexceptempty374,10016
    void clear()clear379,10095
    size_t bucket_count() const noexceptbucket_count384,10152
    float load_factor() const noexceptload_factor389,10247
    float max_load_factor() const noexceptmax_load_factor394,10339
    void max_load_factor(float mlf)max_load_factor399,10439
    void reserve(size_t count)reserve404,10528
    void rehash(size_t count)rehash409,10606
    size_t bucket_size(size_t n) const noexceptbucket_size414,10682
    size_t bucket(const key_type& key) constbucket419,10784
    iterator begin() noexceptbegin425,10897
    iterator end() noexceptend430,10974
    const_iterator begin() const noexceptbegin435,11047
    const_iterator end() const noexceptend440,11136
    const_iterator cbegin() const noexceptcbegin445,11221
    const_iterator cend() const noexceptcend450,11312
    void swap(unordered_multiset& other) noexceptswap456,11419
    bool operator==(const unordered_multiset& rhs) constoperator ==462,11543
    bool operator!=(const unordered_multiset& rhs) constoperator !=466,11671
    iterator find(const key_type& key)find472,11821
    const_iterator find(const key_type& key) constfind477,11909
    size_t count(const key_type& key) constcount482,12009
    void insert(inputIterator first, inputIterator last)insert490,12162
    iterator insert(const value_type& value)insert495,12277
    iterator insert(value_type&& value)insert500,12381
    iterator insert(const_iterator hint, const value_type& value)insert505,12492
    iterator insert(const_iterator hint, value_type&& value)insert510,12632
    iterator emplace(Args&& ...args)emplace517,12822
    void erase(iterator it)erase523,12955
    void erase(iterator first, iterator last)erase528,13025
    size_t erase(const key_type& key)erase533,13122
    friend bool operator==(const unordered_multiset& lhs, const unordered_multiset& rhs)operator ==539,13226
    friend bool operator!=(const unordered_multiset& lhs, const unordered_multiset& rhs)operator !=543,13390
bool operator==(const unordered_multiset<Key, Hash, keyEqual>& lhs,operator ==550,13608
bool operator!=(const unordered_multiset<Key, Hash, keyEqual>& lhs,operator !=557,13821
void swap(unordered_multiset<Key, Hash, keyEqual>& lhs,swap564,14034

MySTL/.old/SomeAlgorithm/pow.cc,92
#define NOT_FOUND NOT_FOUND5,79
int pow(int base, int b)pow8,122
int main()main19,297

MySTL/.old/SomeAlgorithm/CMakeLists.txt,421
project(SomeAlgorithm)SomeAlgorithm2,37
set(CMAKE_CXX_COMPILER clang++)CMAKE_CXX_COMPILER4,61
set(EXECUTABLE_OUTPUT_PATH ${EXEC_DIR}/SomeAlgorithm)EXECUTABLE_OUTPUT_PATH7,132
add_executable( BinarySearch BinarySearch.cc)BinarySearch9,187
add_executable( example      example.cc     )example10,233
add_executable( gcd          gcd.cc         )gcd11,279
add_executable( pow          pow.cc         )pow12,325

MySTL/.old/SomeAlgorithm/BinarySearch.cc,142
#define NOT_FOUND NOT_FOUND5,79
int binarySearch(const vector<Comparable>& a, const Comparable x)binarySearch9,152
int main()main29,547

MySTL/.old/SomeAlgorithm/gcd.cc,108
#define NOT_FOUND NOT_FOUND5,79
long long gcd (long long m, long long n)gcd9,123
int main()main19,272

MySTL/.old/SomeAlgorithm/example.cc,475
#define NOT_FOUND NOT_FOUND5,79
void changListValue(Constains& lst, int p)changListValue9,151
void removeEveryOtherItem(Contains& lst)removeEveryOtherItem17,310
void print(Contains& c, ostream& os = cout)print40,754
int main()main63,1189
int f(vector<int>& vec)f85,1738
int f1(vector<int>& vec)f1104,2088
int f_sum(const vector<int>& vec, int left, int right)f_sum118,2377
int fs(const vector<int>& vec)fs151,3173
int f4(const vector<int>& vec)f4157,3250

MySTL/.old/tmp.cc,118
class A{A6,61
    void ps(T t)ps8,80
class A<int>{A15,151
    void ps( int t )ps17,175
int main()main23,239

MySTL/.old/build.sh,0

MySTL/.old/HashTable/hashtable.hh,17903
#define MYTINYSTL_HASHTABLE_H_MYTINYSTL_HASHTABLE_H_2,31
struct m_integral_constantm_integral_constant18,381
  static constexpr T value = v;value20,410
using m_bool_constant = m_integral_constant<bool, b>;m_bool_constant24,464
typedef m_bool_constant<true>  m_true_type;m_true_type26,519
typedef m_bool_constant<false> m_false_type;m_false_type27,563
struct is_pair final : m_false_type {};is_pair30,627
struct is_pair<std::pair<T1, T2>> final : m_true_type{} ;is_pair33,696
struct value_traits_imp {value_traits_imp59,1224
    using key_type    = T;key_type60,1250
    using mapped_type = T;mapped_type61,1277
    using value_type  = T;value_type62,1304
    static const key_type& get_key( const T1& value )get_key65,1355
    static const key_type& get_value( const T1& value )get_value71,1467
struct value_traits_imp<T, true>{value_traits_imp78,1580
    using key_type    = typename std::remove_cv<typename T::first_type>::type;key_type80,1643
    using mapped_type = typename T::second_type;mapped_type81,1722
    using value_type  = T;value_type82,1771
    static const key_type& get_key( const T1& value)get_key85,1822
    static const value_type& get_value( const T1& value )get_value91,1939
struct value_traits{value_traits99,2055
    static constexpr bool is_map = is_pair<T>::value;is_map100,2076
    using value_traits_type = value_traits_imp<T, is_map>;value_traits_type102,2131
    using key_type    = typename value_traits_type::key_type;key_type104,2191
    using mapped_type = typename value_traits_type::mapped_type;mapped_type105,2253
    using value_type  = typename value_traits_type::value_type;value_type106,2318
    static const key_type& get_key(const T1& value)get_key109,2406
    static const key_type& get_value(const T1& value)get_value115,2544
struct hashtableNode{hashtableNode125,2712
    T              value;value126,2734
    hashtableNode* next;next127,2760
    hashtableNode( const T& n ) : value(n), next(nullptr){}hashtableNode130,2817
    hashtableNode( const hashtableNode& node ) : value( node.value), next(node.next){}hashtableNode132,2878
    hashtableNode( hashtableNode&& node ) : value( std::move(node.value)), next(node.next)hashtableNode133,2965
struct iterator_base{iterator_base142,3164
    using hashtable_type         = hashtable<T, hashFun, keyEqual>;hashtable_type143,3186
    using base                   = iterator_base<T, hashFun, keyEqual>;base144,3254
    using node_ptr_type          = hashtableNode<T>*;node_ptr_type145,3326
    using contain_ptr_type       = hashtable_type*;contain_ptr_type146,3380
    using const_node_ptr_type    = const node_ptr_type;const_node_ptr_type147,3432
    using const_contain_ptr_type = const contain_ptr_type;const_contain_ptr_type148,3488
    using iterator_type          = iterator<T, hashFun, keyEqual>;iterator_type149,3547
    using const_iterator_type    = const_iterator<T, hashFun, keyEqual>;const_iterator_type150,3614
    node_ptr_type    node_ptr;  //迭代器指向的节点node_ptr152,3688
    contain_ptr_type hashtable_ptr; //保持与容器的连接hashtable_ptr153,3747
    bool operator==(const base& rhs)operator ==157,3843
    bool operator!=(const base& rhs)operator !=160,3922
struct iterator : public iterator_base<T, hashFun, keyEqual>{iterator165,4053
    using base                = iterator_base<T, hashFun, keyEqual>;base166,4115
    using hashtable_type      = typename base::hashtable_type;hashtable_type167,4184
    using iterator_type       = typename base::iterator_type;iterator_type168,4247
    using const_iterator_type = typename base::const_iterator_type;const_iterator_type169,4309
    using node_ptr_type       = typename base::node_ptr_type;node_ptr_type170,4377
    using contain_ptr_type    = typename base::contain_ptr_type;contain_ptr_type171,4439
    using value_traits_type = value_traits<T>;value_traits_type173,4505
    using value_type        = T;value_type174,4552
    using value_ptr_type    = value_type*;value_ptr_type175,4585
    using value_reference   = value_type&;value_reference176,4628
    iterator( node_ptr_type n, contain_ptr_type t )iterator183,4757
    iterator( const iterator& rhs )iterator189,4871
    iterator( const const_iterator_type& rhs )iterator196,4997
    iterator& operator=( const iterator& rhs )operator =203,5134
    iterator& operator=( const const_iterator_type& rhs )operator =213,5347
    value_reference operator*() const { return node_ptr -> value; }operator *224,5572
    value_ptr_type operator->() const  { return &(operator*());}operator ->226,5641
    iterator& operator++()operator ++229,5748
    iterator operator++(int)operator ++244,6304
struct const_iterator : public iterator_base<T, hashFun, keyEqual> {const_iterator253,6466
    using base                = iterator_base<T, hashFun, keyEqual>;base254,6535
    using hashtable_type      = typename base::hashtable_type;hashtable_type255,6604
    using iterator_type       = typename base::iterator_type;iterator_type256,6667
    using const_iterator_type = typename base::const_iterator_type;const_iterator_type257,6729
    using node_ptr_type       = typename base::const_node_ptr_type;node_ptr_type258,6797
    using contain_ptr_type    = typename base::const_contain_ptr_type;contain_ptr_type259,6865
    using value_traits_type = value_traits<T>;value_traits_type261,6937
    using value_type        = T;value_type262,6984
    using value_ptr_type    = const value_type*;value_ptr_type263,7017
    using value_reference   = const value_type&;value_reference264,7066
    const_iterator( node_ptr_type n, contain_ptr_type t )const_iterator270,7206
    const_iterator( const iterator_type& rhs )const_iterator277,7332
    const_iterator( const const_iterator_type & rhs )const_iterator283,7473
    const_iterator& operator=( const iterator_type& rhs )operator =289,7621
    const_iterator_type operator=( const const_iterator_type & rhs )operator =299,7850
    value_reference operator*() const { return node_ptr -> value;}operator *309,8090
    value_ptr_type operator->() const { return &(operator*()); }operator ->310,8157
    const_iterator_type& operator++()operator ++312,8223
    const_iterator_type operator++( int )operator ++329,8723
struct local_iterator {local_iterator338,8878
    using value_type      = T;value_type339,8902
    using pointer_type    = T*;pointer_type340,8933
    using reference_type  = T&;reference_type341,8965
    using difference_type = std::ptrdiff_t;difference_type342,8997
    using node_ptr_type   = hashtableNode<T>*;node_ptr_type343,9041
    using self                      = local_iterator<T>;self345,9089
    using local_iterator_type       = local_iterator<T>;local_iterator_type346,9146
    using const_local_iterator_type = const_local_iterator<T>;const_local_iterator_type347,9203
    node_ptr_type node_ptr;node_ptr349,9267
    local_iterator( node_ptr_type n ):node_ptr(n) {}local_iterator351,9296
    local_iterator(const local_iterator_type& rhs ):node_ptr(rhs.node_ptr) {}local_iterator353,9350
    local_iterator(const const_local_iterator_type& rhs ): node_ptr(rhs.node_ptr) {}local_iterator355,9429
    reference_type operator*() const { return node_ptr -> value; };operator *357,9515
    pointer_type operator->() const { return &(operator*());}operator ->358,9583
    self& operator++()operator ++360,9646
    self operator++( int )operator ++367,9814
    bool operator==( const self& rhs ) const { return node_ptr == rhs.node_ptr; }operator ==374,9916
    bool operator!=( const self& rhs ) const { return node_ptr != rhs.node_ptr; }operator !=375,9998
struct const_local_iterator {const_local_iterator379,10103
    using value_type      = T;value_type380,10133
    using pointer_type    = const T*;pointer_type381,10164
    using reference_type  = const T&;reference_type382,10202
    using difference_type = std::ptrdiff_t;difference_type383,10240
    using node_ptr_type   = const hashtableNode<T>*;node_ptr_type384,10284
    using self                      = const_local_iterator<T>;self386,10338
    using local_iterator_type       = local_iterator<T>;local_iterator_type387,10401
    using const_local_iterator_type = const_local_iterator<T>;const_local_iterator_type388,10458
    node_ptr_type node_ptr;node_ptr390,10522
    const_local_iterator( node_ptr_type n ):node_ptr(n) {}const_local_iterator392,10551
    const_local_iterator(const local_iterator_type& rhs ):node_ptr(rhs.node_ptr) {}const_local_iterator394,10611
    const_local_iterator(const const_local_iterator_type& rhs ): node_ptr(rhs.node_ptr) {}const_local_iterator396,10696
    reference_type operator*() const { return node_ptr -> value; };operator *398,10788
    pointer_type operator->() const { return &(operator*());}operator ->399,10856
    self& operator++()operator ++401,10919
    self operator++( int )operator ++408,11087
    bool operator==( const self& rhs ) const { return node_ptr == rhs.node_ptr; }operator ==415,11189
    bool operator!=( const self& rhs ) const { return node_ptr != rhs.node_ptr; }operator !=416,11271
static constexpr unsigned long long PRIME_NUM = 99;PRIME_NUM419,11357
static constexpr size_t prime_list[] = {prime_list421,11435
inline size_t next_prime( size_t n )next_prime444,13125
class hashtable{hashtable455,13407
    using value_traits_type = value_traits<T>;value_traits_type460,13541
    using key_type          = typename value_traits_type::key_type;key_type461,13588
    using mapped_type       = typename value_traits_type::mapped_type;mapped_type462,13656
    using value_type        = typename value_traits_type::value_type;value_type463,13727
    using hasher            = hashFun;hasher464,13797
    using key_equal         = keyEqual;key_equal465,13836
    using node_type     = hashtableNode<T>;node_type468,13878
    using node_ptr_type = node_type*;node_ptr_type469,13922
    using bucket_type   = std::vector<node_ptr_type>;bucket_type470,13960
    using allocator_type      = std::allocator<T>;allocator_type472,14015
    using data_allocator_type = std::allocator<T>;data_allocator_type473,14066
    using node_allocator_type = std::allocator<node_type>;node_allocator_type474,14117
    using pointer_type         = typename allocator_type::pointer;pointer_type476,14177
    using const_pointer_type   = typename allocator_type::const_pointer;const_pointer_type477,14244
    using reference_type       = typename allocator_type::reference;reference_type478,14317
    using const_reference_type = typename allocator_type::const_reference;const_reference_type479,14386
    using size_type            = typename allocator_type::size_type;size_type480,14461
    using difference_type      = typename allocator_type::difference_type;difference_type481,14530
    using iterator             = iterator<T, hashFun, keyEqual>;iterator483,14606
    using const_iterator       = const_iterator<T, hashFun, keyEqual> ;const_iterator484,14671
    using local_iterator       = local_iterator<T> ;local_iterator485,14743
    using const_local_iterator = const_local_iterator<T> ;const_local_iterator486,14796
    using cv_key_type = typename std::remove_cv<typename T::first_type>::type;cv_key_type489,14857
    hashtableNode<T>*               node_ptr;node_ptr491,14947
    std::vector<hashtableNode<T> *> buckets;buckets492,14993
    size_t                          m_size;m_size493,15038
    size_t                          m_bucket_size;m_bucket_size494,15082
    float                           m_load_factor;m_load_factor495,15133
    hasher                          m_hash;m_hash496,15184
    keyEqual                        equal;equal497,15228
    bool is_equal( const cv_key_type& key1, const cv_key_type& key2  )is_equal499,15282
    bool is_equal( const cv_key_type& key1, const cv_key_type& key2  ) constis_equal504,15402
    const_iterator M_cit( node_ptr_type node ) const noexceptM_cit509,15528
    iterator M_begin() noexceptM_begin514,15670
    const_iterator M_begin() const noexceptM_begin524,15889
    explicit hashtable( size_t bucket_count,hashtable533,16111
    hashtable( const hashtable& rhs )hashtable541,16399
    hashtable( hashtable&& rhs ) noexcepthashtable547,16528
    hashtable& operator=(const hashtable& rhs )operator =560,16916
    hashtable& operator=(hashtable&& rhs ) noexceptoperator =570,17105
    ~hashtable() { clear(); }~hashtable577,17255
    iterator begin() noexceptbegin579,17286
    const_iterator begin() const noexceptbegin581,17342
    iterator end() noexceptend583,17410
    const_iterator end() const noexceptend585,17480
    const_iterator cbegin() const noexceptcbegin588,17554
    const_iterator cend() const noexceptcend590,17621
    bool empty() const noexcept { return m_size == 0; }empty594,17714
    size_t size() const noexcept { return m_size; }size595,17770
    size_t max_size() const noexcept { return static_cast<size_t>(-1); }max_size596,17822
    iterator emplace_multi( Args&& ...args )emplace_multi600,17944
    std::pair<iterator, bool> emplace_unique( Args&& ... args )emplace_unique614,18373
    iterator emplace_multi_use_hint(const_iterator /*hint*/, Args &&...args)emplace_multi_use_hint628,18846
    iterator emplace_unique_use_hint(const_iterator /*hint*/, Args &&...args)emplace_unique_use_hint634,19022
    iterator insert_multi_noresize( const value_type& value )insert_multi_noresize639,19177
    std::pair<iterator, bool> insert_unique_noresize( const value_type& value )insert_unique_noresize658,19845
    iterator insert_multi( const value_type& value )insert_multi674,20444
    iterator insert_multi(value_type&& value)insert_multi680,20584
    std::pair<iterator, bool> insert_unique( const value_type& value )insert_unique685,20691
    std::pair<iterator, bool> insert_unique( value_type&& value )insert_unique691,20850
    iterator insert_multi_use_hint(const_iterator /*hint*/,insert_multi_use_hint696,20981
    iterator insert_multi_use_hint(const_iterator /*hint*/,insert_multi_use_hint701,21147
    iterator insert_unique_use_hint(const_iterator /*hint*/,insert_unique_use_hint707,21323
    iterator insert_unique_use_hint(const_iterator /*hint*/,insert_unique_use_hint712,21498
    void insert_multi( T1 first, T1 last )insert_multi719,21698
    void insert_unique(T1 first, T1 last)insert_unique726,21890
    void erase( const_iterator position )erase733,22076
    void erase( const_iterator first, const_iterator last )erase761,22911
    size_t erase_multi( const key_type& key )erase_multi786,23856
    size_t erase_unique( const key_type& key )erase_unique796,24114
    void clear()clear823,24994
    void swap( hashtable& rhs ) noexceptswap839,25435
    size_t count( const key_type& key ) constcount852,25819
    iterator find( const key_type& key )find865,26167
    const_iterator find( const key_type& key ) constfind873,26449
    std::pair<iterator, iterator> equal_range_multi( const key_type& key )equal_range_multi881,26730
    std::pair<const_iterator, const_iterator> equal_range_multi(const key_type& key) constequal_range_multi902,27645
    std::pair<iterator, iterator> equal_range_unique( const key_type& key )equal_range_unique923,28550
    std::pair<const_iterator, const_iterator> equal_range_unique(const key_type& key ) constequal_range_unique942,29322
    local_iterator begin( size_t n ) noexceptbegin963,30098
    local_iterator end( size_t n ) noexceptend969,30240
    const_local_iterator begin( size_t n ) const noexceptbegin975,30378
    const_local_iterator cbegin( size_t n ) const noexceptcbegin980,30532
    const_local_iterator end( size_t n ) const noexceptend986,30690
    const_local_iterator cend( size_t n ) const noexceptcend992,30840
    size_t bucket_count() const noexceptbucket_count998,30991
    size_t max_bucket_count() const noexceptmax_bucket_count1002,31074
    size_t bucket_size( size_t n ) const noexceptbucket_size1007,31174
    size_t bucket( const key_type& key ) constbucket1016,31371
    float load_factor() const noexceptload_factor1022,31475
    float max_load_factor() const noexceptmax_load_factor1027,31614
    void max_load_factor( float n )max_load_factor1032,31700
    void rehash( size_t count )rehash1039,31867
    void reserve(size_t count )reserve1052,32238
    hasher hash_fcn() consthash_fcn1056,32360
    key_equal key_eq() constkey_eq1060,32423
    void init( size_t n )init1066,32498
    void copy_init( const hashtable& ht )copy_init1082,32848
    node_ptr_type create_node(Args&& ... args )create_node1111,33807
    void destroy_node(node_ptr_type node )destroy_node1126,34209
    size_t next_size( size_t n ) constnext_size1133,34403
    size_t hash( const key_type& key, size_t n ) consthash1138,34485
    size_t hash( const key_type& key ) consthash1143,34585
    void rehash_if_need(size_t n )rehash_if_need1148,34687
    void copy_insert_multi( T1 first, T1 last )copy_insert_multi1158,34960
    void copy_insert_unique(T1 first, T1 last )copy_insert_unique1176,35491
    std::pair<iterator, bool> insert_node_unique(node_ptr_type np )insert_node_unique1192,35951
    void replace_bucket(size_t bucket_count )replace_bucket1213,36660
    void erase_bucket(size_t n, node_ptr_type first, node_ptr_type last )erase_bucket1242,37869
    void erase_bucket(size_t n, node_ptr_type last)erase_bucket1260,38396
    bool equal_to_multi( const hashtable& other )equal_to_multi1272,38678
    bool equal_to_unique(const hashtable& other)equal_to_unique1287,39261
void swap( hashtable<T, hashFun, keyEqual> & lhs,swap1302,39679

MySTL/.old/HashTable/american-english,0

MySTL/.old/HashTable/HashTable.cc,1268
class hashd{hashd12,179
class hashd<string> {hashd20,379
    size_t operator()( const string & key )operator ()22,411
class Employee {Employee33,595
    const string & get_name() constget_name35,622
    bool operator==( const Employee & rhs )operator ==40,692
    bool operator!=( const Employee & rhs )operator !=45,798
    string name;name50,899
class hashd<Employee>hashd54,932
    size_t operator()( const Employee & item )operator ()57,966
class HashTable{HashTable68,1149
    explicit HashTable( int size =  101 ):theLists(size){}HashTable70,1176
    size_t size() constsize72,1236
    bool contains( const HashedObj & x ) constcontains78,1344
    void makeEmpty()makeEmpty84,1538
    bool insert( InsertObj && x )insert91,1677
        using U1 = typename std::remove_reference<InsertObj>::type;U194,1762
    bool remove( const HashedObj & x )remove110,2324
    vector<list<HashedObj>> theLists;theLists125,2649
    int currentSize;currentSize126,2687
    void rehash()rehash128,2709
    size_t myhash( const HashedObj & x ) constmyhash142,3076
    int nextPrime( int n )nextPrime148,3213
    bool isPrime( int n )isPrime159,3368
int main()main176,3656
void swap(HashTable<T, Hash, KeyEqual>& lhs,swap198,4115

MySTL/.old/HashTable/CukooHashTable.cc,2054
int universalHash1( int x, int A, int B, int P, int M )universalHash17,106
int universalHash( int x, int A, int B, int M )universalHash12,251
class HashFamily{HashFamily26,630
class StringHashFamily {StringHashFamily34,801
    StringHashFamily() : MULTIPLIERS( count )StringHashFamily36,836
    int getNumberOfFunctions() constgetNumberOfFunctions41,927
    void generateNewFunctions()generateNewFunctions46,999
    size_t hash( const string & x, int which ) consthash52,1117
    vector<int> MULTIPLIERS;MULTIPLIERS64,1378
    UniformRandom r;r65,1407
class CukooHashTable{CukooHashTable69,1474
    explicit CukooHashTable( int size = 101 )CukooHashTable71,1506
    void makeEmpty()makeEmpty79,1713
    bool contains( const AnyType & x ) constcontains86,1840
    bool remove( const AnyType & x )remove91,1933
    bool insert( const AnyType & x )insert103,2178
    struct HashEntry{HashEntry117,2437
        AnyType element;element118,2459
        bool isActive;isActive119,2484
        HashEntry( const AnyType & e = AnyType{}, bool a = false )HashEntry121,2508
        HashEntry( AnyType&& e, bool a = false )HashEntry124,2625
    bool insertHelper1( AnyType && xx )insertHelper1130,2790
    bool isActive( int currentPos ) constisActive168,3848
    size_t myhash( const AnyType & x, int which ) constmyhash173,3956
    int findPos( const AnyType & x ) constfindPos178,4087
    void expand()expand190,4357
    void rehash()rehash195,4450
    void rehash( int newSize )rehash201,4559
    int nextPrime( int n )nextPrime219,4944
    bool isPrime( int n )isPrime230,5099
    static constexpr double MAX_LOAD       = 0.40;MAX_LOAD245,5383
    static constexpr int    ALLOW_REHASHES = 5;ALLOW_REHASHES246,5434
    vector<HashEntry> array;array248,5483
    int currentSize;currentSize249,5512
    int numHashFunctions;numHashFunctions250,5533
    int rehashes;rehashes251,5559
    UniformRandom r;r252,5577
    HashFamily hashFunctions;hashFunctions253,5598
int main()main256,5632

MySTL/.old/HashTable/CMakeLists.txt,346
project(HashTable)HashTable2,37
set(CMAKE_CXX_COMPILER clang++)CMAKE_CXX_COMPILER4,57
set(EXECUTABLE_OUTPUT_PATH ${EXEC_DIR}/HashTable)EXECUTABLE_OUTPUT_PATH8,129
add_executable( CukooHashTable          CukooHashTable.cc          )CukooHashTable11,204
add_executable( HashTable               HashTable.cc               )HashTable13,343

MySTL/.old/HashTable/OpenAddressingHashtable.cc,1520
class hashd{hashd10,162
class hashd<int>{hashd16,246
    size_t operator() ( const int & k ) constoperator () 18,274
class hashd<string> {hashd26,376
    size_t operator()( const string & key )operator ()27,398
class HashTable {HashTable42,694
    explicit HashTable( int size = 101 )HashTable44,722
    bool contains( const HashObj & x ) constcontains47,822
    void makeEmpty()makeEmpty50,909
    bool insert( const HashObj & x )insert57,1036
    bool insert( HashObj && x )insert73,1353
    bool remove( const HashObj & x )remove89,1704
    enum EntryType { ACTIVE, EMPTY, DELETED };EntryType101,1926
    enum EntryType { ACTIVE, EMPTY, DELETED };ACTIVE101,1926
    enum EntryType { ACTIVE, EMPTY, DELETED };EMPTY101,1926
    enum EntryType { ACTIVE, EMPTY, DELETED };DELETED101,1926
    struct HashEntry{HashEntry104,1985
        HashObj element;element105,2007
        EntryType info;info106,2032
        HashEntry( const HashObj & e = HashObj{}, EntryType i = EMPTY )HashEntry108,2057
        HashEntry( HashObj && e, EntryType i = EMPTY )HashEntry110,2175
    vector<HashEntry> array;array115,2298
    int currentSize;currentSize116,2327
    bool isActive( int currentPos ) constisActive118,2349
    int findPos( const HashObj & x ) constfindPos122,2456
    void rehash()rehash137,2850
    size_t myhash( const HashObj & x ) constmyhash151,3210
    int nextPrime( int n )nextPrime158,3341
    bool isPrime( int n )isPrime169,3496
int main()main185,3783

MySTL/.old/HashTable/hashtable.cpp,17867
struct m_integral_constantm_integral_constant13,289
  static constexpr T value = v;value15,318
using m_bool_constant = m_integral_constant<bool, b>;m_bool_constant19,372
typedef m_bool_constant<true>  m_true_type;m_true_type21,427
typedef m_bool_constant<false> m_false_type;m_false_type22,471
struct is_pair final : m_false_type {};is_pair25,535
struct is_pair<std::pair<T1, T2>> final : m_true_type{} ;is_pair28,604
struct value_traits_imp {value_traits_imp54,1132
    using key_type    = T;key_type55,1158
    using mapped_type = T;mapped_type56,1185
    using value_type  = T;value_type57,1212
    static const key_type& get_key( const T1& value )get_key60,1263
    static const key_type& get_value( const T1& value )get_value66,1375
struct value_traits_imp<T, true>{value_traits_imp73,1488
    using key_type    = typename std::remove_cv<typename T::first_type>::type;key_type75,1551
    using mapped_type = typename T::second_type;mapped_type76,1630
    using value_type  = T;value_type77,1679
    static const key_type& get_key( const T1& value)get_key80,1730
    static const value_type& get_value( const T1& value )get_value86,1847
struct value_traits{value_traits94,1963
    static constexpr bool is_map = is_pair<T>::value;is_map95,1984
    using value_traits_type = value_traits_imp<T, is_map>;value_traits_type97,2039
    using key_type    = typename value_traits_type::key_type;key_type99,2099
    using mapped_type = typename value_traits_type::mapped_type;mapped_type100,2161
    using value_type  = typename value_traits_type::value_type;value_type101,2226
    static const key_type& get_key(const T1& value)get_key104,2314
    static const key_type& get_value(const T1& value)get_value110,2452
struct hashtableNode{hashtableNode120,2620
    T              value;value121,2642
    hashtableNode* next;next122,2668
    hashtableNode( const T& n ) : value(n), next(nullptr){}hashtableNode125,2725
    hashtableNode( const hashtableNode& node ) : value( node.value), next(node.next){}hashtableNode127,2786
    hashtableNode( hashtableNode&& node ) : value( std::move(node.value)), next(node.next)hashtableNode128,2873
struct iterator_base{iterator_base137,3072
    using hashtable_type         = hashtable<T, hashFun, keyEqual>;hashtable_type138,3094
    using base                   = iterator_base<T, hashFun, keyEqual>;base139,3162
    using node_ptr_type          = hashtableNode<T>*;node_ptr_type140,3234
    using contain_ptr_type       = hashtable_type*;contain_ptr_type141,3288
    using const_node_ptr_type    = const node_ptr_type;const_node_ptr_type142,3340
    using const_contain_ptr_type = const contain_ptr_type;const_contain_ptr_type143,3396
    using iterator_type          = iterator<T, hashFun, keyEqual>;iterator_type144,3455
    using const_iterator_type    = const_iterator<T, hashFun, keyEqual>;const_iterator_type145,3522
    node_ptr_type    node_ptr;  //迭代器指向的节点node_ptr147,3596
    contain_ptr_type hashtable_ptr; //保持与容器的连接hashtable_ptr148,3655
    bool operator==(const base& rhs)operator ==152,3751
    bool operator!=(const base& rhs)operator !=155,3830
struct iterator : public iterator_base<T, hashFun, keyEqual>{iterator160,3961
    using base                = iterator_base<T, hashFun, keyEqual>;base161,4023
    using hashtable_type      = typename base::hashtable_type;hashtable_type162,4092
    using iterator_type       = typename base::iterator_type;iterator_type163,4155
    using const_iterator_type = typename base::const_iterator_type;const_iterator_type164,4217
    using node_ptr_type       = typename base::node_ptr_type;node_ptr_type165,4285
    using contain_ptr_type    = typename base::contain_ptr_type;contain_ptr_type166,4347
    using value_traits_type = value_traits<T>;value_traits_type168,4413
    using value_type        = T;value_type169,4460
    using value_ptr_type    = value_type*;value_ptr_type170,4493
    using value_reference   = value_type&;value_reference171,4536
    iterator( node_ptr_type n, contain_ptr_type t )iterator178,4665
    iterator( const iterator& rhs )iterator184,4779
    iterator( const const_iterator_type& rhs )iterator191,4905
    iterator& operator=( const iterator& rhs )operator =198,5042
    iterator& operator=( const const_iterator_type& rhs )operator =208,5255
    value_reference operator*() const { return node_ptr -> value; }operator *219,5480
    value_ptr_type operator->() const  { return &(operator*());}operator ->221,5549
    iterator& operator++()operator ++224,5656
    iterator operator++(int)operator ++239,6212
struct const_iterator : public iterator_base<T, hashFun, keyEqual> {const_iterator248,6374
    using base                = iterator_base<T, hashFun, keyEqual>;base249,6443
    using hashtable_type      = typename base::hashtable_type;hashtable_type250,6512
    using iterator_type       = typename base::iterator_type;iterator_type251,6575
    using const_iterator_type = typename base::const_iterator_type;const_iterator_type252,6637
    using node_ptr_type       = typename base::const_node_ptr_type;node_ptr_type253,6705
    using contain_ptr_type    = typename base::const_contain_ptr_type;contain_ptr_type254,6773
    using value_traits_type = value_traits<T>;value_traits_type256,6845
    using value_type        = T;value_type257,6892
    using value_ptr_type    = const value_type*;value_ptr_type258,6925
    using value_reference   = const value_type&;value_reference259,6974
    const_iterator( node_ptr_type n, contain_ptr_type t )const_iterator265,7114
    const_iterator( const iterator_type& rhs )const_iterator272,7240
    const_iterator( const const_iterator_type & rhs )const_iterator278,7381
    const_iterator& operator=( const iterator_type& rhs )operator =284,7529
    const_iterator_type operator=( const const_iterator_type & rhs )operator =294,7758
    value_reference operator*() const { return node_ptr -> value;}operator *304,7998
    value_ptr_type operator->() const { return &(operator*()); }operator ->305,8065
    const_iterator_type& operator++()operator ++307,8131
    const_iterator_type operator++( int )operator ++324,8631
struct local_iterator {local_iterator333,8786
    using value_type      = T;value_type334,8810
    using pointer_type    = T*;pointer_type335,8841
    using reference_type  = T&;reference_type336,8873
    using difference_type = std::ptrdiff_t;difference_type337,8905
    using node_ptr_type   = hashtableNode<T>*;node_ptr_type338,8949
    using self                      = local_iterator<T>;self340,8997
    using local_iterator_type       = local_iterator<T>;local_iterator_type341,9054
    using const_local_iterator_type = const_local_iterator<T>;const_local_iterator_type342,9111
    node_ptr_type node_ptr;node_ptr344,9175
    local_iterator( node_ptr_type n ):node_ptr(n) {}local_iterator346,9204
    local_iterator(const local_iterator_type& rhs ):node_ptr(rhs.node_ptr) {}local_iterator348,9258
    local_iterator(const const_local_iterator_type& rhs ): node_ptr(rhs.node_ptr) {}local_iterator350,9337
    reference_type operator*() const { return node_ptr -> value; };operator *352,9423
    pointer_type operator->() const { return &(operator*());}operator ->353,9491
    self& operator++()operator ++355,9554
    self operator++( int )operator ++362,9722
    bool operator==( const self& rhs ) const { return node_ptr == rhs.node_ptr; }operator ==369,9824
    bool operator!=( const self& rhs ) const { return node_ptr != rhs.node_ptr; }operator !=370,9906
struct const_local_iterator {const_local_iterator374,10011
    using value_type      = T;value_type375,10041
    using pointer_type    = const T*;pointer_type376,10072
    using reference_type  = const T&;reference_type377,10110
    using difference_type = std::ptrdiff_t;difference_type378,10148
    using node_ptr_type   = const hashtableNode<T>*;node_ptr_type379,10192
    using self                      = const_local_iterator<T>;self381,10246
    using local_iterator_type       = local_iterator<T>;local_iterator_type382,10309
    using const_local_iterator_type = const_local_iterator<T>;const_local_iterator_type383,10366
    node_ptr_type node_ptr;node_ptr385,10430
    const_local_iterator( node_ptr_type n ):node_ptr(n) {}const_local_iterator387,10459
    const_local_iterator(const local_iterator_type& rhs ):node_ptr(rhs.node_ptr) {}const_local_iterator389,10519
    const_local_iterator(const const_local_iterator_type& rhs ): node_ptr(rhs.node_ptr) {}const_local_iterator391,10604
    reference_type operator*() const { return node_ptr -> value; };operator *393,10696
    pointer_type operator->() const { return &(operator*());}operator ->394,10764
    self& operator++()operator ++396,10827
    self operator++( int )operator ++403,10995
    bool operator==( const self& rhs ) const { return node_ptr == rhs.node_ptr; }operator ==410,11097
    bool operator!=( const self& rhs ) const { return node_ptr != rhs.node_ptr; }operator !=411,11179
static constexpr unsigned long long PRIME_NUM = 99;PRIME_NUM414,11265
static constexpr size_t prime_list[] = {prime_list416,11343
inline size_t next_prime( size_t n )next_prime439,13033
class hashtable{hashtable450,13315
    using value_traits_type = value_traits<T>;value_traits_type454,13439
    using key_type          = typename value_traits_type::key_type;key_type455,13486
    using mapped_type       = typename value_traits_type::mapped_type;mapped_type456,13554
    using value_type        = typename value_traits_type::value_type;value_type457,13625
    using hasher            = hashFun;hasher458,13695
    using key_equal         = keyEqual;key_equal459,13734
    using node_type     = hashtableNode<T>;node_type462,13776
    using node_ptr_type = node_type*;node_ptr_type463,13820
    using bucket_type   = std::vector<node_ptr_type>;bucket_type464,13858
    using allocator_type      = std::allocator<T>;allocator_type466,13913
    using data_allocator_type = std::allocator<T>;data_allocator_type467,13964
    using node_allocator_type = std::allocator<node_type>;node_allocator_type468,14015
    using pointer_type         = typename allocator_type::pointer;pointer_type470,14075
    using const_pointer_type   = typename allocator_type::const_pointer;const_pointer_type471,14142
    using reference_type       = typename allocator_type::reference;reference_type472,14215
    using const_reference_type = typename allocator_type::const_reference;const_reference_type473,14284
    using size_type            = typename allocator_type::size_type;size_type474,14359
    using difference_type      = typename allocator_type::difference_type;difference_type475,14428
    using iterator             = iterator<T, hashFun, keyEqual>;iterator477,14504
    using const_iterator       = const_iterator<T, hashFun, keyEqual> ;const_iterator478,14569
    using local_iterator       = local_iterator<T> ;local_iterator479,14641
    using const_local_iterator = const_local_iterator<T> ;const_local_iterator480,14694
    using cv_key_type = typename std::remove_cv<typename T::first_type>::type;cv_key_type483,14755
    hashtableNode<T>*               node_ptr;node_ptr485,14845
    std::vector<hashtableNode<T> *> buckets;buckets486,14891
    size_t                          m_size;m_size487,14936
    size_t                          m_bucket_size;m_bucket_size488,14980
    float                           m_load_factor;m_load_factor489,15031
    hasher                          m_hash;m_hash490,15082
    keyEqual                        equal;equal491,15126
    bool is_equal( const cv_key_type& key1, const cv_key_type& key2  )is_equal493,15180
    bool is_equal( const cv_key_type& key1, const cv_key_type& key2  ) constis_equal498,15300
    const_iterator M_cit( node_ptr_type node ) const noexceptM_cit503,15426
    iterator M_begin() noexceptM_begin508,15568
    const_iterator M_begin() const noexceptM_begin518,15787
    explicit hashtable( size_t bucket_count,hashtable527,16009
    hashtable( const hashtable& rhs )hashtable535,16297
    hashtable( hashtable&& rhs ) noexcepthashtable541,16426
    hashtable& operator=(const hashtable& rhs )operator =554,16814
    hashtable& operator=(hashtable&& rhs ) noexceptoperator =564,17003
    ~hashtable() { clear(); }~hashtable571,17153
    iterator begin() noexceptbegin573,17184
    const_iterator begin() const noexceptbegin575,17240
    iterator end() noexceptend577,17308
    const_iterator end() const noexceptend579,17378
    const_iterator cbegin() const noexceptcbegin582,17452
    const_iterator cend() const noexceptcend584,17519
    bool empty() const noexcept { return m_size == 0; }empty588,17612
    size_t size() const noexcept { return m_size; }size589,17668
    size_t max_size() const noexcept { return static_cast<size_t>(-1); }max_size590,17720
    iterator emplace_multi( Args&& ...args )emplace_multi594,17842
    std::pair<iterator, bool> emplace_unique( Args&& ... args )emplace_unique608,18271
    iterator emplace_multi_use_hint(const_iterator /*hint*/, Args &&...args)emplace_multi_use_hint622,18744
    iterator emplace_unique_use_hint(const_iterator /*hint*/, Args &&...args)emplace_unique_use_hint628,18920
    iterator insert_multi_noresize( const value_type& value )insert_multi_noresize633,19075
    std::pair<iterator, bool> insert_unique_noresize( const value_type& value )insert_unique_noresize652,19743
    iterator insert_multi( const value_type& value )insert_multi668,20342
    iterator insert_multi(value_type&& value)insert_multi674,20482
    std::pair<iterator, bool> insert_unique( const value_type& value )insert_unique679,20589
    std::pair<iterator, bool> insert_unique( value_type&& value )insert_unique685,20748
    iterator insert_multi_use_hint(const_iterator /*hint*/,insert_multi_use_hint690,20879
    iterator insert_multi_use_hint(const_iterator /*hint*/,insert_multi_use_hint695,21045
    iterator insert_unique_use_hint(const_iterator /*hint*/,insert_unique_use_hint701,21221
    iterator insert_unique_use_hint(const_iterator /*hint*/,insert_unique_use_hint706,21396
    void insert_multi( T1 first, T1 last )insert_multi713,21596
    void insert_unique(T1 first, T1 last)insert_unique720,21788
    void erase( const_iterator position )erase727,21974
    void erase( const_iterator first, const_iterator last )erase755,22809
    size_t erase_multi( const key_type& key )erase_multi780,23754
    size_t erase_unique( const key_type& key )erase_unique790,24012
    void clear()clear817,24892
    void swap( hashtable& rhs ) noexceptswap833,25333
    size_t count( const key_type& key ) constcount846,25717
    iterator find( const key_type& key )find859,26065
    const_iterator find( const key_type& key ) constfind867,26347
    std::pair<iterator, iterator> equal_range_multi( const key_type& key )equal_range_multi875,26628
    std::pair<const_iterator, const_iterator> equal_range_multi(const key_type& key) constequal_range_multi896,27543
    std::pair<iterator, iterator> equal_range_unique( const key_type& key )equal_range_unique917,28448
    std::pair<const_iterator, const_iterator> equal_range_unique(const key_type& key ) constequal_range_unique936,29220
    local_iterator begin( size_t n ) noexceptbegin957,29996
    local_iterator end( size_t n ) noexceptend963,30138
    const_local_iterator begin( size_t n ) const noexceptbegin969,30276
    const_local_iterator cbegin( size_t n ) const noexceptcbegin974,30430
    const_local_iterator end( size_t n ) const noexceptend980,30588
    const_local_iterator cend( size_t n ) const noexceptcend986,30738
    size_t bucket_count() const noexceptbucket_count992,30889
    size_t max_bucket_count() const noexceptmax_bucket_count996,30972
    size_t bucket_size( size_t n ) const noexceptbucket_size1001,31072
    size_t bucket( const key_type& key ) constbucket1010,31269
    float load_factor() const noexceptload_factor1016,31373
    float max_load_factor() const noexceptmax_load_factor1021,31512
    void max_load_factor( float n )max_load_factor1026,31598
    void rehash( size_t count )rehash1033,31765
    void reserve(size_t count )reserve1046,32136
    hasher hash_fcn() consthash_fcn1050,32258
    key_equal key_eq() constkey_eq1054,32321
    void init( size_t n )init1060,32396
    void copy_init( const hashtable& ht )copy_init1076,32746
    node_ptr_type create_node(Args&& ... args )create_node1105,33705
    void destroy_node(node_ptr_type node )destroy_node1120,34107
    size_t next_size( size_t n ) constnext_size1127,34301
    size_t hash( const key_type& key, size_t n ) consthash1132,34383
    size_t hash( const key_type& key ) consthash1137,34483
    void rehash_if_need(size_t n )rehash_if_need1142,34585
    void copy_insert_multi( T1 first, T1 last )copy_insert_multi1152,34858
    void copy_insert_unique(T1 first, T1 last )copy_insert_unique1170,35389
    std::pair<iterator, bool> insert_node_unique(node_ptr_type np )insert_node_unique1186,35849
    void replace_bucket(size_t bucket_count )replace_bucket1207,36558
    void erase_bucket(size_t n, node_ptr_type first, node_ptr_type last )erase_bucket1236,37767
    void erase_bucket(size_t n, node_ptr_type last)erase_bucket1254,38294
    bool equal_to_multi( const hashtable& other )equal_to_multi1266,38576
    bool equal_to_unique(const hashtable& other)equal_to_unique1281,39159
void swap( hashtable<T, hashFun, keyEqual> & lhs,swap1296,39577
int main()main1302,39710

MySTL/.old/HashTable/unordered_map.h,11017
#define MYTINYSTL_UNORDERED_MAP_H_MYTINYSTL_UNORDERED_MAP_H_2,35
class unordered_map{unordered_map11,262
    using base_type = hashtable<std::pair<const Key, T>, Hash, keyEqual>;base_type13,294
    base_type m_ht;m_ht14,368
    using allocator_type = typename base_type::allocator_type;allocator_type16,398
    using key_type       = typename base_type::key_type;key_type17,461
    using mapped_type    = typename base_type::mapped_type;mapped_type18,518
    using value_type     = typename base_type::value_type;value_type19,578
    using hasher         = typename base_type::hasher;hasher20,637
    using key_equal      = typename base_type::key_equal;key_equal21,692
    using difference_type      = typename base_type::difference_type;difference_type23,751
    using pointer_type         = typename base_type::pointer_type;pointer_type24,821
    using const_pointer_type   = typename base_type::const_pointer_type;const_pointer_type25,888
    using reference_type       = typename base_type::reference_type;reference_type26,961
    using const_reference_type = typename base_type::const_reference_type;const_reference_type27,1030
    using iterator             = typename base_type::iterator;iterator29,1106
    using const_iterator       = typename base_type::const_iterator;const_iterator30,1169
    using local_iterator       = typename base_type::local_iterator;local_iterator31,1238
    using const_local_iterator = typename base_type::const_local_iterator;const_local_iterator32,1307
    allocator_type get_allocator() constget_allocator34,1383
    unordered_map()unordered_map40,1484
    explicit unordered_map(size_t bucket_count,unordered_map45,1560
    unordered_map(T1 first, T1 last,unordered_map51,1796
    unordered_map( std::initializer_list<value_type> ilist,unordered_map61,2189
    unordered_map( const unordered_map& rhs)unordered_map72,2640
    unordered_map(unordered_map&& rhs) noexceptunordered_map75,2716
    unordered_map& operator=(const unordered_map& rhs)operator =78,2807
    unordered_map& operator=(unordered_map&& rhs)operator =84,2922
    unordered_map& operator=(std::initializer_list<value_type> ilist)operator =90,3043
    iterator begin() noexceptbegin101,3374
    iterator end() noexceptend106,3446
    const_iterator begin() const noexceptbegin111,3514
    const_iterator end() const noexceptend115,3597
    const_iterator cbegin() const noexceptcbegin120,3677
    const_iterator cend() const noexceptcend124,3762
    bool empty() const noexceptempty129,3844
    size_t size() const noexceptsize134,3918
    size_t max_size() const noexceptmax_size139,3992
    std::pair<iterator, bool> emplace(Args&& ...args)emplace145,4102
    iterator emplace_hint(const_iterator hint, Args&& ...args)emplace_hint151,4262
    std::pair<iterator, bool> insert(const value_type& value)insert156,4418
    std::pair<iterator, bool> insert(value_type&& value)insert161,4535
    iterator insert( const_iterator hint, const value_type& value)insert167,4660
    iterator insert( const_iterator hint, value_type&& value)insert171,4796
    void insert(T1 first, T1 last)insert177,4963
    void erase(iterator it)erase182,5052
    void erase(iterator first, iterator last)erase187,5117
    size_t erase( const key_type& key)erase192,5209
    void clear()clear197,5300
    void swap(unordered_map& other) noexceptswap202,5352
    mapped_type& at( const key_type& key)at207,5441
    const mapped_type& at( const key_type& key ) constat214,5654
    mapped_type& operator[](const key_type& key)operator []221,5878
    mapped_type& operator[](key_type&& key)operator []228,6095
    size_t count( const key_type& key ) constcount236,6312
    iterator find(const key_type& key)find241,6403
    const_iterator find( const key_type& key ) constfind246,6486
    std::pair<iterator, iterator> equal_range( const key_type& key)equal_range251,6583
    std::pair<const_iterator, const_iterator> equal_range(const key_type& key) constequal_range256,6709
    local_iterator begin( size_t n ) noexceptbegin261,6852
    const_local_iterator begin(size_t n ) const noexceptbegin265,6940
    const_local_iterator cbegin(size_t n ) const noexceptcbegin269,7039
    local_iterator end(size_t n ) noexceptend274,7141
    const_local_iterator end( size_t n ) const noexceptend278,7224
    const_local_iterator cend( size_t n ) const noexceptcend282,7320
    size_t bucket_count() const noexceptbucket_count287,7419
    size_t max_bucket_count() const noexceptmax_bucket_count291,7508
    size_t bucket_size(size_t n ) const noexceptbucket_size296,7606
    size_t bucket( const key_type& key) constbucket300,7703
    float load_factor() const noexceptload_factor305,7795
    float max_load_factor() const noexceptmax_load_factor310,7882
    void max_load_factor( float mlf )max_load_factor314,7976
    void rehash( size_t count )rehash319,8062
    void reserve( size_t count )reserve324,8135
    hasher hash_fcn() consthash_fcn329,8210
    key_equal key_eq() constkey_eq334,8283
    friend bool operator==(const unordered_map& lhs, const unordered_map& rhs )operator ==340,8365
    friend bool operator!=( const unordered_map& lhs, const unordered_map& rhs )operator !=345,8512
bool operator==(const unordered_map<Key, T, Hash, keyEqual>& lhs,operator ==352,8721
bool operator!=(const unordered_map<Key, T, Hash, keyEqual>& lhs,operator !=358,8937
void swap(unordered_map<Key, T, Hash, keyEqual>& lhs,swap365,9154
class unordered_multimap{unordered_multimap375,9389
    using base_type = hashtable<std::pair<const Key, T>, Hash, keyEqual>;base_type377,9426
    base_type m_ht;m_ht378,9500
    using allocator_type = typename base_type::allocator_type;allocator_type381,9531
    using key_type       = typename base_type::key_type;key_type382,9594
    using mapped_type    = typename base_type::mapped_type;mapped_type383,9651
    using value_type     = typename base_type::value_type;value_type384,9711
    using hasher         = typename base_type::hasher;hasher385,9770
    using key_equal      = typename base_type::key_equal;key_equal386,9825
    using difference_type      = typename base_type::difference_type;difference_type388,9884
    using pointer_type         = typename base_type::pointer_type;pointer_type389,9954
    using const_pointer_type   = typename base_type::const_pointer_type;const_pointer_type390,10021
    using reference_type       = typename base_type::reference_type;reference_type391,10094
    using const_reference_type = typename base_type::const_reference_type;const_reference_type392,10163
    using iterator             = typename base_type::iterator;iterator394,10239
    using const_iterator       = typename base_type::const_iterator;const_iterator395,10302
    using local_iterator       = typename base_type::local_iterator;local_iterator396,10371
    using const_local_iterator = typename base_type::const_local_iterator;const_local_iterator397,10440
    allocator_type get_allocator() constget_allocator399,10516
    unordered_multimap()unordered_multimap406,10618
    explicit unordered_multimap(size_t bucket_count,unordered_multimap411,10699
    unordered_multimap(T1 first, T1 last,unordered_multimap417,10940
    unordered_multimap( std::initializer_list<value_type> ilist,unordered_multimap427,11337
    unordered_multimap( const unordered_multimap& rhs)unordered_multimap438,11792
    unordered_multimap(unordered_multimap&& rhs) noexceptunordered_multimap441,11878
    unordered_multimap& operator=(const unordered_multimap& rhs)operator =444,11979
    unordered_multimap& operator=(unordered_multimap&& rhs)operator =450,12104
    unordered_multimap& operator=(std::initializer_list<value_type> ilist)operator =456,12235
    iterator begin() noexceptbegin467,12575
    iterator end() noexceptend472,12647
    const_iterator begin() const noexceptbegin477,12715
    const_iterator end() const noexceptend481,12798
    const_iterator cbegin() const noexceptcbegin486,12878
    const_iterator cend() const noexceptcend490,12963
    bool empty() const noexceptempty495,13045
    size_t size() const noexceptsize500,13119
    size_t max_size() const noexceptmax_size505,13193
    iterator emplace(Args&& ...args)emplace511,13303
    iterator emplace_hint(const_iterator hint, Args&& ...args)emplace_hint517,13445
    iterator insert(const value_type& value)insert522,13600
    iterator insert(value_type&& value)insert527,13699
    iterator insert( const_iterator hint, const value_type& value)insert533,13806
    iterator insert( const_iterator hint, value_type&& value)insert537,13941
    void insert(T1 first, T1 last)insert543,14107
    void erase(iterator it)erase548,14195
    void erase(iterator first, iterator last)erase553,14260
    size_t erase( const key_type& key)erase558,14352
    void clear()clear563,14442
    void swap(unordered_multimap& other) noexceptswap568,14494
    size_t count( const key_type& key ) constcount574,14589
    iterator find(const key_type& key)find579,14680
    const_iterator find( const key_type& key ) constfind584,14763
    std::pair<iterator, iterator> equal_range( const key_type& key)equal_range589,14860
    std::pair<const_iterator, const_iterator> equal_range(const key_type& key) constequal_range594,14985
    local_iterator begin( size_t n ) noexceptbegin599,15127
    const_local_iterator begin(size_t n ) const noexceptbegin603,15215
    const_local_iterator cbegin(size_t n ) const noexceptcbegin607,15314
    local_iterator end(size_t n ) noexceptend612,15416
    const_local_iterator end( size_t n ) const noexceptend616,15499
    const_local_iterator cend( size_t n ) const noexceptcend620,15595
    size_t bucket_count() const noexceptbucket_count625,15694
    size_t max_bucket_count() const noexceptmax_bucket_count629,15783
    size_t bucket_size(size_t n ) const noexceptbucket_size634,15881
    size_t bucket( const key_type& key) constbucket638,15978
    float load_factor() const noexceptload_factor643,16070
    float max_load_factor() const noexceptmax_load_factor648,16157
    void max_load_factor( float mlf )max_load_factor652,16251
    void rehash( size_t count )rehash657,16337
    void reserve( size_t count )reserve662,16410
    hasher hash_fcn() consthash_fcn667,16485
    key_equal key_eq() constkey_eq672,16558
    friend bool operator==(const unordered_multimap& lhs, const unordered_multimap& rhs )operator ==678,16640
    friend bool operator!=( const unordered_multimap& lhs, const unordered_multimap& rhs )operator !=683,16796
bool operator==(const unordered_multimap<Key, T, Hash, keyEqual>& lhs,operator ==690,17015
bool operator!=(const unordered_multimap<Key, T, Hash, keyEqual>& lhs,operator !=697,17244
void swap(unordered_multimap<Key, T, Hash, keyEqual>& lhs,swap704,17473

MySTL/.old/HashTable/UniformRandom.h,1191
#define UNIFORM_RANDOMUNIFORM_RANDOM2,23
class Random48Random4832,953
    static long long currentTimeMicroSeconds( )currentTimeMicroSeconds35,981
    Random48( long long initialValue = currentTimeMicroSeconds( ) )Random4845,1301
    int nextInt( )nextInt55,1508
    int nextInt( int high )nextInt64,1674
    double nextDouble( )nextDouble73,1892
    int nextInt( int low, int high )nextInt83,2172
    long long nextLong( )nextLong92,2391
    long long state;state98,2525
    static const long long A = 25214903917LL;A100,2553
    static const long long C = 11;C101,2599
    static const long long M = ( 1LL << 48 );M102,2634
    static const long long MASK = M - 1;MASK103,2680
    int next( int bits )next108,2784
static int currentTimeSeconds( )currentTimeSeconds130,3493
class UniformRandomUniformRandom139,3761
    UniformRandom( int seed = currentTimeSeconds( ) ) : generator{ static_cast<mt19937>(seed )}UniformRandom143,3794
    int nextInt( )nextInt150,3959
    int nextInt( int high )nextInt159,4170
    double nextDouble( )nextDouble167,4328
    int nextInt( int low, int high )nextInt176,4548
    mt19937 generator;generator183,4720

MySTL/.old/RB-tree.cc,2215
class UnderflowException { };UnderflowException2,20
class redblack_treeredblack_tree6,102
    struct redblack_noderedblack_node9,135
        Comparable element;element11,166
        redblack_node *left;left12,194
        redblack_node *right;right13,223
        int color;color14,253
        redblack_node( const Comparable & the_element = Comparable{},redblack_node16,273
        redblack_node( Comparable && the_element, redblack_node *lt = nullptr,redblack_node20,544
    redblack_node *header;header25,791
    redblack_node *null_node;null_node26,818
    redblack_node *current;current28,849
    redblack_node *parent;parent29,877
    redblack_node *grand;grand30,904
    redblack_node *great;great31,930
    void print_tree( redblack_node *t ) constprint_tree35,1003
    redblack_node *clone ( redblack_node *t ) constclone45,1221
    void handle_reorient( const Comparable & item )handle_reorient54,1481
    redblack_node * rotate( const Comparable & item, redblack_node * the_parent )rotate73,1993
    void rotate_with_left_child( redblack_node * & k2 )rotate_with_left_child90,2616
    void rotate_with_right_child( redblack_node * & k1 )rotate_with_right_child109,3113
    explicit redblack_tree( const Comparable & neg_inf )redblack_tree131,3622
    redblack_tree( const redblack_tree & rhs )redblack_tree141,3894
    redblack_tree( redblack_tree && rhs )redblack_tree151,4207
    ~redblack_tree()~redblack_tree157,4317
    const Comparable & find_min() constfind_min164,4400
    const Comparable & find_max() constfind_max174,4646
    bool contains( const Comparable & x ) constcontains185,4895
    bool is_empty() constis_empty200,5249
    void print_tree( ) constprint_tree205,5322
    void make_empty()make_empty213,5505
    void insert( const Comparable & x )insert224,5756
    void remove( const Comparable & x )remove247,6450
    enum{ RED, BLACK };__anon77fe558e0103254,6577
    enum{ RED, BLACK };RED254,6577
    enum{ RED, BLACK };BLACK254,6577
    redblack_tree & operator=( const redblack_tree & rhs )operator =256,6602
    redblack_tree & operator=( redblack_tree && rhs )operator =263,6761
int main()main273,6905

MySTL/.old/CMakeLists.txt,84
project(TinySTL)TinySTL2,37
set(EXEC_DIR ${PROJECT_SOURCE_DIR}/bin)EXEC_DIR4,55

MySTL/.old/Sort/UradixSort.cc,91
void uradixSort( vector<string> & arr, int maxLen )uradixSort6,61
int main()main39,980

MySTL/.old/Sort/HeapSort.cc,195
inline int leftChild( int i )leftChild7,62
void procDown( vector<Comparable> & a, int i, int n )procDown13,149
void heapsort( vector<Comparable> & a )heapsort39,847
int main()main50,1096

MySTL/.old/Sort/QuickSort1.cc,83
void quicksort( vector<Comparable> & items )quicksort7,91
int main()main34,920

MySTL/.old/Sort/BucketSort.cc,154
Comparable findMax( vector<Comparable> & a )findMax6,90
vector<Comparable> bucketsort( vector<Comparable> & a)bucketsort18,335
int main()main31,588

MySTL/.old/Sort/MergeSort.cc,263
void merge( vector<Comparable> & a, vector<Comparable> & tmpArray, int leftPos,merge9,93
void mergeSort( vector<Comparable> & a, vector<Comparable> & tmpArray,mergeSort40,1111
void mergeSort( vector<Comparable> & a )mergeSort53,1486
int main()main60,1624

MySTL/.old/Sort/QuickSortTest.cc,241
Comparable median3( vector<Comparable> & a, int left, int right )median37,91
void quicksort( vector<Comparable> & a, int left, int right )quicksort24,545
void quicksort( vector<Comparable> & a )quicksort47,1009
int main()main54,1104

MySTL/.old/Sort/InsertionSort.cc,262
void insertionSort( vector<Comparable> & a)insertionSort7,91
void insertionSort( const Iterator & begin, const Iterator & end,insertionSort22,446
void insertionSort( const Iterator & begin, const Iterator & end )insertionSort43,889
int main()main48,1020

MySTL/.old/Sort/CMakeLists.txt,1220
project(Sort)Sort2,37
set(CMAKE_CXX_COMPILER clang++)CMAKE_CXX_COMPILER4,52
set(EXECUTABLE_OUTPUT_PATH ${EXEC_DIR}/Sort)EXECUTABLE_OUTPUT_PATH7,123
add_executable( BucketSort               BucketSort.cc       )BucketSort9,169
add_executable( CountingRadixSort        CountingRadixSort.cc)CountingRadixSort10,232
add_executable( HeapSort                 HeapSort.cc         )HeapSort11,295
add_executable( InsertionSort            InsertionSort.cc    )InsertionSort12,358
add_executable( MergeSort                MergeSort.cc        )MergeSort13,421
add_executable( QuickSelect              QuickSelect.cc      )QuickSelect14,484
add_executable( QuickSort                QuickSort.cc        )QuickSort15,547
add_executable( QuickSort1               QuickSort1.cc       )QuickSort116,610
add_executable( QuickSortExample         QuickSortExample.cc )QuickSortExample17,673
add_executable( QuickSortTest            QuickSortTest.cc    )QuickSortTest18,736
add_executable( RadixSort                RadixSort.cc        )RadixSort19,799
add_executable( ShellSort                ShellSort.cc        )ShellSort20,862
add_executable( UradixSort               UradixSort.cc       )UradixSort21,925

MySTL/.old/Sort/ShellSort.cc,79
void shellSort( vector<Comparable> & a )shellSort7,91
int main()main23,500

MySTL/.old/Sort/RadixSort.cc,94
void radixSort( vector<string> & arr, int stringLenth )radixSort6,61
int main()main29,582

MySTL/.old/Sort/CountingRadixSort.cc,108
void countingRadixSort( vector<string> & arr, int stringLen )countingRadixSort7,62
int main()main40,865

MySTL/.old/Sort/QuickSort.cc,313
void insertionSort( vector<Comparable> & a )insertionSort7,91
const Comparable & media3( vector<Comparable> & a, int left, int right )media322,428
void quicksort( vector<Comparable> & a, int left, int right )quicksort38,887
void quicksort( vector<Comparable> & a )quicksort67,1507
int main()main73,1590

MySTL/.old/Sort/QuickSelect.cc,334
void insertionSort( vector<Comparable> & a )insertionSort7,91
const Comparable & media3( vector<Comparable> & a, int left, int right )media322,428
void quickselect( vector<Comparable> & a, int left, int right, int k)quickselect38,887
void quickselect( vector<Comparable> & a, int k )quickselect70,1590
int main()main76,1687

MySTL/.old/Sort/QuickSortExample.cc,313
void insertionSort( vector<Comparable> & a )insertionSort7,91
const Comparable & media3( vector<Comparable> & a, int left, int right )media322,428
void quicksort( vector<Comparable> & a, int left, int right )quicksort38,887
void quicksort( vector<Comparable> & a )quicksort67,1507
int main()main73,1590

MySTL/.old/PriorityQueue/LeftistHeap.cc,945
class LeftistHeap {LeftistHeap6,70
    bool isEmpty() constisEmpty18,334
    void insert( const Comparable & x )insert24,444
    void deleteMin()deleteMin30,585
    void deleteMin( Comparable & minItem )deleteMin39,773
    void makeEmpty()makeEmpty45,879
    void merge( LeftistHeap & rhs )merge50,965
    struct LeftistNode {LeftistNode60,1141
        Comparable   element;element61,1166
        LeftistNode *left;left62,1196
        LeftistNode *right;right63,1223
        int          npl;npl64,1251
        LeftistNode( const Comparable & e = Comparable{ }, LeftistNode *lt = nullptr,LeftistNode66,1278
        LeftistNode( Comparable && e = Comparable{ }, LeftistNode *lt = nullptr,LeftistNode70,1495
    LeftistNode *root;root76,1728
    LeftistNode * merge( LeftistNode *h1, LeftistNode *h2 )merge78,1752
    LeftistNode * merge1( LeftistNode *h1, LeftistNode *h2 )merge191,2055
int main()main112,2549

MySTL/.old/PriorityQueue/CMakeLists.txt,487
project(PriorityQueue)PriorityQueue2,37
set(CMAKE_CXX_COMPILER clang++)CMAKE_CXX_COMPILER4,61
set(EXECUTABLE_OUTPUT_PATH ${EXEC_DIR}/PriorityQueue)EXECUTABLE_OUTPUT_PATH7,132
add_executable(BinomialQueue    BinomialQueue.cc     )BinomialQueue9,187
add_executable(LeftistHeap      LeftistHeap.cc       )LeftistHeap10,242
add_executable(PriorityQueue    PriorityQueue.cc     )PriorityQueue11,297
add_executable(PriorityQueueExa PriorityQueueExample.cc)PriorityQueueExa12,352

MySTL/.old/PriorityQueue/PriorityQueue.cc,102
void dumpContents( const string & msg, PriorityQueue & pq )dumpContents9,150
int main()main21,338

MySTL/.old/PriorityQueue/BinomialQueue.cc,929
class BinomialQueue{BinomialQueue7,88
    void deleteMind( Comparable & minItem )deleteMind25,562
    void merge( BinomialQueue & rhs )merge56,1441
    struct BinomialNode{BinomialNode120,3445
        Comparable    element;element121,3470
        BinomialNode *leftChild;leftChild122,3501
        BinomialNode *nextSibling;nextSibling123,3534
        BinomialNode( const Comparable & e, BinomialNode *lt, BinomialNode *rt )BinomialNode125,3570
        BinomialNode( Comparable && e, BinomialNode *lt, BinomialNode *rt )BinomialNode128,3722
    const static int DEFAULT_TREES = 1;DEFAULT_TREES132,3889
    vector<BinomialNode *> theTrees;theTrees134,3930
    int currentSize;currentSize135,3967
    int findMinIndex() constfindMinIndex137,3989
    int capacity() constcapacity153,4313
    BinomialNode * combineTrees( BinomialNode *t1, BinomialNode *t2 )combineTrees158,4383
int main()main173,4736

MySTL/.old/PriorityQueue/PriorityQueueExample.cc,103
void dumpContents( const string & msg, PriorityQueue & pq )dumpContents10,175
int main()main22,363

MySTL/.old/List/Queue.hh,1940
#define QUEUE_HHQUEUE_HH9,127
class Queue{Queue11,167
    struct Node {Node13,189
        Object data;data14,207
        Node* next;next15,228
        Node(const Object& d = Object{}, Node n = nullptr)Node16,248
        Node(Object&& d, Node n = nullptr)Node18,341
    class const_iterator{const_iterator23,434
        const_iterator() :current(nullptr) {}const_iterator25,474
        Object& operator*() {return retrieve();}operator *27,521
        const_iterator& operator++()operator ++29,571
        const_iterator operator++(int)operator ++35,694
        bool operator==(const const_iterator& rhs) constoperator ==42,841
        bool operator!=(const const_iterator& rhs) constoperator !=45,939
        Node* current;current49,1047
        const_iterator(Node* p) : current(p) {}const_iterator51,1071
        Object& retrieve() const {return current -> data;}retrieve52,1119
    class iterator:public const_iterator{iterator58,1224
        iterator(){}iterator59,1266
        Object& operator*() {return const_iterator::retrieve();}operator *61,1288
        const Object& operator*() const {return const_iterator::operator*();}operator *62,1353
        iterator& operator++()operator ++64,1432
        iterator operator++(int)operator ++70,1565
        iterator(Node* p) : const_iterator{p} {}iterator78,1723
    Queue() { init();}Queue85,1819
    Queue(const Queue& rhs)Queue87,1843
    ~Queue()~Queue95,1957
    void clear()clear102,2042
    Queue(Queue&& rhs)Queue117,2300
    Queue& operator=(const Queue& rhs)operator =125,2483
    Queue& operator=(Queue&& rhs)operator =132,2615
    const_iterator begein() constbegein141,2796
    iterator begein()begein146,2874
    const_iterator end() constend152,2941
    iterator end()end157,3008
    int theSize;theSize164,3075
    Node* head;head165,3092
    Node* tail;tail166,3108
    void init()init168,3125

MySTL/.old/List/test.cc,22
int main()main9,159

MySTL/.old/List/CMakeLists.txt,200
project(List)List2,37
set(CMAKE_CXX_COMPILER clang++)CMAKE_CXX_COMPILER4,52
set(EXECUTABLE_OUTPUT_PATH ${EXEC_DIR}/List)EXECUTABLE_OUTPUT_PATH7,123
add_executable( test   test.cc  )test13,260

MySTL/.old/List/Stack2.hh,363
#define STACK2STACK29,125
class Stack{Stack11,163
    Stack(vector<Object> d = vector<Object> {}, int t = -1)Stack13,186
    void push(const Object& x)push16,286
    void push(Object&& x)push23,417
    void pop()pop30,554
    void top()top37,655
    vector<Object> data;data44,796
    int topOfStack {-1};topOfStack45,821
int main()main48,850

MySTL/.old/List/Stack0.hh,2381
#define STACK0STACK08,107
class Stack{Stack10,145
    struct Node{Node12,169
        Object data;data13,186
        Node* next;next14,207
        Node(const Object& d = Object{}, Node* n = nullptr)Node15,227
        Node(Object&& d, Node* n = nullptr)Node18,325
    class const_iterator{const_iterator23,435
        const_iterator() :current(nullptr) {}const_iterator25,475
        Object& operator*() {return retrieve();}operator *27,522
        const_iterator& operator++()operator ++29,572
        const_iterator operator++(int)operator ++35,695
        bool operator==(const const_iterator& rhs) constoperator ==42,842
        bool operator!=(const const_iterator& rhs) constoperator !=45,940
        Node* current;current49,1048
        const_iterator(Node* p) : current(p) {}const_iterator51,1072
        Object& retrieve() const {return current -> data;}retrieve52,1120
    class iterator:public const_iterator{iterator58,1225
        iterator(){}iterator59,1267
        Object& operator*() {return const_iterator::retrieve();}operator *61,1289
        const Object& operator*() const {return const_iterator::operator*();}operator *62,1354
        iterator& operator++()operator ++64,1433
        iterator operator++(int)operator ++70,1566
        iterator(Node* p) : const_iterator{p} {}iterator78,1724
    Stack() { init();}Stack85,1820
    Stack(const Stack& rhs)Stack87,1844
    ~Stack()~Stack95,1958
    Stack(Stack&& rhs)Stack102,2043
    Stack& operator=(const Stack& rhs)operator =110,2226
    Stack& operator=(Stack&& rhs)operator =117,2358
    void push(Object& x)push126,2539
    void push(Object&& x)push131,2596
    void pop()pop136,2654
    bool empty() {return theSize == 0;}empty141,2699
    void clear()clear143,2740
    iterator begin() {return iterator(head -> next);}begin151,2826
    const_iterator begin() const  {return const_iterator(head -> next);}begin152,2880
    iterator end() {return iterator(tail);}end154,2954
    const_iterator end() const  {return const_iterator(tail);}end155,2998
    iterator insert(Object& x)insert157,3062
    iterator insert(Object&& x)insert166,3251
    iterator erase()erase174,3443
    int theSize;theSize185,3663
    Node* head;head186,3680
    Node* tail;tail187,3696
    void init()init189,3713
int main()main200,3847

MySTL/.old/List/Stack1.hh,241
#define STACK1STACK19,125
class Stack{Stack11,163
    void push(Object& x)push13,186
    void push(Object&& x)push18,251
    void pop()pop23,328
    void top()top28,381
    vector<Object> data;data33,466
int main()main36,495

MySTL/.old/List/Vector.hh,1688
#define VECTOR_HHVECTOR_HH9,147
class vector {vector12,189
    explicit vector(int n = 0)vector14,214
    ~vector() {delete[] p;}~vector20,347
    vector(const vector& v)vector22,376
    vector(vector&& v)vector31,604
    vector& operator=(const vector& v)operator =40,780
    vector& operator=(vector&& v)operator =52,1068
    vector(initializer_list<object> lst) {vector63,1343
    int size() const {return theSize;}size75,1611
    bool empty(int n) constempty77,1651
    void clear()clear82,1720
    void resize(int newNumber)resize90,1837
    void reserve(int n)reserve97,1969
    void push_back(const object& x)push_back110,2239
    void pop_back() { --theSize; }pop_back121,2474
    const object& back() const {return p[theSize-1];}back124,2511
    object& back() {return p[theSize-1];}back125,2565
    const object& front() const { return p[0];}front127,2608
    object& front() { return p[0];}front128,2656
    const object& operator[](int n) constoperator []131,2694
    object& operator[](int n)operator []136,2770
    object& at(int n)at141,2834
    const object& at(int n) constat151,3000
    int ca() const { return theCapacity;}ca161,3178
    using   iterator       = object* ;iterator163,3221
    typedef const_iterator = const object* ;object164,3260
    iterator begin()begin166,3306
    iterator end()end171,3362
    const_iterator begin() constbegin176,3422
    const_iterator end() constend181,3490
    const_iterator cbegin() constcbegin187,3563
    const_iterator cend() constcend192,3634
    int     theSize;theSize205,3844
    int     theCapacity ;theCapacity206,3865
    object* p;p207,3891

MySTL/.old/List/List.hh,3044
class List{List12,170
struct Node{Node15,258
    Object data;data16,271
    Node* prev;prev17,288
    Node* next;next18,304
    Node(const Object& d = Object{ }, Node* p = nullptr, Node* n = nullptr)Node19,320
    Node(Object&& d, Node* p = nullptr, Node* n = nullptr)Node22,435
    class const_iterator {const_iterator28,632
        const_iterator() :current{nullptr} {}const_iterator30,671
        const Object& operator*() const {return retrieve();}operator *31,717
        const_iterator& operator++()operator ++33,779
        const_iterator operator++(int)operator ++39,902
        bool operator==(const const_iterator& rhs) constoperator ==46,1049
        bool operator!=(const const_iterator& rhs) constoperator !=48,1145
        Node* current;current52,1255
        const_iterator(Node* p) :current{p} {}const_iterator53,1278
        Object& retrieve() const {return current -> data;}retrieve55,1326
    class iterator : public const_iterator {iterator62,1505
        iterator() {}iterator64,1564
        Object& operator*() {return const_iterator::retrieve();}operator *66,1587
        const Object& operator*()const  {return const_iterator::operator*();}operator *67,1652
        iterator& operator++()operator ++69,1731
        iterator operator++(int)operator ++75,1864
        iterator(Node* p) :const_iterator{p} {}iterator85,2019
    List() { init();}List93,2197
    List(const List& rhs)List95,2220
    ~List()~List103,2337
    List(List&& rhs)List110,2421
    List& operator=(const List& rhs)operator =118,2602
    List& operator=(List&& rhs)operator =125,2731
    iterator begin() {return {head -> next};}begin136,2991
    const_iterator begin() const {return {head -> next};}begin137,3037
    iterator end() {return {tail};}end139,3096
    const_iterator end() const {return {tail};}end140,3132
    int size() {return theSize;}size142,3181
    bool empty() {return theSize == 0;}empty143,3214
    void clear()clear145,3255
    Object& front() {return *begin();}front152,3346
    const Object& front()const {return *begin();}front153,3385
    Object& back() {return *--end();}back155,3436
    const Object& back() const {return *--end();}back156,3474
    void push_front(const Object& x) {insert(begin(),x);}push_front158,3525
    void push_front(Object&& x) {insert(begin(),std::move(x));}push_front159,3583
    void push_back(const Object& x) {insert(end(),x);}push_back162,3649
    void push_back(Object&& x) {insert(end(),std::move(x));}push_back163,3704
    void pop_front() {erase(begin());}pop_front165,3766
    void pop_back() {erase(--end());}pop_back167,3806
    iterator insert(iterator itr, const Object& x)insert170,3846
    iterator insert(iterator itr, Object&& x)insert177,4035
    iterator erase(iterator itr)erase184,4230
    iterator erase(iterator from, iterator to)erase196,4483
    int theSize;theSize206,4720
    Node* head;head207,4737
    Node* tail;tail208,4753
    void init()init210,4770

MySTL/.old/Tree/CMakeLists.txt,302
project(Tree)Tree2,37
set(CMAKE_CXX_COMPILER clang++)CMAKE_CXX_COMPILER4,52
set(EXECUTABLE_OUTPUT_PATH ${EXEC_DIR}/Tree)EXECUTABLE_OUTPUT_PATH7,123
add_executable( AvlTree           AvlTree.cc         )AvlTree9,169
add_executable( BinarySearchTree  BinarySearchTree.cc)BinarySearchTree10,224

MySTL/.old/Tree/BinarySearchTree.cc,2087
class BinarySearchTree{BinarySearchTree9,137
    int size{0};size11,169
    BinarySearchTree( ) : root{ nullptr } {}BinarySearchTree12,186
    BinarySearchTree( const BinarySearchTree & rhs ) : root{ nullptr }BinarySearchTree13,231
    BinarySearchTree( BinarySearchTree && rhs ) : root( rhs.root )BinarySearchTree17,348
    ~BinarySearchTree( ) { makeEmpty(); }~BinarySearchTree21,455
    const Comparable & findMax( ) constfindMax23,498
    const Comparable & findMin( ) constfindMin27,591
    bool contains( const Comparable & x ) constcontains32,685
    bool isEmpty( ) constisEmpty37,782
    void printTree( ostream & out = cout ) constprintTree42,853
    void makeEmpty( )makeEmpty50,1031
    void insert( const Comparable & x )insert54,1092
    void insert( Comparable && x )insert59,1172
    void remove( const Comparable & x )remove64,1247
    BinarySearchTree & operator=( const BinarySearchTree& rhs )operator =70,1328
    BinarySearchTree operator=( BinarySearchTree && rhs )operator =77,1498
    struct BinaryNode{BinaryNode84,1637
        Comparable element;element85,1660
        BinaryNode *left;left86,1688
        BinaryNode *right;right87,1714
        BinaryNode( const Comparable & theElement, BinaryNode *lt, BinaryNode *rt )BinaryNode89,1742
        BinaryNode( Comparable&& theElement, BinaryNode *lt, BinaryNode *rt )BinaryNode91,1890
    BinaryNode *root;root95,2054
    void insert( const Comparable & x, BinaryNode * & t )insert97,2077
    void insert( Comparable&& x, BinaryNode * & t )insert110,2405
    void remove( const Comparable & x, BinaryNode * & t )remove123,2760
    BinaryNode * findMax( BinaryNode *t ) constfindMax142,3333
    BinaryNode * findMin( BinaryNode *t ) constfindMin150,3511
    bool contains( const Comparable & x, BinaryNode *t ) constcontains159,3719
    void makeEmpty( BinaryNode * & t )makeEmpty180,4258
    void printTree( BinaryNode *t, ostream & out) constprintTree190,4460
    BinaryNode * clone( BinaryNode *t ) constclone198,4685
int main(  )main208,4902

MySTL/.old/Tree/AvlTree.cc,2487
class BinarySearchTree{BinarySearchTree9,137
    BinarySearchTree( ) : root{ nullptr } {}BinarySearchTree11,169
    BinarySearchTree( const BinarySearchTree & rhs ) : root{ nullptr }BinarySearchTree12,214
    BinarySearchTree( BinarySearchTree && rhs ) : root( rhs.root )BinarySearchTree16,331
    ~BinarySearchTree( ) { makeEmpty(); }~BinarySearchTree20,438
    const Comparable & findMax( ) constfindMax22,481
    const Comparable & findMin( ) constfindMin26,574
    bool contains( const Comparable & x ) constcontains31,668
    bool isEmpty( ) constisEmpty36,765
    void printTree( ) constprintTree41,836
    void makeEmpty( )makeEmpty49,994
    void insert( const Comparable & x )insert53,1055
    void insert( Comparable && x )insert58,1135
    void remove( const Comparable & x )remove63,1210
    BinarySearchTree & operator=( const BinarySearchTree& rhs )operator =69,1291
    BinarySearchTree operator=( BinarySearchTree && rhs )operator =76,1461
    struct AvlNode{AvlNode83,1600
        Comparable element;element84,1620
        AvlNode *left;left85,1648
        AvlNode *right;right86,1671
        int     height;height87,1695
        AvlNode( const Comparable & ele, AvlNode *lt, AvlNode *rt, int h = 0  )AvlNode89,1720
        AvlNode( Comparable&& ele, AvlNode *lt, AvlNode *rt, int h = 0 )AvlNode91,1874
    AvlNode *root;root95,2043
    int height( AvlNode* t ) constheight97,2063
    static const int ALLOWED_IMBALANCE = 1;ALLOWED_IMBALANCE102,2161
    void balance( AvlNode * & t)balance104,2206
    void rotateWithLeftChild( AvlNode * & k2 )rotateWithLeftChild123,3048
    void rotateWithRightChild( AvlNode * & k2 )rotateWithRightChild133,3348
    void doubleWithLeftChild( AvlNode * & k3 )doubleWithLeftChild143,3650
    void doubleWithRightChild( AvlNode * & k1 )doubleWithRightChild149,3787
    void insert( const Comparable & x, AvlNode * & t )insert155,3926
    void insert( Comparable&& x, AvlNode * & t )insert166,4227
    void remove( const Comparable & x, AvlNode * & t )remove178,4556
    AvlNode * findMax( AvlNode *t ) constfindMax199,5147
    AvlNode * findMin( AvlNode *t ) constfindMin207,5319
    bool contains( const Comparable & x, AvlNode *t ) constcontains216,5521
    void makeEmpty( AvlNode * & t )makeEmpty237,6057
    void printTree( AvlNode *t, ostream & out) constprintTree247,6256
    AvlNode * clone( AvlNode *t ) constclone255,6478
int main()main265,6686

MySTL/.old/Tree/example.cc,334
void printHighChangeables( const map<string,vector<string>> & adjacentWords,printHighChangeables8,95
bool oneCharOff( const string & word1, const string & word2 )oneCharOff24,558
computeAdjacentWords( const vector<string> & words )computeAdjacentWords41,923
void is( vector<string>& vec_str )is83,2156
int main()main93,2338

LinuxCommand/grep/grep.c,162
#define MAXLINE MAXLINE5,60
int main( int argc, char *argv[] )main7,82
void fpat( FILE *fp, char *fname, char *pattern, int except, int number )fpat52,1262

LinuxCommand/ls/include/dirent.h,327
#define DIRENTDIRENT2,15
#define DIRSIZ DIRSIZ12,208
#define NAME_MAX NAME_MAX15,250
typedef struct{__anonb7890500010818,279
	long ino;ino19,295
	char name[ NAME_MAX + 1 ];name20,306
} Dirent;Dirent21,334
typedef struct{__anonb7890500020824,389
    int fd;fd25,405
    Dirent d;d26,417
}DIR_U;DIR_U27,431

LinuxCommand/ls/include/dirent_u.h,327
#define DIRENTDIRENT2,15
#define DIRSIZ DIRSIZ12,208
#define NAME_MAX NAME_MAX15,250
typedef struct{__anonbdf96134010818,279
	long ino;ino19,295
	char name[ NAME_MAX + 1 ];name20,306
} Dirent;Dirent21,334
typedef struct{__anonbdf96134020824,389
    int fd;fd25,405
    Dirent d;d26,417
}DIR_U;DIR_U27,431

LinuxCommand/ls/Makefile,315
src_main=main.csrc_main1,0
src_lib=$(wildcard ./src/*.c)src_lib3,17
sub_lib=$(patsubst %.c, %.o, $(src_lib))sub_lib4,47
target_lib=./lib/libsort.atarget_lib6,117
target=maintarget8,145
$(target): $(src_main) $(target_lib)$(target)10,158
$(target_lib): $(sub_lib)$(target_lib)13,254
%.o:%.c%.o17,359

LinuxCommand/ls/main.c,44
int main( int argc, char **argv )main3,23

LinuxCommand/ls/main,0

LinuxCommand/ls/src/fsize.c,36
void fsize( char *name )fsize3,23

LinuxCommand/ls/src/dirwalk.c,93
#define MAX_PATH MAX_PATH3,23
void dirwalk( char *dir, void (*fcn)( char * ))dirwalk5,46

LinuxCommand/ls/src/dir.c,233
struct direct {direct3,23
	ino_t d_ino;d_ino4,39
	char d_name[ DIRSIZ ];d_name5,53
DIR_U *opendir_u( char *dirname )opendir_u8,81
void closedir_u( DIR_U *dp )closedir_u24,421
Dirent *readdir_u( DIR_U *dp )readdir_u32,523

LinuxCommand/tail/include/tail.h,89
#define MAXLEN MAXLEN5,78
#define MAXLINE MAXLINE6,99
#define MAXSTOR MAXSTOR7,120

LinuxCommand/tail/Makefile,314
src_main=main.csrc_main1,0
src_lib=$(wildcard ./src/*.c)src_lib3,17
sub_lib=$(patsubst %.c, %.o, $(src_lib))sub_lib4,47
target_lib=./lib/libtail.sotarget_lib5,88
target=maintarget7,117
$(target): $(src_main) $(target_lib)$(target)9,130
$(target_lib): $(sub_lib)$(target_lib)12,230
%.o:%.c%.o15,301

LinuxCommand/tail/main.c,45
int main( int argc, char *argv[] )main3,29

LinuxCommand/tail/src/readlines.c,76
int readlines( char *lineptr[], char *linestor, int maxline)readlines2,18

LinuxCommand/tail/src/getlines.c,47
int getlines( char *s, int lim )getlines2,18

LinuxCommand/expr/include/calc.h,75
#define CALCCALC4,64
#define NUMBER NUMBER5,77
#define NAME NAME6,97

LinuxCommand/expr/Makefile,314
src_main=main.csrc_main1,0
src_lib=$(wildcard ./src/*.c)src_lib3,17
sub_lib=$(patsubst %.c, %.o, $(src_lib))sub_lib4,47
target_lib=./lib/libexpr.sotarget_lib5,88
target=maintarget7,117
$(target): $(src_main) $(target_lib)$(target)9,130
$(target_lib): $(sub_lib)$(target_lib)12,230
%.o:%.c%.o15,301

LinuxCommand/expr/main.c,49
#define MAXOP MAXOP6,147
int main()main8,168

LinuxCommand/expr/main,0

LinuxCommand/expr/src/getop.c,169
#define MAXLINE MAXLINE5,68
char line[ MAXLINE ];line6,88
int li   = 0;li7,110
int getop( char s[] )getop9,125
int getlines( char s[], int lim)getlines72,1900

LinuxCommand/expr/src/stack.c,190
#define MAXVAL MAXVAL3,48
static double val[ MAXVAL ];val4,68
static int sp   = 0;sp5,97
void push( double f )push7,119
double pop( void )pop16,267
void clear( void )clear27,420

LinuxCommand/expr/src/getch.c,165
#define BUFSIZE BUFSIZE4,49
static char buf[ BUFSIZE ];buf5,69
static int bufp = 0;bufp6,97
int getch( void )getch8,119
void ungetch( int c )ungetch13,195

LinuxCommand/expr/src/mathfnc.c,38
void mathfnc( char s[] )mathfnc6,89

LinuxCommand/sort/include/sort.h,330
#define SORTSORT2,13
#define ALLOCSIZE ALLOCSIZE10,124
#define MAXLEN MAXLEN11,149
#define NUMERIC NUMERIC12,171
#define DECR DECR13,190
#define FOLD FOLD14,267
#define DIR DIR15,286
#define LINES LINES16,305
static char  option = 0;option18,327
static int pos1 = 0;pos119,352
static int pos2 = 0;pos220,373

LinuxCommand/sort/Makefile,314
src_main=main.csrc_main1,0
src_lib=$(wildcard ./src/*.c)src_lib3,17
sub_lib=$(patsubst %.c, %.o, $(src_lib))sub_lib4,47
target_lib=./lib/libsort.sotarget_lib5,88
target=maintarget7,117
$(target): $(src_main) $(target_lib)$(target)9,130
$(target_lib): $(sub_lib)$(target_lib)12,226
%.o:%.c%.o15,297

LinuxCommand/sort/main.c,116
#define MAXLINES MAXLINES2,18
char *lineptr[ MAXLINES ];lineptr3,40
int main( int argc, char *argv[])main5,68

LinuxCommand/sort/main,0

LinuxCommand/sort/src/readlines.c,62
int readlines( char *lineptr[], int maxlines )readlines2,18

LinuxCommand/sort/src/substr.c,50
void substr(const char *s,char *str )substr3,19

LinuxCommand/sort/src/readargs.c,54
void readargs( int argc, char *argv[] )readargs4,20

LinuxCommand/sort/src/numcmp.c,85
#define MAXSTR MAXSTR2,18
int numcmp( const char *s1, const char *s2 )numcmp4,38

LinuxCommand/sort/src/quick_sort.c,117
void quick_sort( void *v[], int left, int right ,quick_sort2,18
void swap1( void *v[], int i, int j )swap123,482

LinuxCommand/sort/src/charcmp.c,110
int charcmp( const char *s, const char *t) //这个函数写的真好啊，三种情况都放在charcmp3,19

LinuxCommand/sort/src/getlines.c,47
int getlines( char *s, int lim )getlines2,18

LinuxCommand/sort/src/writerlines.c,115
void writelines( char *lineptr[], int nlines, int decr ) //对啊，不一定需要再次排序啊writelines2,18

LinuxCommand/sort/src/alloc.c,180
#define ALLOCSIZE ALLOCSIZE2,18
char allocbuf[ ALLOCSIZE ];allocbuf3,43
char *allocp = allocbuf;allocp4,71
char *alloc( int n )alloc6,97
void afree( char *p )afree15,246

todo.org,0

特点.org,0

ThreadPool/cpp_thread/todo.org,0

ThreadPool/cpp_thread/a.sh,0

ThreadPool/cpp_thread/build.sh,0

ThreadPool/cpp_thread/include/test.hh,217
#define TEST_HHTEST_HH3,29
    #define WINDOWS_MACROWINDOWS_MACRO8,87
        #define WINDOWS_MACRO WINDOWS_MACRO11,143
        #define WINDOWS_MACRO WINDOWS_MACRO13,223
struct WINDOWS_MACRO Test{Test25,532

ThreadPool/cpp_thread/include/ThreadPool.hh,1335
#define THREADPOOL_HHTHREADPOOL_HH3,35
    #define WINDOWS_MACROWINDOWS_MACRO20,311
        #define WINDOWS_MACRO WINDOWS_MACRO23,373
        #define WINDOWS_MACRO WINDOWS_MACRO25,453
class SafeQueue{SafeQueue31,589
    std::queue<T, std::deque<T>> m_queue;m_queue33,617
    std::mutex m_mutex;m_mutex34,659
    std::condition_variable m_condition;m_condition35,683
    std::atomic_bool m_stop;m_stop36,724
    SafeQueue(): m_stop{false}{}SafeQueue39,764
    ~SafeQueue()~SafeQueue40,797
    bool empty()empty45,843
    size_t size()size51,957
    void push( U&& item)push59,1139
            using U1 = typename std::remove_reference<U>::type;U162,1180
    bool pop( T& item )pop72,1601
        m_condition.wait(lock, [ this ](){__anon1a8d6512010275,1683
    void stop()stop89,1983
class WINDOWS_MACRO ThreadPool{ThreadPool98,2121
    std::vector<std::thread*>  m_workers;m_workers100,2164
    SafeQueue<std::function<void()>> m_tasks;m_tasks102,2250
    std::condition_variable m_condition;m_condition103,2296
    std::mutex m_mutex;m_mutex104,2337
    std::atomic_bool m_shutdown;m_shutdown105,2361
    auto submit( Function&& f, Args&& ... args) -> std::future<decltype(std::forward<Function>(fsubmit125,2909
        function<void()> element = [ptr]() {__anon1a8d65120202138,3533

ThreadPool/cpp_thread/README,0

ThreadPool/cpp_thread/Makefile,340
CC=g++CC1,0
src_main=./src/main.ccsrc_main3,25
src_lib=$(wildcard ./src/*.cc)src_lib5,49
sub_lib=$(patsubst %.cc, %.o, $(src_lib))sub_lib6,80
target_lib=./lib/libThreadPool.atarget_lib7,122
$(target): $(src_main) $(target_lib)$(target)9,156
$(target_lib): $(sub_lib)$(target_lib)12,258
%.o:%.cc%.o16,333
clean:clean19,373

ThreadPool/cpp_thread/CMakeLists.txt,579
project(ThreadPool CXX)ThreadPool2,37
set(CMAKE_CXX_COMPILER clang++)CMAKE_CXX_COMPILER7,156
set(CMAKE_CXX_STANDARD 11)CMAKE_CXX_STANDARD9,230
set(CMAKE_CXX_STANDARD_REQUIRED True)CMAKE_CXX_STANDARD_REQUIRED10,257
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)EXECUTABLE_OUTPUT_PATH17,483
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)LIBRARY_OUTPUT_PATH18,537
add_executable(ThreadPool ${PROJECT_SOURCE_DIR}/main.cc)ThreadPool22,641
add_library(test STATIC ./src/test.cc)test24,699
add_library(threadpool STATIC ./src/ThreadPool.cc)threadpool25,738

ThreadPool/cpp_thread/main.cc,22
int main()main8,102

ThreadPool/cpp_thread/src/test.cc,816
std::mutex mtx;mtx10,133
std::random_device rd; // 真实随机数产生器rd12,150
std::uniform_int_distribution<int> dist(1, 5); //生成1到5之间的离散均匀分布数dist16,252
auto rnd = std::bind(dist, mt);rnd18,344
void simulate_hard_computation()simulate_hard_computation21,431
int multiply( int &res, const int a, const int b)multiply27,548
int Test::multiply( int &res, const int a, const int b)multiply41,877
void function_test( ThreadPool& pool )function_test54,1211
void lambda_test( ThreadPool& pool )lambda_test77,1822
            pool.submit( [&result](const int a,const int b) -> int {__anon90b9177a010285,2003
    auto futures = pool.submit([&multiply_res](const int a,const int b) -> int {__anon90b9177a0202101,2560
void class_test(ThreadPool& pool )class_test118,3224

ThreadPool/cpp_thread/src/ThreadPool.cc,251
ThreadPool::ThreadPool( int num ) : m_workers(num), m_shutdown(false)ThreadPool4,44
        m_workers[ i ] = new std::thread([this](){__anonfca81a0c01027,151
ThreadPool::~ThreadPool()~ThreadPool23,619
void ThreadPool::shutdown()shutdown29,700

MySTL.old/SomeAlgorithm/pow.cc,92
#define NOT_FOUND NOT_FOUND5,79
int pow(int base, int b)pow8,122
int main()main19,297

MySTL.old/SomeAlgorithm/CMakeLists.txt,421
project(SomeAlgorithm)SomeAlgorithm2,37
set(CMAKE_CXX_COMPILER clang++)CMAKE_CXX_COMPILER4,61
set(EXECUTABLE_OUTPUT_PATH ${EXEC_DIR}/SomeAlgorithm)EXECUTABLE_OUTPUT_PATH7,132
add_executable( BinarySearch BinarySearch.cc)BinarySearch9,187
add_executable( example      example.cc     )example10,233
add_executable( gcd          gcd.cc         )gcd11,279
add_executable( pow          pow.cc         )pow12,325

MySTL.old/SomeAlgorithm/BinarySearch.cc,142
#define NOT_FOUND NOT_FOUND5,79
int binarySearch(const vector<Comparable>& a, const Comparable x)binarySearch9,152
int main()main29,547

MySTL.old/SomeAlgorithm/gcd.cc,108
#define NOT_FOUND NOT_FOUND5,79
long long gcd (long long m, long long n)gcd9,123
int main()main19,272

MySTL.old/SomeAlgorithm/example.cc,475
#define NOT_FOUND NOT_FOUND5,79
void changListValue(Constains& lst, int p)changListValue9,151
void removeEveryOtherItem(Contains& lst)removeEveryOtherItem17,310
void print(Contains& c, ostream& os = cout)print40,754
int main()main63,1189
int f(vector<int>& vec)f85,1738
int f1(vector<int>& vec)f1104,2088
int f_sum(const vector<int>& vec, int left, int right)f_sum118,2377
int fs(const vector<int>& vec)fs151,3173
int f4(const vector<int>& vec)f4157,3250

MySTL.old/build.sh,0

MySTL.old/HashTable/american-english,0

MySTL.old/HashTable/HashTable.cc,1209
class hashd{hashd12,179
class hashd<string> {hashd20,379
    size_t operator()( const string & key )operator ()22,411
class Employee {Employee33,595
    const string & get_name() constget_name35,622
    bool operator==( const Employee & rhs )operator ==40,692
    bool operator!=( const Employee & rhs )operator !=45,798
    string name;name50,899
class hashd<Employee>hashd54,932
    size_t operator()( const Employee & item )operator ()57,966
class HashTable{HashTable66,1127
    explicit HashTable( int size =  101 ):theLists(size){}HashTable68,1154
    size_t size() constsize70,1214
    bool contains( const HashedObj & x ) constcontains75,1279
    void makeEmpty()makeEmpty81,1473
    bool insert( InsertObj && x )insert88,1612
        using U1 = typename std::remove_reference<InsertObj>::type;U191,1697
    bool remove( const HashedObj & x )remove107,2259
    vector<list<HashedObj>> theLists;theLists122,2584
    int currentSize;currentSize123,2622
    void rehash()rehash125,2644
    size_t myhash( const HashedObj & x ) constmyhash139,3011
    int nextPrime( int n )nextPrime145,3148
    bool isPrime( int n )isPrime156,3303
int main()main173,3591

MySTL.old/HashTable/CukooHashTable.cc,2054
int universalHash1( int x, int A, int B, int P, int M )universalHash17,106
int universalHash( int x, int A, int B, int M )universalHash12,251
class HashFamily{HashFamily26,630
class StringHashFamily {StringHashFamily34,801
    StringHashFamily() : MULTIPLIERS( count )StringHashFamily36,836
    int getNumberOfFunctions() constgetNumberOfFunctions41,927
    void generateNewFunctions()generateNewFunctions46,999
    size_t hash( const string & x, int which ) consthash52,1117
    vector<int> MULTIPLIERS;MULTIPLIERS64,1378
    UniformRandom r;r65,1407
class CukooHashTable{CukooHashTable69,1474
    explicit CukooHashTable( int size = 101 )CukooHashTable71,1506
    void makeEmpty()makeEmpty79,1713
    bool contains( const AnyType & x ) constcontains86,1840
    bool remove( const AnyType & x )remove91,1933
    bool insert( const AnyType & x )insert103,2178
    struct HashEntry{HashEntry117,2437
        AnyType element;element118,2459
        bool isActive;isActive119,2484
        HashEntry( const AnyType & e = AnyType{}, bool a = false )HashEntry121,2508
        HashEntry( AnyType&& e, bool a = false )HashEntry124,2625
    bool insertHelper1( AnyType && xx )insertHelper1130,2790
    bool isActive( int currentPos ) constisActive168,3848
    size_t myhash( const AnyType & x, int which ) constmyhash173,3956
    int findPos( const AnyType & x ) constfindPos178,4087
    void expand()expand190,4357
    void rehash()rehash195,4450
    void rehash( int newSize )rehash201,4559
    int nextPrime( int n )nextPrime219,4944
    bool isPrime( int n )isPrime230,5099
    static constexpr double MAX_LOAD       = 0.40;MAX_LOAD245,5383
    static constexpr int    ALLOW_REHASHES = 5;ALLOW_REHASHES246,5434
    vector<HashEntry> array;array248,5483
    int currentSize;currentSize249,5512
    int numHashFunctions;numHashFunctions250,5533
    int rehashes;rehashes251,5559
    UniformRandom r;r252,5577
    HashFamily hashFunctions;hashFunctions253,5598
int main()main256,5632

MySTL.old/HashTable/CMakeLists.txt,346
project(HashTable)HashTable2,37
set(CMAKE_CXX_COMPILER clang++)CMAKE_CXX_COMPILER4,57
set(EXECUTABLE_OUTPUT_PATH ${EXEC_DIR}/HashTable)EXECUTABLE_OUTPUT_PATH8,129
add_executable( CukooHashTable          CukooHashTable.cc          )CukooHashTable11,204
add_executable( HashTable               HashTable.cc               )HashTable13,343

MySTL.old/HashTable/OpenAddressingHashtable.cc,1412
class hashd{hashd8,119
class hashd<string> {hashd14,203
    size_t operator()( const string & key )operator ()15,225
class HashTable {HashTable30,521
    explicit HashTable( int size = 101 )HashTable32,549
    bool contains( const HashObj & x ) constcontains35,649
    void makeEmpty()makeEmpty38,736
    bool insert( const HashObj & x )insert45,863
    bool insert( HashObj && x )insert61,1180
    bool remove( const HashObj & x )remove77,1531
    enum EntryType { ACTIVE, EMPTY, DELETED };EntryType89,1753
    enum EntryType { ACTIVE, EMPTY, DELETED };ACTIVE89,1753
    enum EntryType { ACTIVE, EMPTY, DELETED };EMPTY89,1753
    enum EntryType { ACTIVE, EMPTY, DELETED };DELETED89,1753
    struct HashEntry{HashEntry92,1812
        HashObj element;element93,1834
        EntryType info;info94,1859
        HashEntry( const HashObj & e = HashObj{}, EntryType i = EMPTY )HashEntry96,1884
        HashEntry( HashObj && e, EntryType i = EMPTY )HashEntry98,2002
    vector<HashEntry> array;array103,2125
    int currentSize;currentSize104,2154
    bool isActive( int currentPos ) constisActive106,2176
    int findPos( const HashObj & x ) constfindPos110,2283
    void rehash()rehash125,2677
    size_t myhash( const HashObj & x ) constmyhash139,3037
    int nextPrime( int n )nextPrime146,3168
    bool isPrime( int n )isPrime157,3323
int main()main173,3610

MySTL.old/HashTable/UniformRandom.h,1191
#define UNIFORM_RANDOMUNIFORM_RANDOM2,23
class Random48Random4832,953
    static long long currentTimeMicroSeconds( )currentTimeMicroSeconds35,981
    Random48( long long initialValue = currentTimeMicroSeconds( ) )Random4845,1301
    int nextInt( )nextInt55,1508
    int nextInt( int high )nextInt64,1674
    double nextDouble( )nextDouble73,1892
    int nextInt( int low, int high )nextInt83,2172
    long long nextLong( )nextLong92,2391
    long long state;state98,2525
    static const long long A = 25214903917LL;A100,2553
    static const long long C = 11;C101,2599
    static const long long M = ( 1LL << 48 );M102,2634
    static const long long MASK = M - 1;MASK103,2680
    int next( int bits )next108,2784
static int currentTimeSeconds( )currentTimeSeconds130,3493
class UniformRandomUniformRandom139,3761
    UniformRandom( int seed = currentTimeSeconds( ) ) : generator{ static_cast<mt19937>(seed )}UniformRandom143,3794
    int nextInt( )nextInt150,3959
    int nextInt( int high )nextInt159,4170
    double nextDouble( )nextDouble167,4328
    int nextInt( int low, int high )nextInt176,4548
    mt19937 generator;generator183,4720

MySTL.old/RB-tree.cc,2215
class UnderflowException { };UnderflowException2,20
class redblack_treeredblack_tree6,102
    struct redblack_noderedblack_node9,135
        Comparable element;element11,166
        redblack_node *left;left12,194
        redblack_node *right;right13,223
        int color;color14,253
        redblack_node( const Comparable & the_element = Comparable{},redblack_node16,273
        redblack_node( Comparable && the_element, redblack_node *lt = nullptr,redblack_node20,544
    redblack_node *header;header25,791
    redblack_node *null_node;null_node26,818
    redblack_node *current;current28,849
    redblack_node *parent;parent29,877
    redblack_node *grand;grand30,904
    redblack_node *great;great31,930
    void print_tree( redblack_node *t ) constprint_tree35,1003
    redblack_node *clone ( redblack_node *t ) constclone45,1221
    void handle_reorient( const Comparable & item )handle_reorient54,1481
    redblack_node * rotate( const Comparable & item, redblack_node * the_parent )rotate73,1993
    void rotate_with_left_child( redblack_node * & k2 )rotate_with_left_child90,2616
    void rotate_with_right_child( redblack_node * & k1 )rotate_with_right_child109,3113
    explicit redblack_tree( const Comparable & neg_inf )redblack_tree131,3622
    redblack_tree( const redblack_tree & rhs )redblack_tree141,3894
    redblack_tree( redblack_tree && rhs )redblack_tree151,4207
    ~redblack_tree()~redblack_tree157,4317
    const Comparable & find_min() constfind_min164,4400
    const Comparable & find_max() constfind_max174,4646
    bool contains( const Comparable & x ) constcontains185,4895
    bool is_empty() constis_empty200,5249
    void print_tree( ) constprint_tree205,5322
    void make_empty()make_empty213,5505
    void insert( const Comparable & x )insert224,5756
    void remove( const Comparable & x )remove247,6450
    enum{ RED, BLACK };__anon91d5397f0103254,6577
    enum{ RED, BLACK };RED254,6577
    enum{ RED, BLACK };BLACK254,6577
    redblack_tree & operator=( const redblack_tree & rhs )operator =256,6602
    redblack_tree & operator=( redblack_tree && rhs )operator =263,6761
int main()main273,6905

MySTL.old/CMakeLists.txt,84
project(TinySTL)TinySTL2,37
set(EXEC_DIR ${PROJECT_SOURCE_DIR}/bin)EXEC_DIR4,55

MySTL.old/Sort/UradixSort.cc,91
void uradixSort( vector<string> & arr, int maxLen )uradixSort6,61
int main()main39,980

MySTL.old/Sort/HeapSort.cc,195
inline int leftChild( int i )leftChild7,62
void procDown( vector<Comparable> & a, int i, int n )procDown13,149
void heapsort( vector<Comparable> & a )heapsort39,847
int main()main50,1096

MySTL.old/Sort/QuickSort1.cc,83
void quicksort( vector<Comparable> & items )quicksort7,91
int main()main34,920

MySTL.old/Sort/BucketSort.cc,154
Comparable findMax( vector<Comparable> & a )findMax6,90
vector<Comparable> bucketsort( vector<Comparable> & a)bucketsort18,335
int main()main31,588

MySTL.old/Sort/MergeSort.cc,263
void merge( vector<Comparable> & a, vector<Comparable> & tmpArray, int leftPos,merge9,93
void mergeSort( vector<Comparable> & a, vector<Comparable> & tmpArray,mergeSort40,1111
void mergeSort( vector<Comparable> & a )mergeSort53,1486
int main()main60,1624

MySTL.old/Sort/QuickSortTest.cc,241
Comparable median3( vector<Comparable> & a, int left, int right )median37,91
void quicksort( vector<Comparable> & a, int left, int right )quicksort24,545
void quicksort( vector<Comparable> & a )quicksort47,1009
int main()main54,1104

MySTL.old/Sort/InsertionSort.cc,262
void insertionSort( vector<Comparable> & a)insertionSort7,91
void insertionSort( const Iterator & begin, const Iterator & end,insertionSort22,446
void insertionSort( const Iterator & begin, const Iterator & end )insertionSort43,889
int main()main48,1020

MySTL.old/Sort/CMakeLists.txt,1220
project(Sort)Sort2,37
set(CMAKE_CXX_COMPILER clang++)CMAKE_CXX_COMPILER4,52
set(EXECUTABLE_OUTPUT_PATH ${EXEC_DIR}/Sort)EXECUTABLE_OUTPUT_PATH7,123
add_executable( BucketSort               BucketSort.cc       )BucketSort9,169
add_executable( CountingRadixSort        CountingRadixSort.cc)CountingRadixSort10,232
add_executable( HeapSort                 HeapSort.cc         )HeapSort11,295
add_executable( InsertionSort            InsertionSort.cc    )InsertionSort12,358
add_executable( MergeSort                MergeSort.cc        )MergeSort13,421
add_executable( QuickSelect              QuickSelect.cc      )QuickSelect14,484
add_executable( QuickSort                QuickSort.cc        )QuickSort15,547
add_executable( QuickSort1               QuickSort1.cc       )QuickSort116,610
add_executable( QuickSortExample         QuickSortExample.cc )QuickSortExample17,673
add_executable( QuickSortTest            QuickSortTest.cc    )QuickSortTest18,736
add_executable( RadixSort                RadixSort.cc        )RadixSort19,799
add_executable( ShellSort                ShellSort.cc        )ShellSort20,862
add_executable( UradixSort               UradixSort.cc       )UradixSort21,925

MySTL.old/Sort/ShellSort.cc,79
void shellSort( vector<Comparable> & a )shellSort7,91
int main()main23,500

MySTL.old/Sort/RadixSort.cc,94
void radixSort( vector<string> & arr, int stringLenth )radixSort6,61
int main()main29,582

MySTL.old/Sort/CountingRadixSort.cc,108
void countingRadixSort( vector<string> & arr, int stringLen )countingRadixSort7,62
int main()main40,865

MySTL.old/Sort/QuickSort.cc,313
void insertionSort( vector<Comparable> & a )insertionSort7,91
const Comparable & media3( vector<Comparable> & a, int left, int right )media322,428
void quicksort( vector<Comparable> & a, int left, int right )quicksort38,887
void quicksort( vector<Comparable> & a )quicksort67,1507
int main()main73,1590

MySTL.old/Sort/QuickSelect.cc,334
void insertionSort( vector<Comparable> & a )insertionSort7,91
const Comparable & media3( vector<Comparable> & a, int left, int right )media322,428
void quickselect( vector<Comparable> & a, int left, int right, int k)quickselect38,887
void quickselect( vector<Comparable> & a, int k )quickselect70,1590
int main()main76,1687

MySTL.old/Sort/QuickSortExample.cc,313
void insertionSort( vector<Comparable> & a )insertionSort7,91
const Comparable & media3( vector<Comparable> & a, int left, int right )media322,428
void quicksort( vector<Comparable> & a, int left, int right )quicksort38,887
void quicksort( vector<Comparable> & a )quicksort67,1507
int main()main73,1590

MySTL.old/PriorityQueue/LeftistHeap.cc,945
class LeftistHeap {LeftistHeap6,70
    bool isEmpty() constisEmpty18,334
    void insert( const Comparable & x )insert24,444
    void deleteMin()deleteMin30,585
    void deleteMin( Comparable & minItem )deleteMin39,773
    void makeEmpty()makeEmpty45,879
    void merge( LeftistHeap & rhs )merge50,965
    struct LeftistNode {LeftistNode60,1141
        Comparable   element;element61,1166
        LeftistNode *left;left62,1196
        LeftistNode *right;right63,1223
        int          npl;npl64,1251
        LeftistNode( const Comparable & e = Comparable{ }, LeftistNode *lt = nullptr,LeftistNode66,1278
        LeftistNode( Comparable && e = Comparable{ }, LeftistNode *lt = nullptr,LeftistNode70,1495
    LeftistNode *root;root76,1728
    LeftistNode * merge( LeftistNode *h1, LeftistNode *h2 )merge78,1752
    LeftistNode * merge1( LeftistNode *h1, LeftistNode *h2 )merge191,2055
int main()main112,2549

MySTL.old/PriorityQueue/CMakeLists.txt,487
project(PriorityQueue)PriorityQueue2,37
set(CMAKE_CXX_COMPILER clang++)CMAKE_CXX_COMPILER4,61
set(EXECUTABLE_OUTPUT_PATH ${EXEC_DIR}/PriorityQueue)EXECUTABLE_OUTPUT_PATH7,132
add_executable(BinomialQueue    BinomialQueue.cc     )BinomialQueue9,187
add_executable(LeftistHeap      LeftistHeap.cc       )LeftistHeap10,242
add_executable(PriorityQueue    PriorityQueue.cc     )PriorityQueue11,297
add_executable(PriorityQueueExa PriorityQueueExample.cc)PriorityQueueExa12,352

MySTL.old/PriorityQueue/PriorityQueue.cc,102
void dumpContents( const string & msg, PriorityQueue & pq )dumpContents9,150
int main()main21,338

MySTL.old/PriorityQueue/BinomialQueue.cc,929
class BinomialQueue{BinomialQueue7,88
    void deleteMind( Comparable & minItem )deleteMind25,562
    void merge( BinomialQueue & rhs )merge56,1441
    struct BinomialNode{BinomialNode120,3445
        Comparable    element;element121,3470
        BinomialNode *leftChild;leftChild122,3501
        BinomialNode *nextSibling;nextSibling123,3534
        BinomialNode( const Comparable & e, BinomialNode *lt, BinomialNode *rt )BinomialNode125,3570
        BinomialNode( Comparable && e, BinomialNode *lt, BinomialNode *rt )BinomialNode128,3722
    const static int DEFAULT_TREES = 1;DEFAULT_TREES132,3889
    vector<BinomialNode *> theTrees;theTrees134,3930
    int currentSize;currentSize135,3967
    int findMinIndex() constfindMinIndex137,3989
    int capacity() constcapacity153,4313
    BinomialNode * combineTrees( BinomialNode *t1, BinomialNode *t2 )combineTrees158,4383
int main()main173,4736

MySTL.old/PriorityQueue/PriorityQueueExample.cc,103
void dumpContents( const string & msg, PriorityQueue & pq )dumpContents10,175
int main()main22,363

MySTL.old/List/Vector.cc,1595
#define D_CCD_CC9,142
class Vector {Vector11,178
    explicit Vector(int n = 0)Vector13,203
    ~Vector() {delete[] p;}~Vector19,330
    Vector(const Vector& v)Vector21,359
    Vector(Vector&& v)Vector30,587
    Vector& operator=(const Vector& v)operator =39,763
    Vector& operator=(Vector&& v)operator =51,1051
    Vector(initializer_list<object> lst) {Vector63,1327
    int size() const {return theSize;}size76,1596
    bool empty(int n) constempty78,1636
    void clear()clear83,1705
    void resize(int newNumber)resize91,1822
    void reserve(int n)reserve98,1954
    void push_back(const object& x)push_back111,2224
    void pop_back() { --theSize; }pop_back122,2459
    const object& back() const {return p[theSize-1];}back125,2496
    object& back() {return p[theSize-1];}back126,2550
    const object& front() const { return p[0];}front128,2593
    object& front() { return p[0];}front129,2641
    const object& operator[](int n) constoperator []132,2679
    object& operator[](int n)operator []137,2755
    object& at(int n)at142,2819
    const object& at(int n) constat152,2985
    int ca() const { return theCapacity;}ca162,3163
    typedef object* iterator;iterator164,3206
    typedef const object* const_iterator;const_iterator165,3236
    iterator begin()begin167,3279
    iterator begin() constbegin171,3334
    const_iterator end()end176,3396
    const_iterator end() constend181,3462
    int theSize;theSize193,3676
    int theCapacity ;theCapacity194,3693
    object* p;p195,3715
int main()main200,3742

MySTL.old/List/List.cc,3069
class List{List10,153
struct Node{Node13,241
    Object data;data14,254
    Node* prev;prev15,271
    Node* next;next16,287
    Node(const Object& d = Object{ }, Node* p = nullptr, Node* n = nullptr)Node17,303
    Node(Object&& d, Node* p = nullptr, Node* n = nullptr)Node20,418
    class const_iterator {const_iterator26,615
        const_iterator() :current{nullptr} {}const_iterator28,654
        const Object& operator*() const {return retrieve();}operator *29,700
        const_iterator& operator++()operator ++31,762
        const_iterator operator++(int)operator ++37,885
        bool operator==(const const_iterator& rhs) constoperator ==44,1032
        bool operator!=(const const_iterator& rhs) constoperator !=46,1128
        Node* current;current50,1238
        const_iterator(Node* p) :current{p} {}const_iterator51,1261
        Object& retrieve() const {return current -> data;}retrieve53,1309
    class iterator : public const_iterator {iterator60,1488
        iterator() {}iterator62,1547
        Object& operator*() {return const_iterator::retrieve();}operator *64,1570
        const Object& operator*()const  {return const_iterator::operator*();}operator *65,1635
        iterator& operator++()operator ++67,1714
        iterator operator++(int)operator ++73,1847
        iterator(Node* p) :const_iterator{p} {}iterator83,2002
    List() { init();}List91,2180
    List(const List& rhs)List93,2203
    ~List()~List101,2320
    List(List&& rhs)List108,2404
    List& operator=(const List& rhs)operator =116,2585
    List& operator=(List&& rhs)operator =123,2714
    iterator begin() {return {head -> next};}begin134,2974
    const_iterator begin() const {return {head -> next};}begin135,3020
    iterator end() {return {tail};}end137,3079
    const_iterator end() const {return {tail};}end138,3115
    int size() {return theSize;}size140,3164
    bool empty() {return theSize == 0;}empty141,3197
    void clear()clear143,3238
    Object& front() {return *begin();}front150,3329
    const Object& front()const {return *begin();}front151,3368
    Object& back() {return *--end();}back153,3419
    const Object& back() const {return *--end();}back154,3457
    void push_front(const Object& x) {insert(begin(),x);}push_front156,3508
    void push_front(Object&& x) {insert(begin(),std::move(x));}push_front157,3566
    void push_back(const Object& x) {insert(end(),x);}push_back160,3632
    void push_back(Object&& x) {insert(end(),std::move(x));}push_back161,3687
    void pop_front() {erase(begin());}pop_front163,3749
    void pop_back() {erase(--end());}pop_back165,3789
    iterator insert(iterator itr, const Object& x)insert168,3829
    iterator insert(iterator itr, Object&& x)insert175,4018
    iterator erase(iterator itr)erase182,4213
    iterator erase(iterator from, iterator to)erase194,4466
    int theSize;theSize204,4703
    Node* head;head205,4720
    Node* tail;tail206,4736
    void init()init208,4753
int main()main218,4914

MySTL.old/List/CMakeLists.txt,439
project(List)List3,37
set(CMAKE_CXX_COMPILER clang++)CMAKE_CXX_COMPILER5,52
set(EXECUTABLE_OUTPUT_PATH ${EXEC_DIR}/List)EXECUTABLE_OUTPUT_PATH8,123
add_executable( List   List.cc  )List10,169
add_executable( Queue  Queue.cc )Queue11,203
add_executable( Stack0 Stack0.cc)Stack012,237
add_executable( Stack1 Stack1.cc)Stack113,271
add_executable( Stack2 Stack2.cc)Stack214,305
add_executable( Vector Vector.cc)Vector15,339

MySTL.old/List/Stack2.cc,334
class Stack{Stack9,133
    Stack(vector<Object> d = vector<Object> {}, int t = -1)Stack11,156
    void push(const Object& x)push14,256
    void push(Object&& x)push21,387
    void pop()pop28,524
    void top()top35,625
    vector<Object> data;data42,766
    int topOfStack {-1};topOfStack43,791
int main()main46,820

MySTL.old/List/Queue.cc,1932
class Queue{Queue9,133
    struct Node {Node11,155
        Object data;data12,173
        Node* next;next13,194
        Node(const Object& d = Object{}, Node n = nullptr)Node14,214
        Node(Object&& d, Node n = nullptr)Node16,307
    class const_iterator{const_iterator21,400
        const_iterator() :current(nullptr) {}const_iterator23,440
        Object& operator*() {return retrieve();}operator *25,487
        const_iterator& operator++()operator ++27,537
        const_iterator operator++(int)operator ++33,660
        bool operator==(const const_iterator& rhs) constoperator ==40,807
        bool operator!=(const const_iterator& rhs) constoperator !=43,905
        Node* current;current47,1013
        const_iterator(Node* p) : current(p) {}const_iterator49,1037
        Object& retrieve() const {return current -> data;}retrieve50,1085
    class iterator:public const_iterator{iterator56,1190
        iterator(){}iterator57,1232
        Object& operator*() {return const_iterator::retrieve();}operator *59,1254
        const Object& operator*() const {return const_iterator::operator*();}operator *60,1319
        iterator& operator++()operator ++62,1398
        iterator operator++(int)operator ++68,1531
        iterator(Node* p) : const_iterator{p} {}iterator76,1689
    Queue() { init();}Queue83,1785
    Queue(const Queue& rhs)Queue85,1809
    ~Queue()~Queue93,1923
    void clear()clear100,2008
    Queue(Queue&& rhs)Queue115,2266
    Queue& operator=(const Queue& rhs)operator =123,2449
    Queue& operator=(Queue&& rhs)operator =130,2581
    const_iterator begein() constbegein139,2762
    iterator begein()begein144,2840
    const_iterator end() constend150,2907
    iterator end()end155,2974
    int theSize;theSize162,3041
    Node* head;head163,3058
    Node* tail;tail164,3074
    void init()init166,3091
int main()main326,6114

MySTL.old/List/Stack1.cc,212
class Stack{Stack9,133
    void push(Object& x)push11,156
    void push(Object&& x)push16,221
    void pop()pop21,298
    void top()top26,351
    vector<Object> data;data31,436
int main()main34,465

MySTL.old/List/Stack0.cc,2352
class Stack{Stack8,115
    struct Node{Node10,139
        Object data;data11,156
        Node* next;next12,177
        Node(const Object& d = Object{}, Node* n = nullptr)Node13,197
        Node(Object&& d, Node* n = nullptr)Node16,295
    class const_iterator{const_iterator21,405
        const_iterator() :current(nullptr) {}const_iterator23,445
        Object& operator*() {return retrieve();}operator *25,492
        const_iterator& operator++()operator ++27,542
        const_iterator operator++(int)operator ++33,665
        bool operator==(const const_iterator& rhs) constoperator ==40,812
        bool operator!=(const const_iterator& rhs) constoperator !=43,910
        Node* current;current47,1018
        const_iterator(Node* p) : current(p) {}const_iterator49,1042
        Object& retrieve() const {return current -> data;}retrieve50,1090
    class iterator:public const_iterator{iterator56,1195
        iterator(){}iterator57,1237
        Object& operator*() {return const_iterator::retrieve();}operator *59,1259
        const Object& operator*() const {return const_iterator::operator*();}operator *60,1324
        iterator& operator++()operator ++62,1403
        iterator operator++(int)operator ++68,1536
        iterator(Node* p) : const_iterator{p} {}iterator76,1694
    Stack() { init();}Stack83,1790
    Stack(const Stack& rhs)Stack85,1814
    ~Stack()~Stack93,1928
    Stack(Stack&& rhs)Stack100,2013
    Stack& operator=(const Stack& rhs)operator =108,2196
    Stack& operator=(Stack&& rhs)operator =115,2328
    void push(Object& x)push124,2509
    void push(Object&& x)push129,2566
    void pop()pop134,2624
    bool empty() {return theSize == 0;}empty139,2669
    void clear()clear141,2710
    iterator begin() {return iterator(head -> next);}begin149,2796
    const_iterator begin() const  {return const_iterator(head -> next);}begin150,2850
    iterator end() {return iterator(tail);}end152,2924
    const_iterator end() const  {return const_iterator(tail);}end153,2968
    iterator insert(Object& x)insert155,3032
    iterator insert(Object&& x)insert164,3221
    iterator erase()erase172,3413
    int theSize;theSize183,3633
    Node* head;head184,3650
    Node* tail;tail185,3666
    void init()init187,3683
int main()main198,3817

MySTL.old/Tree/CMakeLists.txt,302
project(Tree)Tree2,37
set(CMAKE_CXX_COMPILER clang++)CMAKE_CXX_COMPILER4,52
set(EXECUTABLE_OUTPUT_PATH ${EXEC_DIR}/Tree)EXECUTABLE_OUTPUT_PATH7,123
add_executable( AvlTree           AvlTree.cc         )AvlTree9,169
add_executable( BinarySearchTree  BinarySearchTree.cc)BinarySearchTree10,224

MySTL.old/Tree/BinarySearchTree.cc,2087
class BinarySearchTree{BinarySearchTree9,137
    int size{0};size11,169
    BinarySearchTree( ) : root{ nullptr } {}BinarySearchTree12,186
    BinarySearchTree( const BinarySearchTree & rhs ) : root{ nullptr }BinarySearchTree13,231
    BinarySearchTree( BinarySearchTree && rhs ) : root( rhs.root )BinarySearchTree17,348
    ~BinarySearchTree( ) { makeEmpty(); }~BinarySearchTree21,455
    const Comparable & findMax( ) constfindMax23,498
    const Comparable & findMin( ) constfindMin27,591
    bool contains( const Comparable & x ) constcontains32,685
    bool isEmpty( ) constisEmpty37,782
    void printTree( ostream & out = cout ) constprintTree42,853
    void makeEmpty( )makeEmpty50,1031
    void insert( const Comparable & x )insert54,1092
    void insert( Comparable && x )insert59,1172
    void remove( const Comparable & x )remove64,1247
    BinarySearchTree & operator=( const BinarySearchTree& rhs )operator =70,1328
    BinarySearchTree operator=( BinarySearchTree && rhs )operator =77,1498
    struct BinaryNode{BinaryNode84,1637
        Comparable element;element85,1660
        BinaryNode *left;left86,1688
        BinaryNode *right;right87,1714
        BinaryNode( const Comparable & theElement, BinaryNode *lt, BinaryNode *rt )BinaryNode89,1742
        BinaryNode( Comparable&& theElement, BinaryNode *lt, BinaryNode *rt )BinaryNode91,1890
    BinaryNode *root;root95,2054
    void insert( const Comparable & x, BinaryNode * & t )insert97,2077
    void insert( Comparable&& x, BinaryNode * & t )insert110,2405
    void remove( const Comparable & x, BinaryNode * & t )remove123,2760
    BinaryNode * findMax( BinaryNode *t ) constfindMax142,3333
    BinaryNode * findMin( BinaryNode *t ) constfindMin150,3511
    bool contains( const Comparable & x, BinaryNode *t ) constcontains159,3719
    void makeEmpty( BinaryNode * & t )makeEmpty180,4258
    void printTree( BinaryNode *t, ostream & out) constprintTree190,4460
    BinaryNode * clone( BinaryNode *t ) constclone198,4685
int main(  )main208,4902

MySTL.old/Tree/AvlTree.cc,2487
class BinarySearchTree{BinarySearchTree9,137
    BinarySearchTree( ) : root{ nullptr } {}BinarySearchTree11,169
    BinarySearchTree( const BinarySearchTree & rhs ) : root{ nullptr }BinarySearchTree12,214
    BinarySearchTree( BinarySearchTree && rhs ) : root( rhs.root )BinarySearchTree16,331
    ~BinarySearchTree( ) { makeEmpty(); }~BinarySearchTree20,438
    const Comparable & findMax( ) constfindMax22,481
    const Comparable & findMin( ) constfindMin26,574
    bool contains( const Comparable & x ) constcontains31,668
    bool isEmpty( ) constisEmpty36,765
    void printTree( ) constprintTree41,836
    void makeEmpty( )makeEmpty49,994
    void insert( const Comparable & x )insert53,1055
    void insert( Comparable && x )insert58,1135
    void remove( const Comparable & x )remove63,1210
    BinarySearchTree & operator=( const BinarySearchTree& rhs )operator =69,1291
    BinarySearchTree operator=( BinarySearchTree && rhs )operator =76,1461
    struct AvlNode{AvlNode83,1600
        Comparable element;element84,1620
        AvlNode *left;left85,1648
        AvlNode *right;right86,1671
        int     height;height87,1695
        AvlNode( const Comparable & ele, AvlNode *lt, AvlNode *rt, int h = 0  )AvlNode89,1720
        AvlNode( Comparable&& ele, AvlNode *lt, AvlNode *rt, int h = 0 )AvlNode91,1874
    AvlNode *root;root95,2043
    int height( AvlNode* t ) constheight97,2063
    static const int ALLOWED_IMBALANCE = 1;ALLOWED_IMBALANCE102,2161
    void balance( AvlNode * & t)balance104,2206
    void rotateWithLeftChild( AvlNode * & k2 )rotateWithLeftChild123,3048
    void rotateWithRightChild( AvlNode * & k2 )rotateWithRightChild133,3348
    void doubleWithLeftChild( AvlNode * & k3 )doubleWithLeftChild143,3650
    void doubleWithRightChild( AvlNode * & k1 )doubleWithRightChild149,3787
    void insert( const Comparable & x, AvlNode * & t )insert155,3926
    void insert( Comparable&& x, AvlNode * & t )insert166,4227
    void remove( const Comparable & x, AvlNode * & t )remove178,4556
    AvlNode * findMax( AvlNode *t ) constfindMax199,5147
    AvlNode * findMin( AvlNode *t ) constfindMin207,5319
    bool contains( const Comparable & x, AvlNode *t ) constcontains216,5521
    void makeEmpty( AvlNode * & t )makeEmpty237,6057
    void printTree( AvlNode *t, ostream & out) constprintTree247,6256
    AvlNode * clone( AvlNode *t ) constclone255,6478
int main()main265,6686

MySTL.old/Tree/example.cc,334
void printHighChangeables( const map<string,vector<string>> & adjacentWords,printHighChangeables8,95
bool oneCharOff( const string & word1, const string & word2 )oneCharOff24,558
computeAdjacentWords( const vector<string> & words )computeAdjacentWords41,923
void is( vector<string>& vec_str )is83,2156
int main()main93,2338

MyTinySTL/README.md,349
MyTinySTLMyTinySTL1,0
## 简介简介5,648
## 支持支持8,1308
## 需要需要19,1449
## 运行运行22,1513
## 文档文档44,2127
## 测试测试47,2199
## IntroductionIntroduction52,2288
## SupportedSupported56,3043
## RequiredRequired67,3173
## Run testRun test71,3240
## DocumentsDocuments95,3828
## TestTest99,3900

MyTinySTL/Test/map_test.h,364
#define MYTINYSTL_MAP_TEST_H_MYTINYSTL_MAP_TEST_H_2,33
namespace mystlmystl12,234
namespace testtest14,252
namespace map_testmap_test16,269
#define PAIR PAIR20,312
#define MAP_COUT(MAP_COUT23,374
#define MAP_FUN_AFTER(MAP_FUN_AFTER31,624
#define MAP_VALUE(MAP_VALUE39,815
void map_test()map_test45,990
void multimap_test()multimap_test122,3852

MyTinySTL/Test/test.cpp,135
#define _SCL_SECURE_NO_WARNINGS_SCL_SECURE_NO_WARNINGS2,19
#define _CRTDBG_MAP_ALLOC _CRTDBG_MAP_ALLOC6,100
int main()main24,519

MyTinySTL/Test/stack_test.h,335
#define MYTINYSTL_STACK_TEST_H_MYTINYSTL_STACK_TEST_H_2,35
namespace mystlmystl11,196
namespace testtest13,214
namespace stack_teststack_test15,231
void stack_print(mystl::stack<int> s)stack_print18,255
#define STACK_COUT(STACK_COUT29,424
#define STACK_FUN_AFTER(STACK_FUN_AFTER35,640
void stack_test()stack_test42,907

MyTinySTL/Test/README.md,319
单元测试 (Unit test)单元测试 (Unit test)1,0
## 测试环境 (Test environment)测试环境 (Test environment)3,31
## 测试框架 (Test frame)测试框架 (Test frame)12,404
## 测试内容 (Test content)测试内容 (Test content)16,826
## 测试结果 (Test result)测试结果 (Test result)47,3207

MyTinySTL/Test/algorithm_test.h,3638
#define MYTINYSTL_ALGORITHM_TEST_H_MYTINYSTL_ALGORITHM_TEST_H_2,36
namespace mystlmystl14,281
namespace testtest16,299
namespace algorithm_testalgorithm_test34,558
int  for_each_sum = 0;for_each_sum38,635
int  gen() { return 5; }gen40,659
int  r(int i) { return (i * 5 + 1) % 9; }r41,684
bool is_odd(int i) { return i & 1; }is_odd42,726
bool is_even(int i) { return !(i & 1); }is_even43,763
void arr_sum(int i) { for_each_sum += i; }arr_sum44,804
bool cmp(const int& a, const int& b) { return b < a; }cmp45,847
int  unary_op(const int& x) { return x + 1; }unary_op46,902
int  binary_op(const int& x, const int& y) { return x + y; }binary_op47,948
TEST(copy_test)TEST52,1070
TEST(copy_backward_test)TEST64,1358
TEST(copy_if_test)TEST77,1780
TEST(copy_n_test)TEST89,2111
TEST(move_test)TEST101,2383
TEST(move_backward_test)TEST112,2612
TEST(equal_test)TEST123,2876
TEST(fill_test)TEST139,3504
TEST(fill_n_test)TEST152,3807
TEST(iter_swap_test)TEST164,4038
TEST(lexicographical_compare_test)TEST180,4300
TEST(max_test)TEST197,5164
TEST(min_test)TEST207,5415
TEST(mismatch_test)TEST217,5666
TEST(make_heap_test)TEST238,6393
TEST(pop_heap_test)TEST257,6992
TEST(push_heap_test)TEST278,7627
TEST(sort_heap_test)TEST299,8268
TEST(set_difference_test)TEST318,8881
TEST(set_intersection_test)TEST335,9529
TEST(set_symmetric_difference_test)TEST352,10191
TEST(set_union_test)TEST369,10906
TEST(accumulate_test)TEST387,11532
TEST(adjacent_difference_test)TEST398,11924
TEST(inner_product_test)TEST411,12334
TEST(iota_test)TEST422,12774
TEST(partial_sum_test)TEST434,13023
TEST(adjacent_find_test)TEST451,13543
TEST(all_of_test)TEST463,13972
TEST(any_of_test)TEST473,14257
TEST(binary_search_test)TEST483,14543
TEST(count_test)TEST492,14813
TEST(count_if_test)TEST503,15140
TEST(equal_range_test)TEST512,15415
TEST(find_test)TEST525,15857
TEST(find_end_test)TEST532,16058
TEST(find_first_of_test)TEST547,16681
TEST(find_if_test)TEST558,17099
TEST(find_if_not_test)TEST567,17361
TEST(for_each_test)TEST576,17643
TEST(generate_test)TEST585,17864
TEST(generate_n_test)TEST594,18026
TEST(includes_test)TEST603,18232
TEST(inplace_merge_test)TEST620,19049
TEST(is_heap_test)TEST634,19525
TEST(is_sorted_test)TEST648,20100
TEST(lower_bound_test)TEST662,20658
TEST(max_elememt_test)TEST675,21160
TEST(median_test)TEST685,21522
TEST(merge_test)TEST693,21726
TEST(min_elememt_test)TEST708,22192
TEST(is_permutation_test)TEST718,22557
TEST(next_permutation_test)TEST734,23349
TEST(none_of_test)TEST753,23902
TEST(nth_element_test)TEST766,24332
TEST(partial_sort_test)TEST809,25871
TEST(partial_sort_copy_test)TEST823,26362
TEST(partition_test)TEST840,27011
TEST(partition_copy_test)TEST852,27345
TEST(prev_permutation_test)TEST863,27699
TEST(random_shuffle_test)TEST882,28252
TEST(remove_test)TEST897,28593
TEST(remove_copy_test)TEST909,28899
TEST(remove_copy_if_test)TEST922,29255
TEST(remove_if_test)TEST934,29621
TEST(replace_test)TEST943,29844
TEST(replace_copy_test)TEST958,30265
TEST(replace_copy_if_test)TEST973,30729
TEST(replace_if_test)TEST985,31130
TEST(reverse_test)TEST997,31495
TEST(reverse_copy_test)TEST1009,31785
TEST(rotate_test)TEST1021,32108
TEST(rotate_copy_test)TEST1036,32554
TEST(search_test)TEST1051,33027
TEST(search_n_test)TEST1067,33703
TEST(sort_test)TEST1082,34345
TEST(swap_ranges_test)TEST1101,35011
TEST(transform_test)TEST1117,35449
TEST(unique_test)TEST1130,35841
TEST(unique_copy_test)TEST1144,36252
TEST(upper_bound_test)TEST1157,36648

MyTinySTL/Test/unordered_set_test.h,304
#define MYTINYSTL_UNORDERED_SET_TEST_H_MYTINYSTL_UNORDERED_SET_TEST_H_2,43
namespace mystlmystl12,293
namespace testtest14,311
namespace unordered_set_testunordered_set_test16,328
void unordered_set_test()unordered_set_test19,360
void unordered_multiset_test()unordered_multiset_test103,3747

MyTinySTL/Test/test.h,3335
#define MYTINYSTL_TEST_H_MYTINYSTL_TEST_H_2,29
namespace mystlmystl17,356
namespace testtest19,374
#define green green22,392
#define red red23,458
namespace testtest32,638
class TestCaseTestCase37,700
  TestCase(const char* case_name) : testcase_name(case_name) {}TestCase41,785
  const char* testcase_name;  // 测试案例的名称testcase_name47,930
  int         nTestResult;    // 测试案例的执行结果 nTestResult48,985
  double      nFailed;        // 测试失败的案例数nFailed49,1047
  double      nPassed;        // 测试通过的案例数nPassed50,1105
class UnitTestUnitTest55,1270
  TestCase* CurrentTestCase;          // 当前执行的测试案例CurrentTestCase67,1462
  double    nPassed;                  // 通过案例数nPassed68,1531
  double    nFailed;                  // 失败案例数nFailed69,1588
  std::vector<TestCase*> testcases_;  // 保存案例集合testcases_72,1657
UnitTest* UnitTest::GetInstance()GetInstance75,1721
TestCase* UnitTest::RegisterTestCase(TestCase* testcase)RegisterTestCase81,1808
void UnitTest::Run()Run87,1923
#define TESTCASE_NAME(TESTCASE_NAME123,3330
#define MYTINYSTL_TEST_(MYTINYSTL_TEST_127,3504
#define EXPECT_TRUE(EXPECT_TRUE171,5273
#define EXPECT_FALSE(EXPECT_FALSE182,5880
#define EXPECT_EQ(EXPECT_EQ219,7661
#define EXPECT_NE(EXPECT_NE232,8367
#define EXPECT_LT(EXPECT_LT245,9106
#define EXPECT_LE(EXPECT_LE258,9845
#define EXPECT_GT(EXPECT_GT271,10584
#define EXPECT_GE(EXPECT_GE284,11323
#define EXPECT_STREQ(EXPECT_STREQ317,12790
#define EXPECT_STRNE(EXPECT_STRNE345,14571
#define EXPECT_PTR_EQ(EXPECT_PTR_EQ400,17416
#define EXPECT_PTR_NE(EXPECT_PTR_NE413,18155
#define EXPECT_PTR_RANGE_EQ(EXPECT_PTR_RANGE_EQ426,18894
#define EXPECT_PTR_RANGE_NE(EXPECT_PTR_RANGE_NE437,19501
#define EXPECT_CON_EQ(EXPECT_CON_EQ467,20684
#define EXPECT_CON_NE(EXPECT_CON_NE485,21817
#define LEN1 LEN1506,22997
#define LEN2 LEN2507,23019
#define LEN3 LEN3508,23042
#define LEN1 LEN1510,23072
#define LEN2 LEN2511,23095
#define LEN3 LEN3512,23119
#define SCALE_LLL(SCALE_LLL515,23152
#define SCALE_LL(SCALE_LL516,23182
#define SCALE_L(SCALE_L517,23212
#define SCALE_M(SCALE_M518,23241
#define SCALE_S(SCALE_S519,23266
#define SCALE_SS(SCALE_SS520,23295
#define SCALE_SSS(SCALE_SSS521,23325
#define WIDE WIDE523,23356
#define PASSED PASSED526,23398
#define COUT(COUT529,23467
#define STR_COUT(STR_COUT537,23833
#define FUN_AFTER(FUN_AFTER543,24062
#define STR_FUN_AFTER(STR_FUN_AFTER550,24369
#define FUN_VALUE(FUN_VALUE558,24710
void test_len(size_t len1, size_t len2, size_t len3, size_t wide)test_len564,24924
#define TEST_LEN(TEST_LEN578,25307
#define FUN_TEST_FORMAT1(FUN_TEST_FORMAT1582,25414
#define FUN_TEST_FORMAT2(FUN_TEST_FORMAT2599,26371
#define LIST_SORT_DO_TEST(LIST_SORT_DO_TEST616,27328
#define MAP_EMPLACE_DO_TEST(MAP_EMPLACE_DO_TEST634,28348
#define CON_TEST_P1(CON_TEST_P1652,29327
#define CON_TEST_P2(CON_TEST_P2663,29947
#define MAP_EMPLACE_TEST(MAP_EMPLACE_TEST674,30574
#define LIST_SORT_TEST(LIST_SORT_TEST685,31183
#define TEST(TEST697,31813
#define RUN_ALL_TESTS(RUN_ALL_TESTS701,31905
#define PERFORMANCE_TEST_ON PERFORMANCE_TEST_ON706,32034
#define LARGER_TEST_DATA_ON LARGER_TEST_DATA_ON711,32158

MyTinySTL/Test/string_test.h,198
#define MYTINYSTL_STRING_TEST_H_MYTINYSTL_STRING_TEST_H_2,36
namespace mystlmystl11,204
namespace testtest13,222
namespace string_teststring_test15,239
void string_test()string_test18,264

MyTinySTL/Test/deque_test.h,192
#define MYTINYSTL_DEQUE_TEST_H_MYTINYSTL_DEQUE_TEST_H_2,35
namespace mystlmystl11,211
namespace testtest13,229
namespace deque_testdeque_test15,246
void deque_test()deque_test18,270

MyTinySTL/Test/vector_test.h,198
#define MYTINYSTL_VECTOR_TEST_H_MYTINYSTL_VECTOR_TEST_H_2,36
namespace mystlmystl11,206
namespace testtest13,224
namespace vector_testvector_test15,241
void vector_test()vector_test18,266

MyTinySTL/Test/Lib/redbud/platform.h,1152
#define ALINSHANS_REDBUD_PLATFORM_H_ALINSHANS_REDBUD_PLATFORM_H_11,427
  #define REDBUD_WIN REDBUD_WIN17,609
  #define REDBUD_LINUX REDBUD_LINUX19,697
  #define REDBUD_OSX REDBUD_OSX21,768
  #define REDBUD_CLANG REDBUD_CLANG30,966
  #define REDBUD_GNUC REDBUD_GNUC32,1023
  #define REDBUD_MSVC REDBUD_MSVC34,1078
#define REDBUD_TO_STRING(REDBUD_TO_STRING42,1264
#define REDBUD_STRING(REDBUD_STRING43,1295
#define REDBUD_DO_JOIN(REDBUD_DO_JOIN48,1430
#define REDBUD_JOIN(REDBUD_JOIN49,1464
#define REDBUD_MAJOR REDBUD_MAJOR54,1604
#define REDBUD_MINOR REDBUD_MINOR55,1627
#define REDBUD_PATCH REDBUD_PATCH56,1650
#define REDBUD_VERSION REDBUD_VERSION57,1673
#define _VERSION_CODE(_VERSION_CODE60,1755
#define GNUC_VERSION GNUC_VERSION63,1822
#define CLANG_VERSION CLANG_VERSION66,1909
  #define _REDBUD_API _REDBUD_API73,2121
    #define REDBUD_HAS_CXX11 REDBUD_HAS_CXX1181,2338
    #define REDBUD_HAS_CXX11 REDBUD_HAS_CXX1184,2483
    #define REDBUD_HAS_CXX11 REDBUD_HAS_CXX1186,2587
    #define REDBUD_HAS_CXX11 REDBUD_HAS_CXX1188,2627
namespace redbudredbud99,2878
  #define NOMINMAXNOMINMAX103,2914

MyTinySTL/Test/Lib/redbud/io/color.h,3614
#define ALINSHANS_REDBUD_IO_COLOR_H_ALINSHANS_REDBUD_IO_COLOR_H_12,506
namespace redbudredbud28,823
namespace ioio30,842
enum class formatformat44,1415
  reset      = 0,  // All attributes off.reset46,1435
  bold       = 1,  // Bold or increased intensity.bold47,1477
  faint      = 2,  // Faint (decreased intensity).faint48,1528
  italic     = 3,  // Italian font.italic49,1579
  underline  = 4,  // Underline.underline50,1615
  blinkslow  = 5,  // Blink slowly.blinkslow51,1648
  blinkrapid = 6,  // Blink quickly.blinkrapid52,1684
  inverse    = 7,  // Swap foreground and background.inverse53,1721
  conceal    = 8,  // Hide the text.conceal54,1775
  strikeline = 9   // Characters legible, but marked for deletion.strikeline55,1812
enum class fgfg59,1913
  black   = 30,black61,1929
  red     = 31,red62,1945
  green   = 32,green63,1961
  yellow  = 33,yellow64,1977
  blue    = 34,blue65,1993
  purple  = 35,purple66,2009
  cyan    = 36,cyan67,2025
  white   = 37,white68,2041
  reserve = 38,reserve69,2057
  reset   = 39reset70,2073
enum class bgbg74,2122
  black   = 40,black76,2138
  red     = 41,red77,2154
  green   = 42,green78,2170
  yellow  = 43,yellow79,2186
  blue    = 44,blue80,2202
  purple  = 45,purple81,2218
  cyan    = 46,cyan82,2234
  white   = 47,white83,2250
  reserve = 38,reserve84,2266
  reset   = 39reset85,2282
enum class hfghfg89,2341
  black  = 90,black91,2358
  red    = 91,red92,2373
  green  = 92,green93,2388
  yellow = 93,yellow94,2403
  blue   = 94,blue95,2418
  purple = 95,purple96,2433
  cyan   = 96,cyan97,2448
  white  = 97white98,2463
enum class hbghbg102,2521
  black  = 100,black104,2538
  red    = 101,red105,2554
  green  = 102,green106,2570
  yellow = 103,yellow107,2586
  blue   = 104,blue108,2602
  purple = 105,purple109,2618
  cyan   = 106,cyan110,2634
  white  = 107white111,2650
enum class statestate115,2696
  automatic = 0,  // Automatic control.automatic117,2715
  manual    = 1   // Manual control.manual118,2755
namespace detailsdetails123,2887
inline const std::streambuf*& get_coutbuf()get_coutbuf127,2945
inline const std::streambuf*& get_cerrbuf()get_cerrbuf133,3066
inline const std::streambuf*& get_clogbuf()get_clogbuf139,3187
inline int get_iword()get_iword146,3361
inline bool is_modifiable()is_modifiable153,3516
inline bool is_terminal(const std::streambuf* buf)is_terminal182,4169
using color_return_t = typename std::enable_if<color_return_t206,4771
using state_return_t = typename std::enable_if<state_return_t215,5090
inline color_return_t<T> set_color(std::ostream& os, const T& value)set_color222,5321
static constexpr WORD default_state = (FOREGROUND_BLUE | default_state229,5480
inline WORD get_rgb(WORD rgb)get_rgb234,5701
inline void set_attributes(redbud::io::fg color, WORD& state)set_attributes241,5852
inline void set_attributes(redbud::io::bg color, WORD& state)set_attributes256,6135
inline void set_attributes(redbud::io::hfg color, WORD& state)set_attributes270,6395
inline void set_attributes(redbud::io::hbg color, WORD& state)set_attributes277,6573
inline void set_attributes(redbud::io::format format, WORD& state)set_attributes284,6758
inline WORD& current_state()current_state292,6908
inline HANDLE get_console_handle()get_console_handle298,6995
inline color_return_t<T> set_color(std::ostream& os, const T& value)set_color305,7122
operator<<(std::ostream& os, const T& value)operator <<325,7631
operator<<(std::ostream& os, const T& value)operator <<336,7910

MyTinySTL/Test/CMakeLists.txt,166
set(APP_SRC test.cpp)APP_SRC2,53
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)EXECUTABLE_OUTPUT_PATH3,75
add_executable(stltest ${APP_SRC})stltest4,129

MyTinySTL/Test/algorithm_performance_test.h,450
#define MYTINYSTL_ALGORITHM_PERFORMANCE_TEST_H_MYTINYSTL_ALGORITHM_PERFORMANCE_TEST_H_2,51
namespace mystlmystl11,233
namespace testtest13,251
namespace algorithm_performance_testalgorithm_performance_test15,268
#define FUN_TEST1(FUN_TEST119,339
#define FUN_TEST2(FUN_TEST238,1455
void binary_search_test()binary_search_test58,2636
void sort_test()sort_test74,3205
void algorithm_performance_test()algorithm_performance_test90,3711

MyTinySTL/Test/unordered_map_test.h,304
#define MYTINYSTL_UNORDERED_MAP_TEST_H_MYTINYSTL_UNORDERED_MAP_TEST_H_2,43
namespace mystlmystl12,293
namespace testtest14,311
namespace unordered_map_testunordered_map_test16,328
void unordered_map_test()unordered_map_test19,360
void unordered_multimap_test()unordered_multimap_test110,4204

MyTinySTL/Test/list_test.h,333
#define MYTINYSTL_LIST_TEST_H_MYTINYSTL_LIST_TEST_H_2,34
namespace mystlmystl11,197
namespace testtest13,215
namespace list_testlist_test15,232
bool is_odd(int x) { return x & 1; }is_odd19,283
void list_test()list_test21,321
  FUN_AFTER(l1, l1.unique([&](int a, int b) {return b == a + 1; }));__anon3c249f51010273,2208

MyTinySTL/Test/set_test.h,223
#define MYTINYSTL_SET_TEST_H_MYTINYSTL_SET_TEST_H_2,33
namespace mystlmystl11,201
namespace testtest13,219
namespace set_testset_test15,236
void set_test()set_test18,258
void multiset_test()multiset_test90,2778

MyTinySTL/Test/queue_test.h,546
#define MYTINYSTL_QUEUE_TEST_H_MYTINYSTL_QUEUE_TEST_H_2,35
namespace mystlmystl11,217
namespace testtest13,235
namespace queue_testqueue_test15,252
void queue_print(mystl::queue<int> q)queue_print18,276
void p_queue_print(mystl::priority_queue<int> p)p_queue_print28,422
#define QUEUE_COUT(QUEUE_COUT39,603
#define P_QUEUE_COUT(P_QUEUE_COUT46,853
#define QUEUE_FUN_AFTER(QUEUE_FUN_AFTER52,1069
#define P_QUEUE_FUN_AFTER(P_QUEUE_FUN_AFTER59,1336
void queue_test()queue_test66,1603
void priority_test()priority_test124,3621

MyTinySTL/Doxyfile,0

MyTinySTL/MSVC/MyTinySTL_VS2015.vcxproj,0

MyTinySTL/MSVC/MyTinySTL_VS2015.vcxproj.filters,0

MyTinySTL/MSVC/MyTinySTL_VS2015.sln,0

MyTinySTL/License.txt,0

MyTinySTL/CMakeLists.txt,769
project(MyTinySTL)MyTinySTL3,37
set(MyTinySTL_VERSION_MAJOR 2)MyTinySTL_VERSION_MAJOR6,67
set(MyTinySTL_VERSION_MINOR 0)MyTinySTL_VERSION_MINOR7,98
set(MyTinySTL_VERSION_PATCH 0)MyTinySTL_VERSION_PATCH8,129
set(MyTinySTL_VERSION "${MyTinySTL_VERSION_MAJOR}.${MyTinySTL_VERSION_MINOR}.${MyTinySTL_VERSIONMyTinySTL_VERSION9,160
set(CMAKE_BUILD_TYPE release)CMAKE_BUILD_TYPE13,351
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2 -Wall -Wextra -Wno-sign-compare -Wno-unused-but-setCMAKE_CXX_FLAGS16,429
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")CMAKE_CXX_FLAGS21,763
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2 -Wall -Wextra -Wno-sign-compare")CMAKE_CXX_FLAGS24,874
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")CMAKE_CXX_FLAGS29,1168

MyTinySTL/appveyor.yml,0

MyTinySTL/MyTinySTL/numeric.h,534
#define MYTINYSTL_NUMERIC_H_MYTINYSTL_NUMERIC_H_2,32
namespace mystlmystl8,136
T accumulate(InputIter first, InputIter last, T init)accumulate18,518
OutputIter adjacent_difference(InputIter first, InputIter last, OutputIter result)adjacent_difference45,1291
T inner_product(InputIter1 first1, InputIter1 last1, InputIter2 first2, T init)inner_product83,2435
void iota(ForwardIter first, ForwardIter last, T value)iota109,3288
OutputIter partial_sum(InputIter first, InputIter last, OutputIter result)partial_sum124,3801

MyTinySTL/MyTinySTL/allocator.h,1122
#define MYTINYSTL_ALLOCATOR_H_MYTINYSTL_ALLOCATOR_H_2,34
namespace mystlmystl9,225
class allocatorallocator15,322
  typedef T            value_type;value_type18,348
  typedef T*           pointer;pointer19,383
  typedef const T*     const_pointer;const_pointer20,415
  typedef T&           reference;reference21,453
  typedef const T&     const_reference;const_reference22,487
  typedef size_t       size_type;size_type23,527
  typedef ptrdiff_t    difference_type;difference_type24,561
T* allocator<T>::allocate()allocate45,1056
T* allocator<T>::allocate(size_type n)allocate51,1161
void allocator<T>::deallocate(T* ptr)deallocate59,1315
void allocator<T>::deallocate(T* ptr, size_type /*size*/)deallocate67,1437
void allocator<T>::construct(T* ptr)construct75,1579
void allocator<T>::construct(T* ptr, const T& value)construct81,1665
 void allocator<T>::construct(T* ptr, T&& value)construct87,1774
 void allocator<T>::construct(T* ptr, Args&& ...args)construct94,1917
void allocator<T>::destroy(T* ptr)destroy100,2051
void allocator<T>::destroy(T* first, T* last)destroy106,2133

MyTinySTL/MyTinySTL/type_traits.h,527
#define MYTINYSTL_TYPE_TRAITS_H_MYTINYSTL_TYPE_TRAITS_H_2,36
namespace mystlmystl9,177
struct m_integral_constantm_integral_constant15,238
  static constexpr T value = v;value17,267
using m_bool_constant = m_integral_constant<bool, b>;m_bool_constant21,321
typedef m_bool_constant<true>  m_true_type;m_true_type23,376
typedef m_bool_constant<false> m_false_type;m_false_type24,420
struct is_pair : mystl::m_false_type {};is_pair37,713
struct is_pair<mystl::pair<T1, T2>> : mystl::m_true_type {};is_pair40,785

MyTinySTL/MyTinySTL/unordered_set.h,11708
#define MYTINYSTL_UNORDERED_SET_H_MYTINYSTL_UNORDERED_SET_H_2,38
namespace mystlmystl17,534
class unordered_setunordered_set24,854
  typedef hashtable<Key, Hash, KeyEqual> base_type;base_type28,926
  base_type ht_;ht_29,978
  typedef typename base_type::allocator_type       allocator_type;allocator_type33,1036
  typedef typename base_type::key_type             key_type;key_type34,1103
  typedef typename base_type::value_type           value_type;value_type35,1164
  typedef typename base_type::hasher               hasher;hasher36,1227
  typedef typename base_type::key_equal            key_equal;key_equal37,1286
  typedef typename base_type::size_type            size_type;size_type39,1349
  typedef typename base_type::difference_type      difference_type;difference_type40,1411
  typedef typename base_type::pointer              pointer;pointer41,1479
  typedef typename base_type::const_pointer        const_pointer;const_pointer42,1539
  typedef typename base_type::reference            reference;reference43,1605
  typedef typename base_type::const_reference      const_reference;const_reference44,1667
  typedef typename base_type::const_iterator       iterator;iterator46,1736
  typedef typename base_type::const_iterator       const_iterator;const_iterator47,1797
  typedef typename base_type::const_local_iterator local_iterator;local_iterator48,1864
  typedef typename base_type::const_local_iterator const_local_iterator;const_local_iterator49,1931
  allocator_type get_allocator() const { return ht_.get_allocator(); }get_allocator51,2005
  unordered_set()unordered_set56,2122
  explicit unordered_set(size_type bucket_count,unordered_set61,2183
  unordered_set(InputIterator first, InputIterator last,unordered_set69,2423
  unordered_set(std::initializer_list<value_type> ilist,unordered_set79,2816
  unordered_set(const unordered_set& rhs)unordered_set89,3238
  unordered_set(unordered_set&& rhs) noexceptunordered_set93,3306
  unordered_set& operator=(const unordered_set& rhs)operator =98,3393
  unordered_set& operator=(unordered_set&& rhs)operator =103,3491
  unordered_set& operator=(std::initializer_list<value_type> ilist)operator =109,3598
  iterator       begin()        noexceptbegin122,3917
  const_iterator begin()  const noexceptbegin124,3984
  iterator       end()          noexceptend126,4051
  const_iterator end()    const noexceptend128,4116
  const_iterator cbegin() const noexceptcbegin131,4182
  const_iterator cend()   const noexceptcend133,4250
  bool      empty()    const noexcept { return ht_.empty(); }empty138,4336
  size_type size()     const noexcept { return ht_.size(); }size139,4398
  size_type max_size() const noexcept { return ht_.max_size(); }max_size140,4459
  pair<iterator, bool> emplace(Args&& ...args)emplace147,4606
  iterator emplace_hint(const_iterator hint, Args&& ...args)emplace_hint151,4745
  pair<iterator, bool> insert(const value_type& value)insert156,4899
  pair<iterator, bool> insert(value_type&& value)insert158,4993
  iterator insert(const_iterator hint, const value_type& value)insert161,5097
  iterator insert(const_iterator hint, value_type&& value)insert163,5215
  void insert(InputIterator first, InputIterator last)insert167,5376
  void      erase(iterator it)erase172,5490
  void      erase(iterator first, iterator last)erase174,5542
  size_type erase(const key_type& key)erase177,5622
  void      clear()clear180,5698
  void      swap(unordered_set& other) noexceptswap183,5738
  size_type      count(const key_type& key) const count188,5833
  iterator       find(const key_type& key) find191,5914
  const_iterator find(const key_type& key)  const find193,5986
  pair<iterator, iterator> equal_range(const key_type& key)equal_range196,6066
  pair<const_iterator, const_iterator> equal_range(const key_type& key) constequal_range198,6168
  local_iterator       begin(size_type n)        noexceptbegin203,6312
  const_local_iterator begin(size_type n)  const noexceptbegin205,6397
  const_local_iterator cbegin(size_type n) const noexceptcbegin207,6482
  local_iterator       end(size_type n)          noexceptend210,6569
  const_local_iterator end(size_type n)    const noexceptend212,6652
  const_local_iterator cend(size_type n)   const noexceptcend214,6735
  size_type bucket_count()                 const noexceptbucket_count217,6820
  size_type max_bucket_count()             const noexceptmax_bucket_count219,6911
  size_type bucket_size(size_type n)       const noexceptbucket_size222,7007
  size_type bucket(const key_type& key)    constbucket224,7098
  float     load_factor()            const noexcept { return ht_.load_factor(); }load_factor229,7196
  float     max_load_factor()        const noexcept { return ht_.max_load_factor(); }max_load_factor231,7279
  void      max_load_factor(float ml)               { ht_.max_load_factor(ml); }max_load_factor232,7365
  void      rehash(size_type count)                 { ht_.rehash(count); }rehash234,7447
  void      reserve(size_type count)                { ht_.reserve(count); }reserve235,7522
  hasher    hash_fcn()               const          { return ht_.hash_fcn(); }hash_fcn237,7599
  key_equal key_eq()                 const          { return ht_.key_eq(); }key_eq238,7678
  friend bool operator==(const unordered_set& lhs, const unordered_set& rhs)operator ==242,7765
  friend bool operator!=(const unordered_set& lhs, const unordered_set& rhs)operator !=246,7898
bool operator==(const unordered_set<Key, Hash, KeyEqual>& lhs,operator ==254,8123
bool operator!=(const unordered_set<Key, Hash, KeyEqual>& lhs,operator !=261,8337
void swap(unordered_set<Key, Hash, KeyEqual>& lhs,swap269,8576
class unordered_multisetunordered_multiset281,9096
  typedef hashtable<Key, Hash, KeyEqual> base_type;base_type285,9173
  base_type ht_;ht_286,9225
  typedef typename base_type::allocator_type       allocator_type;allocator_type290,9283
  typedef typename base_type::key_type             key_type;key_type291,9350
  typedef typename base_type::value_type           value_type;value_type292,9411
  typedef typename base_type::hasher               hasher;hasher293,9474
  typedef typename base_type::key_equal            key_equal;key_equal294,9533
  typedef typename base_type::size_type            size_type;size_type296,9596
  typedef typename base_type::difference_type      difference_type;difference_type297,9658
  typedef typename base_type::pointer              pointer;pointer298,9726
  typedef typename base_type::const_pointer        const_pointer;const_pointer299,9786
  typedef typename base_type::reference            reference;reference300,9852
  typedef typename base_type::const_reference      const_reference;const_reference301,9914
  typedef typename base_type::const_iterator       iterator;iterator303,9983
  typedef typename base_type::const_iterator       const_iterator;const_iterator304,10044
  typedef typename base_type::const_local_iterator local_iterator;local_iterator305,10111
  typedef typename base_type::const_local_iterator const_local_iterator;const_local_iterator306,10178
  allocator_type get_allocator() const { return ht_.get_allocator(); }get_allocator308,10252
  unordered_multiset()unordered_multiset313,10369
  explicit unordered_multiset(size_type bucket_count,unordered_multiset318,10435
  unordered_multiset(InputIterator first, InputIterator last,unordered_multiset326,10690
  unordered_multiset(std::initializer_list<value_type> ilist,unordered_multiset336,11102
  unordered_multiset(const unordered_multiset& rhs)unordered_multiset346,11543
  unordered_multiset(unordered_multiset&& rhs) noexceptunordered_multiset350,11621
  unordered_multiset& operator=(const unordered_multiset& rhs)operator =355,11718
  unordered_multiset& operator=(unordered_multiset&& rhs)operator =360,11826
  unordered_multiset& operator=(std::initializer_list<value_type> ilist)operator =366,11943
  iterator       begin()        noexceptbegin380,12272
  const_iterator begin()  const noexceptbegin382,12339
  iterator       end()          noexceptend384,12406
  const_iterator end()    const noexceptend386,12471
  const_iterator cbegin() const noexceptcbegin389,12537
  const_iterator cend()   const noexceptcend391,12605
  bool      empty()    const noexcept { return ht_.empty(); }empty396,12691
  size_type size()     const noexcept { return ht_.size(); }size397,12753
  size_type max_size() const noexcept { return ht_.max_size(); }max_size398,12814
  iterator emplace(Args&& ...args)emplace405,12961
  iterator emplace_hint(const_iterator hint, Args&& ...args)emplace_hint409,13087
  iterator insert(const value_type& value)insert414,13240
  iterator insert(value_type&& value)insert416,13321
  iterator insert(const_iterator hint, const value_type& value)insert419,13412
  iterator insert(const_iterator hint, value_type&& value)insert421,13529
  void     insert(InputIterator first, InputIterator last)insert425,13689
  void      erase(iterator it)erase430,13806
  void      erase(iterator first, iterator last)erase432,13858
  size_type erase(const key_type& key)erase435,13938
  void      clear()clear438,14013
  void      swap(unordered_multiset& other) noexcept swap441,14053
  size_type      count(const key_type& key) const count446,14154
  iterator       find(const key_type& key) find449,14235
  const_iterator find(const key_type& key)  const find451,14307
  pair<iterator, iterator> equal_range(const key_type& key)equal_range454,14387
  pair<const_iterator, const_iterator> equal_range(const key_type& key) constequal_range456,14488
  local_iterator       begin(size_type n)        noexceptbegin461,14631
  const_local_iterator begin(size_type n)  const noexceptbegin463,14716
  const_local_iterator cbegin(size_type n) const noexceptcbegin465,14801
  local_iterator       end(size_type n)          noexceptend468,14888
  const_local_iterator end(size_type n)    const noexceptend470,14971
  const_local_iterator cend(size_type n)   const noexceptcend472,15054
  size_type bucket_count()                 const noexceptbucket_count475,15139
  size_type max_bucket_count()             const noexceptmax_bucket_count477,15230
  size_type bucket_size(size_type n)       const noexceptbucket_size480,15326
  size_type bucket(const key_type& key)    constbucket482,15417
  float     load_factor()            const noexcept { return ht_.load_factor(); }load_factor487,15515
  float     max_load_factor()        const noexcept { return ht_.max_load_factor(); }max_load_factor489,15598
  void      max_load_factor(float ml)               { ht_.max_load_factor(ml); }max_load_factor490,15684
  void      rehash(size_type count)                 { ht_.rehash(count); }rehash492,15766
  void      reserve(size_type count)                { ht_.reserve(count); }reserve493,15841
  hasher    hash_fcn()               const          { return ht_.hash_fcn(); }hash_fcn495,15918
  key_equal key_eq()                 const          { return ht_.key_eq(); }key_eq496,15997
  friend bool operator==(const unordered_multiset& lhs, const unordered_multiset& rhs)operator ==499,16083
  friend bool operator!=(const unordered_multiset& lhs, const unordered_multiset& rhs)operator !=503,16225
bool operator==(const unordered_multiset<Key, Hash, KeyEqual>& lhs,operator ==511,16459
bool operator!=(const unordered_multiset<Key, Hash, KeyEqual>& lhs,operator !=518,16683
void swap(unordered_multiset<Key, Hash, KeyEqual>& lhs,swap526,16932

MyTinySTL/MyTinySTL/stack.h,2781
#define MYTINYSTL_STACK_H_MYTINYSTL_STACK_H_2,30
namespace mystlmystl9,147
class stackstack15,353
  typedef Container                           container_type;container_type18,375
  typedef typename Container::value_type      value_type;value_type20,470
  typedef typename Container::size_type       size_type;size_type21,528
  typedef typename Container::reference       reference;reference22,585
  typedef typename Container::const_reference const_reference;const_reference23,642
  container_type c_;  // 用底层容器表现 stackc_28,837
  explicit stack(size_type n) stack34,957
  stack(size_type n, const value_type& value) stack38,1007
  stack(IIter first, IIter last)stack44,1106
  stack(std::initializer_list<T> ilist) stack49,1170
  stack(const Container& c)stack54,1256
  stack(Container&& c) noexcept(std::is_nothrow_move_constructible<Container>::value)stack58,1303
  stack(const stack& rhs) stack63,1423
  stack(stack&& rhs) noexcept(std::is_nothrow_move_constructible<Container>::value)stack67,1475
  stack& operator=(const stack& rhs)operator =72,1597
  stack& operator=(stack&& rhs) noexcept(std::is_nothrow_move_assignable<Container>::value)operator =77,1677
  stack& operator=(std::initializer_list<T> ilist) operator =83,1828
  reference       top()       { return c_.back(); }top92,1977
  const_reference top() const { return c_.back(); }top93,2029
  bool      empty() const noexcept { return c_.empty(); }empty96,2106
  size_type size()  const noexcept { return c_.size(); }size97,2164
  void emplace(Args&& ...args)emplace102,2280
  void push(const value_type& value)push105,2366
  void push(value_type&& value)      push107,2430
  void pop() pop110,2509
  void clear() clear113,2545
  void swap(stack& rhs) noexcept(noexcept(mystl::swap(c_, rhs.c_)))swap119,2604
  friend bool operator==(const stack& lhs, const stack& rhs) { return lhs.c_ == rhs.c_; }operator ==123,2712
  friend bool operator< (const stack& lhs, const stack& rhs) { return lhs.c_ <  rhs.c_; }operator <124,2802
bool operator==(const stack<T, Container>& lhs, const stack<T, Container>& rhs)operator ==129,2957
bool operator<(const stack<T, Container>& lhs, const stack<T, Container>& rhs)operator <135,3099
bool operator!=(const stack<T, Container>& lhs, const stack<T, Container>& rhs)operator !=141,3239
bool operator>(const stack<T, Container>& lhs, const stack<T, Container>& rhs)operator >147,3384
bool operator<=(const stack<T, Container>& lhs, const stack<T, Container>& rhs)operator <=153,3524
bool operator>=(const stack<T, Container>& lhs, const stack<T, Container>& rhs)operator >=159,3668
void swap(stack<T, Container>& lhs, stack<T, Container>& rhs) noexcept(noexcept(lhs.swap(rhs)))swap166,3837

MyTinySTL/MyTinySTL/alloc.h,1907
#define MYTINYSTL_ALLOC_H_MYTINYSTL_ALLOC_H_2,27
namespace mystlmystl20,818
union FreeListFreeList25,946
  union FreeList* next;  // 指向下一个区块next27,963
  char data[1];          // 储存本块内存的首地址data28,1013
{__anon4a78f37e010333,1118
  EAlign128 = 8, EAlign12834,1120
  EAlign256 = 16, EAlign25635,1138
  EAlign512 = 32,EAlign51236,1157
  EAlign1024 = 64, EAlign102437,1175
  EAlign2048 = 128,EAlign204838,1195
  EAlign4096 = 256EAlign409639,1215
enum { ESmallObjectBytes = 4096 };__anon4a78f37e020343,1266
enum { ESmallObjectBytes = 4096 };ESmallObjectBytes43,1266
enum { EFreeListsNumber = 56 };__anon4a78f37e030346,1323
enum { EFreeListsNumber = 56 };EFreeListsNumber46,1323
class allocalloc51,1567
  static char*  start_free;                      // 内存池起始位置start_free54,1590
  static char*  end_free;                        // 内存池结束位置end_free55,1664
  static size_t heap_size;                       // 申请 heap 空间附加值大小heap_size56,1738
  static FreeList* free_list[EFreeListsNumber];  // 自由链表free_list58,1827
char*  alloc::start_free = nullptr;start_free75,2321
char*  alloc::end_free = nullptr;end_free76,2357
size_t alloc::heap_size = 0;heap_size77,2391
FreeList* alloc::free_list[EFreeListsNumber] = {free_list79,2421
inline void* alloc::allocate(size_t n)allocate90,2984
inline void alloc::deallocate(void* p, size_t n)deallocate108,3417
inline void* alloc::reallocate(void* p, size_t old_size, size_t new_size)reallocate123,3882
inline size_t alloc::M_align(size_t bytes)M_align131,4054
inline size_t alloc::M_round_up(size_t bytes)M_round_up145,4346
inline size_t alloc::M_freelist_index(size_t bytes)M_freelist_index151,4513
void* alloc::M_refill(size_t n)M_refill169,5042
char* alloc::M_chunk_alloc(size_t size, size_t& nblock)M_chunk_alloc200,5855

MyTinySTL/MyTinySTL/map.h,12964
#define MYTINYSTL_MAP_H_MYTINYSTL_MAP_H_2,28
namespace mystlmystl18,559
class mapmap24,810
  typedef Key                        key_type;key_type28,861
  typedef T                          mapped_type;mapped_type29,908
  typedef mystl::pair<const Key, T>  value_type;value_type30,958
  typedef Compare                    key_compare;key_compare31,1007
  class value_compare : public binary_function <value_type, value_type, bool>value_compare34,1111
    Compare comp;comp38,1243
    value_compare(Compare c) : comp(c) {}value_compare39,1261
    bool operator()(const value_type& lhs, const value_type& rhs) constoperator ()41,1313
  typedef mystl::rb_tree<value_type, key_compare>  base_type;base_type49,1522
  base_type tree_;tree_50,1584
  typedef typename base_type::node_type              node_type;node_type54,1642
  typedef typename base_type::pointer                pointer;pointer55,1706
  typedef typename base_type::const_pointer          const_pointer;const_pointer56,1768
  typedef typename base_type::reference              reference;reference57,1836
  typedef typename base_type::const_reference        const_reference;const_reference58,1900
  typedef typename base_type::iterator               iterator;iterator59,1970
  typedef typename base_type::const_iterator         const_iterator;const_iterator60,2033
  typedef typename base_type::reverse_iterator       reverse_iterator;reverse_iterator61,2102
  typedef typename base_type::const_reverse_iterator const_reverse_iterator;const_reverse_iterator62,2173
  typedef typename base_type::size_type              size_type;size_type63,2250
  typedef typename base_type::difference_type        difference_type;difference_type64,2314
  typedef typename base_type::allocator_type         allocator_type;allocator_type65,2384
  map(InputIterator first, InputIterator last)map73,2561
  map(std::initializer_list<value_type> ilist) map77,2662
  map(const map& rhs) map81,2779
  map(map&& rhs) noexceptmap85,2833
  map& operator=(const map& rhs)operator =90,2903
  map& operator=(map&& rhs)operator =95,2987
  map& operator=(std::initializer_list<value_type> ilist)operator =101,3079
  key_compare            key_comp()      const { return tree_.key_comp(); }key_comp110,3255
  value_compare          value_comp()    const { return value_compare(tree_.key_comp()); }value_comp111,3331
  allocator_type         get_allocator() const { return tree_.get_allocator(); }get_allocator112,3422
  iterator               begin()         noexceptbegin116,3526
  const_iterator         begin()   const noexceptbegin118,3604
  iterator               end()           noexceptend120,3682
  const_iterator         end()     const noexceptend122,3758
  reverse_iterator       rbegin()        noexceptrbegin125,3835
  const_reverse_iterator rbegin()  const noexceptrbegin127,3923
  reverse_iterator       rend()          noexceptrend129,4017
  const_reverse_iterator rend()    const noexceptrend131,4107
  const_iterator         cbegin()  const noexceptcbegin134,4204
  const_iterator         cend()    const noexceptcend136,4276
  const_reverse_iterator crbegin() const noexceptcrbegin138,4346
  const_reverse_iterator crend()   const noexceptcrend140,4419
  bool                   empty()    const noexcept { return tree_.empty(); }empty144,4509
  size_type              size()     const noexcept { return tree_.size(); }size145,4586
  size_type              max_size() const noexcept { return tree_.max_size(); }max_size146,4662
  mapped_type& at(const key_type& key)at151,4819
  const mapped_type& at(const key_type& key) constat159,5083
  mapped_type& operator[](const key_type& key)operator []168,5366
  mapped_type& operator[](key_type&& key)operator []176,5594
  pair<iterator, bool> emplace(Args&& ...args)emplace188,5883
  iterator emplace_hint(iterator hint, Args&& ...args)emplace_hint194,6030
  pair<iterator, bool> insert(const value_type& value)insert199,6173
  pair<iterator, bool> insert(value_type&& value)insert203,6275
  iterator insert(iterator hint, const value_type& value)insert208,6386
  iterator insert(iterator hint, value_type&& value)insert212,6497
  void insert(InputIterator first, InputIterator last)insert218,6650
  void      erase(iterator position)             { tree_.erase(position); }erase223,6752
  size_type erase(const key_type& key)           { return tree_.erase_unique(key); }erase224,6828
  void      erase(iterator first, iterator last) { tree_.erase(first, last); }erase225,6913
  void      clear()                              { tree_.clear(); }clear227,6993
  iterator       find(const key_type& key)              { return tree_.find(key); }find231,7085
  const_iterator find(const key_type& key)        const { return tree_.find(key); }find232,7169
  size_type      count(const key_type& key)       const { return tree_.count_unique(key); }count234,7254
  iterator       lower_bound(const key_type& key)       { return tree_.lower_bound(key); }lower_bound236,7347
  const_iterator lower_bound(const key_type& key) const { return tree_.lower_bound(key); }lower_bound237,7438
  iterator       upper_bound(const key_type& key)       { return tree_.upper_bound(key); }upper_bound239,7530
  const_iterator upper_bound(const key_type& key) const { return tree_.upper_bound(key); }upper_bound240,7621
    equal_range(const key_type& key) equal_range243,7740
    equal_range(const key_type& key) const equal_range247,7862
  void           swap(map& rhs) noexceptswap250,7951
  friend bool operator==(const map& lhs, const map& rhs) { return lhs.tree_ == rhs.tree_; }operator ==254,8030
  friend bool operator< (const map& lhs, const map& rhs) { return lhs.tree_ <  rhs.tree_; }operator <255,8122
bool operator==(const map<Key, T, Compare>& lhs, const map<Key, T, Compare>& rhs)operator ==260,8288
bool operator<(const map<Key, T, Compare>& lhs, const map<Key, T, Compare>& rhs)operator <266,8441
bool operator!=(const map<Key, T, Compare>& lhs, const map<Key, T, Compare>& rhs)operator !=272,8592
bool operator>(const map<Key, T, Compare>& lhs, const map<Key, T, Compare>& rhs)operator >278,8748
bool operator<=(const map<Key, T, Compare>& lhs, const map<Key, T, Compare>& rhs)operator <=284,8899
bool operator>=(const map<Key, T, Compare>& lhs, const map<Key, T, Compare>& rhs)operator >=290,9054
void swap(map<Key, T, Compare>& lhs, map<Key, T, Compare>& rhs) noexceptswap297,9234
class multimapmultimap307,9656
  typedef Key                        key_type;key_type311,9711
  typedef T                          mapped_type;mapped_type312,9758
  typedef mystl::pair<const Key, T>  value_type;value_type313,9808
  typedef Compare                    key_compare;key_compare314,9857
  class value_compare : public binary_function <value_type, value_type, bool>value_compare317,9961
    Compare comp;comp321,10098
    value_compare(Compare c) : comp(c) {}value_compare322,10116
    bool operator()(const value_type& lhs, const value_type& rhs) constoperator ()324,10168
  typedef mystl::rb_tree<value_type, key_compare>  base_type;base_type332,10351
  base_type tree_;tree_333,10413
  typedef typename base_type::node_type              node_type;node_type337,10471
  typedef typename base_type::pointer                pointer;pointer338,10535
  typedef typename base_type::const_pointer          const_pointer;const_pointer339,10597
  typedef typename base_type::reference              reference;reference340,10665
  typedef typename base_type::const_reference        const_reference;const_reference341,10729
  typedef typename base_type::iterator               iterator;iterator342,10799
  typedef typename base_type::const_iterator         const_iterator;const_iterator343,10862
  typedef typename base_type::reverse_iterator       reverse_iterator;reverse_iterator344,10931
  typedef typename base_type::const_reverse_iterator const_reverse_iterator;const_reverse_iterator345,11002
  typedef typename base_type::size_type              size_type;size_type346,11079
  typedef typename base_type::difference_type        difference_type;difference_type347,11143
  typedef typename base_type::allocator_type         allocator_type;allocator_type348,11213
  multimap(InputIterator first, InputIterator last) multimap356,11386
  multimap(std::initializer_list<value_type> ilist) multimap359,11492
  multimap(const multimap& rhs)multimap363,11614
  multimap(multimap&& rhs) noexceptmultimap367,11676
  multimap& operator=(const multimap& rhs) operator =372,11756
  multimap& operator=(multimap&& rhs) operator =377,11852
  multimap& operator=(std::initializer_list<value_type> ilist)operator =383,11956
  key_compare            key_comp()      const { return tree_.key_comp(); }key_comp392,12136
  value_compare          value_comp()    const { return value_compare(tree_.key_comp()); }value_comp393,12212
  allocator_type         get_allocator() const { return tree_.get_allocator(); }get_allocator394,12303
  iterator               begin()         noexceptbegin398,12407
  const_iterator         begin()   const noexceptbegin400,12485
  iterator               end()           noexceptend402,12563
  const_iterator         end()     const noexceptend404,12639
  reverse_iterator       rbegin()        noexceptrbegin407,12716
  const_reverse_iterator rbegin()  const noexceptrbegin409,12804
  reverse_iterator       rend()          noexceptrend411,12898
  const_reverse_iterator rend()    const noexceptrend413,12988
  const_iterator         cbegin()  const noexceptcbegin416,13085
  const_iterator         cend()    const noexceptcend418,13157
  const_reverse_iterator crbegin() const noexceptcrbegin420,13227
  const_reverse_iterator crend()   const noexceptcrend422,13300
  bool                   empty()    const noexcept { return tree_.empty(); }empty426,13390
  size_type              size()     const noexcept { return tree_.size(); }size427,13467
  size_type              max_size() const noexcept { return tree_.max_size(); }max_size428,13543
  iterator emplace(Args&& ...args)emplace433,13676
  iterator emplace_hint(iterator hint, Args&& ...args)emplace_hint439,13810
  iterator insert(const value_type& value)insert444,13952
  iterator insert(value_type&& value)insert448,14041
  iterator insert(iterator hint, const value_type& value)insert453,14139
  iterator insert(iterator hint, value_type&& value)insert457,14249
  void insert(InputIterator first, InputIterator last)insert463,14401
  void           erase(iterator position)             { tree_.erase(position); }erase468,14502
  size_type      erase(const key_type& key)           { return tree_.erase_multi(key); }erase469,14583
  void           erase(iterator first, iterator last) { tree_.erase(first, last); }erase470,14672
  void           clear() { tree_.clear(); }clear472,14757
  iterator       find(const key_type& key)              { return tree_.find(key); }find476,14830
  const_iterator find(const key_type& key)        const { return tree_.find(key); }find477,14914
  size_type      count(const key_type& key)       const { return tree_.count_multi(key); }count479,14999
  iterator       lower_bound(const key_type& key)       { return tree_.lower_bound(key); }lower_bound481,15091
  const_iterator lower_bound(const key_type& key) const { return tree_.lower_bound(key); }lower_bound482,15182
  iterator       upper_bound(const key_type& key)       { return tree_.upper_bound(key); }upper_bound484,15274
  const_iterator upper_bound(const key_type& key) const { return tree_.upper_bound(key); }upper_bound485,15365
    equal_range(const key_type& key)equal_range488,15485
    equal_range(const key_type& key) const equal_range492,15605
  void swap(multimap& rhs) noexceptswap495,15693
  friend bool operator==(const multimap& lhs, const multimap& rhs) { return lhs.tree_ == rhs.treoperator ==499,15767
  friend bool operator< (const multimap& lhs, const multimap& rhs) { return lhs.tree_ <  rhs.treoperator <500,15869
bool operator==(const multimap<Key, T, Compare>& lhs, const multimap<Key, T, Compare>& rhs)operator ==505,16045
bool operator<(const multimap<Key, T, Compare>& lhs, const multimap<Key, T, Compare>& rhs)operator <511,16208
bool operator!=(const multimap<Key, T, Compare>& lhs, const multimap<Key, T, Compare>& rhs)operator !=517,16369
bool operator>(const multimap<Key, T, Compare>& lhs, const multimap<Key, T, Compare>& rhs)operator >523,16535
bool operator<=(const multimap<Key, T, Compare>& lhs, const multimap<Key, T, Compare>& rhs)operator <=529,16696
bool operator>=(const multimap<Key, T, Compare>& lhs, const multimap<Key, T, Compare>& rhs)operator >=535,16861
void swap(multimap<Key, T, Compare>& lhs, multimap<Key, T, Compare>& rhs) noexceptswap542,17051

MyTinySTL/MyTinySTL/heap_algo.h,1672
#define MYTINYSTL_HEAP_ALGO_H_MYTINYSTL_HEAP_ALGO_H_2,34
namespace mystlmystl8,180
void push_heap_aux(RandomIter first, Distance holeIndex, Distance topIndex, T value)push_heap_aux16,590
void push_heap_d(RandomIter first, RandomIter last, Distance*)push_heap_d30,1016
void push_heap(RandomIter first, RandomIter last)push_heap36,1202
void push_heap_aux(RandomIter first, Distance holeIndex, Distance topIndex, T value,push_heap_aux43,1493
void push_heap_d(RandomIter first, RandomIter last, Distance*, Compared comp)push_heap_d57,1923
void push_heap(RandomIter first, RandomIter last, Compared comp)push_heap64,2169
void adjust_heap(RandomIter first, Distance holeIndex, Distance len, T value)adjust_heap74,2677
void pop_heap_aux(RandomIter first, RandomIter last, RandomIter result, T value,pop_heap_aux97,3363
void pop_heap(RandomIter first, RandomIter last)pop_heap106,3700
void adjust_heap(RandomIter first, Distance holeIndex, Distance len, T value,adjust_heap113,3966
void pop_heap_aux(RandomIter first, RandomIter last, RandomIter result, pop_heap_aux136,4677
void pop_heap(RandomIter first, RandomIter last, Compared comp)pop_heap144,5013
void sort_heap(RandomIter first, RandomIter last)sort_heap155,5543
void sort_heap(RandomIter first, RandomIter last, Compared comp)sort_heap166,5891
void make_heap_aux(RandomIter first, RandomIter last, Distance*)make_heap_aux179,6384
void make_heap(RandomIter first, RandomIter last)make_heap196,6769
void make_heap_aux(RandomIter first, RandomIter last, Distance*, Compared comp)make_heap_aux203,7002
void make_heap(RandomIter first, RandomIter last, Compared comp)make_heap220,7424

MyTinySTL/MyTinySTL/util.h,2288
#define MYTINYSTL_UTIL_H_MYTINYSTL_UTIL_H_2,29
namespace mystlmystl10,200
typename std::remove_reference<T>::type&& move(T&& arg) noexceptmove16,247
T&& forward(typename std::remove_reference<T>::type& arg) noexceptforward24,418
T&& forward(typename std::remove_reference<T>::type&& arg) noexceptforward30,541
void swap(Tp& lhs, Tp& rhs)swap39,744
ForwardIter2 swap_range(ForwardIter1 first1, ForwardIter1 last1, ForwardIter2 first2)swap_range47,909
void swap(Tp(&a)[N], Tp(&b)[N])swap55,1135
struct pairpair67,1491
  typedef Ty1    first_type;first_type69,1505
  typedef Ty2    second_type;second_type70,1534
  first_type first;    // 保存第一个数据first72,1565
  second_type second;  // 保存第二个数据second73,1613
    constexpr pair()pair80,1897
    constexpr pair(const Ty1& a, const Ty2& b)pair92,2271
    explicit constexpr pair(const Ty1& a, const Ty2& b)pair104,2677
    constexpr pair(Other1&& a, Other2&& b)pair119,3157
    explicit constexpr pair(Other1&& a, Other2&& b)pair132,3611
    constexpr pair(const pair<Other1, Other2>& other)pair145,4097
    explicit constexpr pair(const pair<Other1, Other2>& other)pair158,4563
    constexpr pair(pair<Other1, Other2>&& other)pair171,5005
    explicit constexpr pair(pair<Other1, Other2>&& other)pair184,5486
  pair& operator=(const pair& rhs)operator =191,5683
  pair& operator=(pair&& rhs)operator =202,5862
  pair& operator=(const pair<Other1, Other2>& other)operator =214,6103
  pair& operator=(pair<Other1, Other2>&& other)operator =223,6307
  void swap(pair& other)swap232,6504
bool operator==(const pair<Ty1, Ty2>& lhs, const pair<Ty1, Ty2>& rhs)operator ==245,6716
bool operator<(const pair<Ty1, Ty2>& lhs, const pair<Ty1, Ty2>& rhs)operator <251,6884
bool operator!=(const pair<Ty1, Ty2>& lhs, const pair<Ty1, Ty2>& rhs)operator !=257,7077
bool operator>(const pair<Ty1, Ty2>& lhs, const pair<Ty1, Ty2>& rhs)operator >263,7208
bool operator<=(const pair<Ty1, Ty2>& lhs, const pair<Ty1, Ty2>& rhs)operator <=269,7334
bool operator>=(const pair<Ty1, Ty2>& lhs, const pair<Ty1, Ty2>& rhs)operator >=275,7464
void swap(pair<Ty1, Ty2>& lhs, pair<Ty1, Ty2>& rhs)swap282,7619
pair<Ty1, Ty2> make_pair(Ty1&& first, Ty2&& second)make_pair289,7776

MyTinySTL/MyTinySTL/list.h,10876
#define MYTINYSTL_LIST_H_MYTINYSTL_LIST_H_2,29
namespace mystlmystl26,527
struct node_traitsnode_traits33,645
  typedef list_node_base<T>* base_ptr;base_ptr35,666
  typedef list_node<T>*      node_ptr;node_ptr36,705
struct list_node_baselist_node_base42,792
  typedef typename node_traits<T>::base_ptr base_ptr;base_ptr44,816
  typedef typename node_traits<T>::node_ptr node_ptr;node_ptr45,870
  base_ptr prev;  // 前一节点prev47,925
  base_ptr next;  // 下一节点next48,959
  node_ptr as_node()as_node52,1025
  void unlink()unlink57,1097
  base_ptr self()self62,1148
struct list_node : public list_node_base<T>list_node69,1239
  typedef typename node_traits<T>::base_ptr base_ptr;base_ptr71,1285
  typedef typename node_traits<T>::node_ptr node_ptr;node_ptr72,1339
  T value;  // 数据域value74,1394
  list_node(const T& v)list_node77,1445
  list_node(T&& v)list_node81,1491
  base_ptr as_base()as_base86,1546
  node_ptr self()self90,1617
struct list_iterator : public mystl::iterator<mystl::bidirectional_iterator_tag, T>list_iterator98,1735
  typedef T                                 value_type;value_type100,1821
  typedef T*                                pointer;pointer101,1877
  typedef T&                                reference;reference102,1930
  typedef typename node_traits<T>::base_ptr base_ptr;base_ptr103,1985
  typedef typename node_traits<T>::node_ptr node_ptr;node_ptr104,2039
  typedef list_iterator<T>                  self;self105,2093
  base_ptr node_;  // 指向当前节点node_107,2144
  list_iterator(base_ptr x)list_iterator111,2233
  list_iterator(node_ptr x)list_iterator113,2278
  list_iterator(const list_iterator& rhs)list_iterator115,2334
  reference operator*()  const { return node_->as_node()->value; }operator *119,2423
  pointer   operator->() const { return &(operator*()); }operator ->120,2490
  self& operator++()operator ++122,2549
  self operator++(int)operator ++128,2656
  self& operator--()operator --134,2738
  self operator--(int)operator --140,2845
  bool operator==(const self& rhs) const { return node_ == rhs.node_; }operator ==148,2955
  bool operator!=(const self& rhs) const { return node_ != rhs.node_; }operator !=149,3027
struct list_const_iterator : public iterator<bidirectional_iterator_tag, T>list_const_iterator153,3122
  typedef T                                 value_type;value_type155,3200
  typedef const T*                          pointer;pointer156,3256
  typedef const T&                          reference;reference157,3309
  typedef typename node_traits<T>::base_ptr base_ptr;base_ptr158,3364
  typedef typename node_traits<T>::node_ptr node_ptr;node_ptr159,3418
  typedef list_const_iterator<T>            self;self160,3472
  base_ptr node_;node_162,3523
  list_const_iterator(base_ptr x)list_const_iterator165,3577
  list_const_iterator(node_ptr x)list_const_iterator167,3628
  list_const_iterator(const list_iterator<T>& rhs)list_const_iterator169,3690
  list_const_iterator(const list_const_iterator& rhs)list_const_iterator171,3766
  reference operator*()  const { return node_->as_node()->value; }operator *174,3846
  pointer   operator->() const { return &(operator*()); }operator ->175,3913
  self& operator++()operator ++177,3972
  self operator++(int)operator ++183,4079
  self& operator--()operator --189,4161
  self operator--(int)operator --195,4268
  bool operator==(const self& rhs) const { return node_ == rhs.node_; }operator ==203,4378
  bool operator!=(const self& rhs) const { return node_ != rhs.node_; }operator !=204,4450
class listlist210,4601
  typedef mystl::allocator<T>                      allocator_type;allocator_type214,4654
  typedef mystl::allocator<T>                      data_allocator;data_allocator215,4721
  typedef mystl::allocator<list_node_base<T>>      base_allocator;base_allocator216,4788
  typedef mystl::allocator<list_node<T>>           node_allocator;node_allocator217,4855
  typedef typename allocator_type::value_type      value_type;value_type219,4923
  typedef typename allocator_type::pointer         pointer;pointer220,4986
  typedef typename allocator_type::const_pointer   const_pointer;const_pointer221,5046
  typedef typename allocator_type::reference       reference;reference222,5112
  typedef typename allocator_type::const_reference const_reference;const_reference223,5174
  typedef typename allocator_type::size_type       size_type;size_type224,5242
  typedef typename allocator_type::difference_type difference_type;difference_type225,5304
  typedef list_iterator<T>                         iterator;iterator227,5373
  typedef list_const_iterator<T>                   const_iterator;const_iterator228,5434
  typedef mystl::reverse_iterator<iterator>        reverse_iterator;reverse_iterator229,5501
  typedef mystl::reverse_iterator<const_iterator>  const_reverse_iterator;const_reverse_iterator230,5570
  typedef typename node_traits<T>::base_ptr        base_ptr;base_ptr232,5646
  typedef typename node_traits<T>::node_ptr        node_ptr;node_ptr233,5707
  allocator_type get_allocator() { return node_allocator(); }get_allocator235,5769
  base_ptr  node_;  // 指向末尾节点node_238,5841
  size_type size_;  // 大小size_239,5883
  list() list243,5967
  explicit list(size_type n) list246,6012
  list(size_type n, const T& value)list249,6077
  list(Iter first, Iter last)list254,6249
  list(std::initializer_list<T> ilist)list257,6310
  list(const list& rhs)list260,6395
  list(list&& rhs) noexceptlist263,6463
  list& operator=(const list& rhs)operator =270,6584
  list& operator=(list&& rhs) noexceptoperator =279,6718
  list& operator=(std::initializer_list<T> ilist)operator =286,6821
  ~list()~list293,6955
  iterator               begin()         noexceptbegin306,7132
  const_iterator         begin()   const noexceptbegin308,7208
  iterator               end()           noexcept end310,7284
  const_iterator         end()     const noexceptend312,7355
  reverse_iterator       rbegin()        noexceptrbegin315,7426
  const_reverse_iterator rbegin()  const noexceptrbegin317,7514
  reverse_iterator       rend()          noexceptrend319,7602
  const_reverse_iterator rend()    const noexceptrend321,7692
  const_iterator         cbegin()  const noexceptcbegin324,7783
  const_iterator         cend()    const noexceptcend326,7855
  const_reverse_iterator crbegin() const noexceptcrbegin328,7925
  const_reverse_iterator crend()   const noexceptcrend330,7998
  bool      empty()    const noexcept empty334,8094
  size_type size()     const noexcept size337,8169
  size_type max_size() const noexcept max_size340,8229
  reference       front() front344,8340
  const_reference front() const front350,8425
  reference       back() back356,8518
  const_reference back()  const back362,8604
  void     assign(size_type n, const value_type& value) assign372,8742
  void     assign(Iter first, Iter last)assign377,8937
  void     assign(std::initializer_list<T> ilist)assign380,9011
  void     emplace_front(Args&& ...args)emplace_front386,9181
  void     emplace_back(Args&& ...args)emplace_back395,9482
  iterator emplace(const_iterator pos, Args&& ...args)emplace404,9781
  iterator insert(const_iterator pos, const value_type& value)insert415,10116
  iterator insert(const_iterator pos, value_type&& value)insert423,10373
  iterator insert(const_iterator pos, size_type n, const value_type& value)insert431,10638
  iterator insert(const_iterator pos, Iter first, Iter last)insert439,10949
  void push_front(const value_type& value)push_front448,11214
  void push_front(value_type&& value)push_front456,11466
  void push_back(const value_type& value)push_back461,11552
  void push_back(value_type&& value)push_back469,11802
  void pop_front() pop_front476,11913
  void pop_back() pop_back485,12064
  void     resize(size_type new_size) { resize(new_size, value_type()); }resize503,12369
  void     swap(list& rhs) noexceptswap506,12508
  void remove(const value_type& value)remove518,12854
  { remove_if([&](const value_type& v) {return v == value; }); }__anon0472430f0102519,12893
  void unique()unique523,13032
  void merge(list& x)merge528,13157
  void sort()sort533,13278
  void sort(Compared comp)sort536,13379
list<T>::erase(const_iterator pos)erase582,14742
list<T>::erase(const_iterator first, const_iterator last)erase596,15029
void list<T>::clear()clear614,15369
void list<T>::resize(size_type new_size, const value_type& value)resize630,15655
void list<T>::splice(const_iterator pos, list& x)splice651,15997
void list<T>::splice(const_iterator pos, list& x, const_iterator it)splice671,16410
void list<T>::splice(const_iterator pos, list& x, const_iterator first, const_iterator last)splice689,16826
void list<T>::remove_if(UnaryPredicate pred)remove_if709,17353
void list<T>::unique(BinaryPredicate pred)unique726,17651
void list<T>::merge(list& x, Compare comp)merge750,17992
void list<T>::reverse()reverse800,18958
list<T>::create_node(Args&& ...args)create_node823,19421
void list<T>::destroy_node(node_ptr p)destroy_node842,19773
void list<T>::fill_init(size_type n, const value_type& value)fill_init850,19959
void list<T>::copy_init(Iter first, Iter last)copy_init875,20428
list<T>::link_iter_node(const_iterator pos, base_ptr link_node)link_iter_node901,20940
void list<T>::link_nodes(base_ptr pos, base_ptr first, base_ptr last)link_nodes920,21327
void list<T>::link_nodes_at_front(base_ptr first, base_ptr last)link_nodes_at_front930,21555
void list<T>::link_nodes_at_back(base_ptr first, base_ptr last)link_nodes_at_back940,21785
void list<T>::unlink_nodes(base_ptr first, base_ptr last)unlink_nodes950,22021
void list<T>::fill_assign(size_type n, const value_type& value)fill_assign958,22205
void list<T>::copy_assign(Iter f2, Iter l2)copy_assign979,22524
list<T>::fill_insert(const_iterator pos, size_type n, const value_type& value)fill_insert1000,22841
list<T>::copy_insert(const_iterator pos, size_type n, Iter first)copy_insert1043,23816
list<T>::list_sort(iterator f1, iterator l2, size_type n, Compared comp)list_sort1085,24783
bool operator==(const list<T>& lhs, const list<T>& rhs)operator ==1160,26128
bool operator<(const list<T>& lhs, const list<T>& rhs)operator <1172,26402
bool operator!=(const list<T>& lhs, const list<T>& rhs)operator !=1178,26574
bool operator>(const list<T>& lhs, const list<T>& rhs)operator >1184,26678
bool operator<=(const list<T>& lhs, const list<T>& rhs)operator <=1190,26777
bool operator>=(const list<T>& lhs, const list<T>& rhs)operator >=1196,26880
void swap(list<T>& lhs, list<T>& rhs) noexceptswap1203,27008

MyTinySTL/MyTinySTL/astring.h,337
#define MYTINYSTL_ASTRING_H_MYTINYSTL_ASTRING_H_2,32
namespace mystlmystl8,148
using string    = mystl::basic_string<char>;string11,167
using wstring   = mystl::basic_string<wchar_t>;wstring12,212
using u16string = mystl::basic_string<char16_t>;u16string13,260
using u32string = mystl::basic_string<char32_t>;u32string14,309

MyTinySTL/MyTinySTL/set_algo.h,445
#define MYTINYSTL_SET_ALGO_H_MYTINYSTL_SET_ALGO_H_2,33
namespace mystlmystl10,247
OutputIter set_union(InputIter1 first1, InputIter1 last1,set_union18,629
OutputIter set_intersection(InputIter1 first1, InputIter1 last1,set_intersection81,2326
OutputIter set_difference(InputIter1 first1, InputIter1 last1,set_difference138,3778
OutputIter set_symmetric_difference(InputIter1 first1, InputIter1 last1,set_symmetric_difference195,5296

MyTinySTL/MyTinySTL/iterator.h,6701
#define MYTINYSTL_ITERATOR_H_MYTINYSTL_ITERATOR_H_2,33
namespace mystlmystl10,202
struct input_iterator_tag {};input_iterator_tag14,246
struct output_iterator_tag {};output_iterator_tag15,276
struct forward_iterator_tag : public input_iterator_tag {};forward_iterator_tag16,307
struct bidirectional_iterator_tag : public forward_iterator_tag {};bidirectional_iterator_tag17,367
struct random_access_iterator_tag : public bidirectional_iterator_tag {};random_access_iterator_tag18,435
  struct iteratoriterator23,636
  typedef Category                             iterator_category;iterator_category25,656
  typedef T                                    value_type;value_type26,722
  typedef Pointer                              pointer;pointer27,781
  typedef Reference                            reference;reference28,837
  typedef Distance                             difference_type;difference_type29,895
struct has_iterator_cathas_iterator_cat35,1002
  struct two { char a; char b; };two38,1037
  struct two { char a; char b; };a38,1037
  struct two { char a; char b; };b38,1037
  static const bool value = sizeof(test<T>(0)) == sizeof(char);value42,1197
struct iterator_traits_impl {};iterator_traits_impl46,1297
struct iterator_traits_impl<Iterator, true>iterator_traits_impl49,1356
  typedef typename Iterator::iterator_category iterator_category;iterator_category51,1402
  typedef typename Iterator::value_type        value_type;value_type52,1468
  typedef typename Iterator::pointer           pointer;pointer53,1527
  typedef typename Iterator::reference         reference;reference54,1583
  typedef typename Iterator::difference_type   difference_type;difference_type55,1641
struct iterator_traits_helper {};iterator_traits_helper59,1741
struct iterator_traits_helper<Iterator, true>iterator_traits_helper62,1802
struct iterator_traits iterator_traits71,2129
struct iterator_traits<T*>iterator_traits76,2296
  typedef random_access_iterator_tag           iterator_category;iterator_category78,2325
  typedef T                                    value_type;value_type79,2391
  typedef T*                                   pointer;pointer80,2450
  typedef T&                                   reference;reference81,2506
  typedef ptrdiff_t                            difference_type;difference_type82,2564
struct iterator_traits<const T*>iterator_traits86,2651
  typedef random_access_iterator_tag           iterator_category;iterator_category88,2686
  typedef T                                    value_type;value_type89,2752
  typedef const T*                             pointer;pointer90,2811
  typedef const T&                             reference;reference91,2867
  typedef ptrdiff_t                            difference_type;difference_type92,2925
struct has_iterator_cat_ofhas_iterator_cat_of96,3073
struct has_iterator_cat_of<T, U, false> : public m_false_type {};has_iterator_cat_of104,3268
struct is_input_iterator : public has_iterator_cat_of<Iter, input_iterator_tag> {};is_input_iterator107,3357
struct is_output_iterator : public has_iterator_cat_of<Iter, output_iterator_tag> {};is_output_iterator110,3464
struct is_forward_iterator : public has_iterator_cat_of<Iter, forward_iterator_tag> {};is_forward_iterator113,3573
struct is_bidirectional_iterator : public has_iterator_cat_of<Iter, bidirectional_iterator_tag> is_bidirectional_iterator116,3684
struct is_random_access_iterator : public has_iterator_cat_of<Iter, random_access_iterator_tag> is_random_access_iterator119,3807
struct is_iterator :is_iterator122,3934
iterator_category(const Iterator&)iterator_category131,4182
  typedef typename iterator_traits<Iterator>::iterator_category Category;Category133,4219
distance_type(const Iterator&)distance_type140,4438
value_type(const Iterator&)value_type148,4666
distance_dispatch(InputIterator first, InputIterator last, input_iterator_tag)distance_dispatch158,4956
distance_dispatch(RandomIter first, RandomIter last,distance_dispatch172,5307
distance(InputIterator first, InputIterator last)distance180,5522
void advance_dispatch(InputIterator& i, Distance n, input_iterator_tag)advance_dispatch189,5788
void advance_dispatch(BidirectionalIterator& i, Distance n, bidirectional_iterator_tag)advance_dispatch197,5996
void advance_dispatch(RandomIter& i, Distance n, random_access_iterator_tag)advance_dispatch207,6250
void advance(InputIterator& i, Distance n)advance213,6389
class reverse_iteratorreverse_iterator223,6700
  Iterator current;  // 记录对应的正向迭代器current226,6734
  typedef typename iterator_traits<Iterator>::iterator_category iterator_category;iterator_category230,6840
  typedef typename iterator_traits<Iterator>::value_type        value_type;value_type231,6923
  typedef typename iterator_traits<Iterator>::difference_type   difference_type;difference_type232,6999
  typedef typename iterator_traits<Iterator>::pointer           pointer;pointer233,7080
  typedef typename iterator_traits<Iterator>::reference         reference;reference234,7153
  typedef Iterator                                              iterator_type;iterator_type236,7229
  typedef reverse_iterator<Iterator>                            self;self237,7308
  reverse_iterator() {}reverse_iterator241,7405
  explicit reverse_iterator(iterator_type i) :current(i) {}reverse_iterator242,7429
  reverse_iterator(const self& rhs) :current(rhs.current) {}reverse_iterator243,7489
  iterator_type base() const base247,7595
  reference operator*() constoperator *251,7669
  pointer operator->() constoperator ->256,7799
  self& operator++()operator ++262,7896
  self operator++(int)operator ++267,7958
  self& operator--()operator --274,8074
  self operator--(int)operator --279,8136
  self& operator+=(difference_type n)operator +=286,8221
  self operator+(difference_type n) constoperator +291,8303
  self& operator-=(difference_type n)operator -=295,8383
  self operator-(difference_type n) constoperator -300,8465
  reference operator[](difference_type n) constoperator []305,8546
operator-(const reverse_iterator<Iterator>& lhs,operator -314,8730
bool operator==(const reverse_iterator<Iterator>& lhs,operator ==322,8918
bool operator<(const reverse_iterator<Iterator>& lhs,operator <329,9094
bool operator!=(const reverse_iterator<Iterator>& lhs,operator !=336,9254
bool operator>(const reverse_iterator<Iterator>& lhs,operator >343,9419
bool operator<=(const reverse_iterator<Iterator>& lhs,operator <=350,9578
bool operator>=(const reverse_iterator<Iterator>& lhs,operator >=357,9742

MyTinySTL/MyTinySTL/set.h,11824
#define MYTINYSTL_SET_H_MYTINYSTL_SET_H_2,28
namespace mystlmystl18,520
class setset24,730
  typedef Key        key_type;key_type27,750
  typedef Key        value_type;value_type28,781
  typedef Compare    key_compare;key_compare29,814
  typedef Compare    value_compare;value_compare30,848
  typedef mystl::rb_tree<value_type, key_compare>  base_type;base_type34,937
  base_type tree_;tree_35,999
  typedef typename base_type::node_type              node_type;node_type39,1063
  typedef typename base_type::const_pointer          pointer;pointer40,1127
  typedef typename base_type::const_pointer          const_pointer;const_pointer41,1189
  typedef typename base_type::const_reference        reference;reference42,1257
  typedef typename base_type::const_reference        const_reference;const_reference43,1321
  typedef typename base_type::const_iterator         iterator;iterator44,1391
  typedef typename base_type::const_iterator         const_iterator;const_iterator45,1454
  typedef typename base_type::const_reverse_iterator reverse_iterator;reverse_iterator46,1523
  typedef typename base_type::const_reverse_iterator const_reverse_iterator;const_reverse_iterator47,1594
  typedef typename base_type::size_type              size_type;size_type48,1671
  typedef typename base_type::difference_type        difference_type;difference_type49,1735
  typedef typename base_type::allocator_type         allocator_type;allocator_type50,1805
  set(InputIterator first, InputIterator last) set57,1972
  set(std::initializer_list<value_type> ilist)set60,2074
  set(const set& rhs) set64,2190
  set(set&& rhs) noexceptset68,2243
  set& operator=(const set& rhs)operator =73,2313
  set& operator=(set&& rhs)operator =78,2395
  set& operator=(std::initializer_list<value_type> ilist)operator =83,2488
  key_compare      key_comp()      const { return tree_.key_comp(); }key_comp92,2664
  value_compare    value_comp()    const { return tree_.key_comp(); }value_comp93,2734
  allocator_type   get_allocator() const { return tree_.get_allocator(); }get_allocator94,2804
  iterator               begin()         noexceptbegin98,2902
  const_iterator         begin()   const noexceptbegin100,2980
  iterator               end()           noexceptend102,3058
  const_iterator         end()     const noexceptend104,3134
  reverse_iterator       rbegin()        noexceptrbegin107,3211
  const_reverse_iterator rbegin()  const noexceptrbegin109,3299
  reverse_iterator       rend()          noexceptrend111,3393
  const_reverse_iterator rend()    const noexceptrend113,3483
  const_iterator         cbegin()  const noexceptcbegin116,3580
  const_iterator         cend()    const noexceptcend118,3652
  const_reverse_iterator crbegin() const noexceptcrbegin120,3722
  const_reverse_iterator crend()   const noexceptcrend122,3795
  bool                   empty()    const noexcept { return tree_.empty(); }empty126,3885
  size_type              size()     const noexcept { return tree_.size(); }size127,3962
  size_type              max_size() const noexcept { return tree_.max_size(); }max_size128,4038
  pair<iterator, bool> emplace(Args&& ...args)emplace133,4171
  iterator emplace_hint(iterator hint, Args&& ...args)emplace_hint139,4318
  pair<iterator, bool> insert(const value_type& value)insert144,4461
  pair<iterator, bool> insert(value_type&& value)insert148,4563
  iterator insert(iterator hint, const value_type& value)insert153,4674
  iterator insert(iterator hint, value_type&& value)insert157,4785
  void insert(InputIterator first, InputIterator last)insert163,4938
  void      erase(iterator position)             { tree_.erase(position); }erase168,5040
  size_type erase(const key_type& key)           { return tree_.erase_unique(key); }erase169,5116
  void      erase(iterator first, iterator last) { tree_.erase(first, last); }erase170,5201
  void      clear() { tree_.clear(); }clear172,5281
  iterator       find(const key_type& key)              { return tree_.find(key); }find176,5344
  const_iterator find(const key_type& key)        const { return tree_.find(key); }find177,5428
  size_type      count(const key_type& key)       const { return tree_.count_unique(key); }count179,5513
  iterator       lower_bound(const key_type& key)       { return tree_.lower_bound(key); }lower_bound181,5606
  const_iterator lower_bound(const key_type& key) const { return tree_.lower_bound(key); }lower_bound182,5697
  iterator       upper_bound(const key_type& key)       { return tree_.upper_bound(key); }upper_bound184,5789
  const_iterator upper_bound(const key_type& key) const { return tree_.upper_bound(key); }upper_bound185,5880
    equal_range(const key_type& key)equal_range188,5999
    equal_range(const key_type& key) constequal_range192,6120
  void swap(set& rhs) noexceptswap195,6208
  friend bool operator==(const set& lhs, const set& rhs) { return lhs.tree_ == rhs.tree_; }operator ==199,6277
  friend bool operator< (const set& lhs, const set& rhs) { return lhs.tree_ <  rhs.tree_; }operator <200,6369
bool operator==(const set<Key, Compare>& lhs, const set<Key, Compare>& rhs)operator ==205,6526
bool operator<(const set<Key, Compare>& lhs, const set<Key, Compare>& rhs)operator <211,6664
bool operator!=(const set<Key, Compare>& lhs, const set<Key, Compare>& rhs)operator !=217,6800
bool operator>(const set<Key, Compare>& lhs, const set<Key, Compare>& rhs)operator >223,6941
bool operator<=(const set<Key, Compare>& lhs, const set<Key, Compare>& rhs)operator <=229,7077
bool operator>=(const set<Key, Compare>& lhs, const set<Key, Compare>& rhs)operator >=235,7217
void swap(set<Key, Compare>& lhs, set<Key, Compare>& rhs) noexceptswap242,7382
class multisetmultiset252,7757
  typedef Key        key_type;key_type255,7782
  typedef Key        value_type;value_type256,7813
  typedef Compare    key_compare;key_compare257,7846
  typedef Compare    value_compare;value_compare258,7880
  typedef mystl::rb_tree<value_type, key_compare>  base_type;base_type262,7969
  base_type tree_;  // 以 rb_tree 表现 multisettree_263,8031
  typedef typename base_type::node_type              node_type;node_type267,8127
  typedef typename base_type::const_pointer          pointer;pointer268,8191
  typedef typename base_type::const_pointer          const_pointer;const_pointer269,8253
  typedef typename base_type::const_reference        reference;reference270,8321
  typedef typename base_type::const_reference        const_reference;const_reference271,8385
  typedef typename base_type::const_iterator         iterator;iterator272,8455
  typedef typename base_type::const_iterator         const_iterator;const_iterator273,8518
  typedef typename base_type::const_reverse_iterator reverse_iterator;reverse_iterator274,8587
  typedef typename base_type::const_reverse_iterator const_reverse_iterator;const_reverse_iterator275,8658
  typedef typename base_type::size_type              size_type;size_type276,8735
  typedef typename base_type::difference_type        difference_type;difference_type277,8799
  typedef typename base_type::allocator_type         allocator_type;allocator_type278,8869
  multiset(InputIterator first, InputIterator last) multiset285,9041
  multiset(std::initializer_list<value_type> ilist)multiset288,9147
  multiset(const multiset& rhs)multiset292,9268
  multiset(multiset&& rhs) noexceptmultiset296,9330
  multiset& operator=(const multiset& rhs) operator =301,9410
  multiset& operator=(multiset&& rhs)operator =306,9505
  multiset& operator=(std::initializer_list<value_type> ilist)operator =311,9606
  key_compare      key_comp()      const { return tree_.key_comp(); }key_comp320,9786
  value_compare    value_comp()    const { return tree_.key_comp(); }value_comp321,9856
  allocator_type   get_allocator() const { return tree_.get_allocator(); }get_allocator322,9926
  iterator               begin()         noexceptbegin326,10024
  const_iterator         begin()   const noexceptbegin328,10102
  iterator               end()           noexceptend330,10180
  const_iterator         end()     const noexceptend332,10256
  reverse_iterator       rbegin()        noexceptrbegin335,10333
  const_reverse_iterator rbegin()  const noexceptrbegin337,10421
  reverse_iterator       rend()          noexceptrend339,10515
  const_reverse_iterator rend()    const noexceptrend341,10605
  const_iterator         cbegin()  const noexceptcbegin344,10702
  const_iterator         cend()    const noexceptcend346,10774
  const_reverse_iterator crbegin() const noexceptcrbegin348,10844
  const_reverse_iterator crend()   const noexceptcrend350,10917
  bool                   empty()    const noexcept { return tree_.empty(); }empty354,11007
  size_type              size()     const noexcept { return tree_.size(); }size355,11084
  size_type              max_size() const noexcept { return tree_.max_size(); }max_size356,11160
  iterator emplace(Args&& ...args)emplace361,11293
  iterator emplace_hint(iterator hint, Args&& ...args)emplace_hint367,11427
  iterator insert(const value_type& value)insert372,11569
  iterator insert(value_type&& value)insert376,11658
  iterator insert(iterator hint, const value_type& value)insert381,11756
  iterator insert(iterator hint, value_type&& value)insert385,11866
  void insert(InputIterator first, InputIterator last)insert391,12018
  void           erase(iterator position)             { tree_.erase(position); }erase396,12119
  size_type      erase(const key_type& key)           { return tree_.erase_multi(key); }erase397,12200
  void           erase(iterator first, iterator last) { tree_.erase(first, last); }erase398,12289
  void           clear() { tree_.clear(); }clear400,12374
  iterator       find(const key_type& key)              { return tree_.find(key); }find404,12447
  const_iterator find(const key_type& key)        const { return tree_.find(key); }find405,12531
  size_type      count(const key_type& key)       const { return tree_.count_multi(key); }count407,12616
  iterator       lower_bound(const key_type& key)       { return tree_.lower_bound(key); }lower_bound409,12708
  const_iterator lower_bound(const key_type& key) const { return tree_.lower_bound(key); }lower_bound410,12799
  iterator       upper_bound(const key_type& key)       { return tree_.upper_bound(key); }upper_bound412,12891
  const_iterator upper_bound(const key_type& key) const { return tree_.upper_bound(key); }upper_bound413,12982
    equal_range(const key_type& key)equal_range416,13101
    equal_range(const key_type& key) constequal_range420,13221
  void swap(multiset& rhs) noexceptswap423,13308
  friend bool operator==(const multiset& lhs, const multiset& rhs) { return lhs.tree_ == rhs.treoperator ==427,13382
  friend bool operator< (const multiset& lhs, const multiset& rhs) { return lhs.tree_ <  rhs.treoperator <428,13484
bool operator==(const multiset<Key, Compare>& lhs, const multiset<Key, Compare>& rhs)operator ==433,13651
bool operator<(const multiset<Key, Compare>& lhs, const multiset<Key, Compare>& rhs)operator <439,13799
bool operator!=(const multiset<Key, Compare>& lhs, const multiset<Key, Compare>& rhs)operator !=445,13945
bool operator>(const multiset<Key, Compare>& lhs, const multiset<Key, Compare>& rhs)operator >451,14096
bool operator<=(const multiset<Key, Compare>& lhs, const multiset<Key, Compare>& rhs)operator <=457,14242
bool operator>=(const multiset<Key, Compare>& lhs, const multiset<Key, Compare>& rhs)operator >=463,14392
void swap(multiset<Key, Compare>& lhs, multiset<Key, Compare>& rhs) noexceptswap470,14567

MyTinySTL/MyTinySTL/memory.h,2190
#define MYTINYSTL_MEMORY_H_MYTINYSTL_MEMORY_H_2,31
namespace mystlmystl16,385
constexpr Tp* address_of(Tp& value) noexceptaddress_of21,446
pair<T*, ptrdiff_t> get_buffer_helper(ptrdiff_t len, T*)get_buffer_helper29,568
pair<T*, ptrdiff_t> get_temporary_buffer(ptrdiff_t len)get_temporary_buffer44,992
pair<T*, ptrdiff_t> get_temporary_buffer(ptrdiff_t len, T*)get_temporary_buffer50,1125
void release_temporary_buffer(T* ptr)release_temporary_buffer56,1262
class temporary_buffertemporary_buffer65,1525
  ptrdiff_t original_len;  // 缓冲区申请的大小original_len68,1559
  ptrdiff_t len;           // 缓冲区实际的大小len69,1614
  T*        buffer;        // 指向缓冲区的指针buffer70,1669
  ~temporary_buffer()~temporary_buffer76,1826
  ptrdiff_t size()           const noexcept { return len; }size84,1926
  ptrdiff_t requested_size() const noexcept { return original_len; }requested_size85,1986
  T*        begin()                noexcept { return buffer; }begin86,2055
  T*        end()                  noexcept { return buffer + len; }end87,2118
  void initialize_buffer(const T&, std::true_type) {}initialize_buffer91,2223
  void initialize_buffer(const T& value, std::false_type)initialize_buffer92,2277
temporary_buffer(ForwardIterator first, ForwardIterator last)temporary_buffer103,2589
void temporary_buffer<ForwardIterator, T>::allocate_buffer()allocate_buffer124,2984
class auto_ptrauto_ptr142,3518
  typedef T    elem_type;elem_type145,3543
  T* m_ptr;  // 实际指针m_ptr148,3579
  explicit auto_ptr(T* p = nullptr) :m_ptr(p) {}auto_ptr152,3653
  auto_ptr(auto_ptr& rhs) :m_ptr(rhs.release()) {}auto_ptr153,3702
  auto_ptr(auto_ptr<U>& rhs) : m_ptr(rhs.release()) {}auto_ptr155,3774
  auto_ptr& operator=(auto_ptr& rhs)operator =157,3830
  auto_ptr& operator=(auto_ptr<U>& rhs)operator =167,3997
  ~auto_ptr() { delete m_ptr; }~auto_ptr177,4159
  T& operator*()  const { return *m_ptr; }operator *181,4237
  T* operator->() const { return m_ptr; }operator ->182,4280
  T* get() const { return m_ptr; }get185,4341
  T* release()release188,4395
  void reset(T* p = nullptr)reset196,4494

MyTinySTL/MyTinySTL/construct.h,654
#define MYTINYSTL_CONSTRUCT_H_MYTINYSTL_CONSTRUCT_H_2,34
namespace mystlmystl18,373
void construct(Ty* ptr)construct24,439
void construct(Ty1* ptr, const Ty2& value)construct30,527
void construct(Ty* ptr, Args&&... args)construct36,643
void destroy_one(Ty*, std::true_type) {}destroy_one44,792
void destroy_one(Ty* pointer, std::false_type)destroy_one47,854
void destroy_cat(ForwardIter , ForwardIter , std::true_type) {}destroy_cat56,989
void destroy_cat(ForwardIter first, ForwardIter last, std::false_type)destroy_cat59,1083
void destroy(Ty* pointer)destroy66,1234
void destroy(ForwardIter first, ForwardIter last)destroy72,1356

MyTinySTL/MyTinySTL/vector.h,6687
#define MYTINYSTL_VECTOR_H_MYTINYSTL_VECTOR_H_2,31
namespace mystlmystl27,612
class vectorvector43,855
  typedef mystl::allocator<T>                      allocator_type;allocator_type48,998
  typedef mystl::allocator<T>                      data_allocator;data_allocator49,1065
  typedef typename allocator_type::value_type      value_type;value_type51,1133
  typedef typename allocator_type::pointer         pointer;pointer52,1196
  typedef typename allocator_type::const_pointer   const_pointer;const_pointer53,1256
  typedef typename allocator_type::reference       reference;reference54,1322
  typedef typename allocator_type::const_reference const_reference;const_reference55,1384
  typedef typename allocator_type::size_type       size_type;size_type56,1452
  typedef typename allocator_type::difference_type difference_type;difference_type57,1514
  typedef value_type*                              iterator;iterator59,1583
  typedef const value_type*                        const_iterator;const_iterator60,1644
  typedef mystl::reverse_iterator<iterator>        reverse_iterator;reverse_iterator61,1711
  typedef mystl::reverse_iterator<const_iterator>  const_reverse_iterator;const_reverse_iterator62,1780
  allocator_type get_allocator() { return data_allocator(); }get_allocator64,1856
  iterator begin_;  // 表示目前使用空间的头部begin_67,1928
  iterator end_;    // 表示目前使用空间的尾部end_68,1985
  iterator cap_;    // 表示目前储存空间的尾部cap_69,2042
  vector() noexceptvector73,2153
  explicit vector(size_type n)vector76,2192
  vector(size_type n, const value_type& value)vector79,2258
  vector(Iter first, Iter last)vector84,2441
  vector(const vector& rhs)vector90,2545
  vector(vector&& rhs) noexceptvector95,2620
  vector(std::initializer_list<value_type> ilist)vector105,2799
  vector& operator=(std::initializer_list<value_type> ilist)operator =113,2987
  ~vector()~vector120,3134
  iterator               begin()         noexcept begin129,3282
  const_iterator         begin()   const noexceptbegin131,3354
  iterator               end()           noexceptend133,3425
  const_iterator         end()     const noexcept end135,3494
  reverse_iterator       rbegin()        noexcept rbegin138,3565
  const_reverse_iterator rbegin()  const noexceptrbegin140,3654
  reverse_iterator       rend()          noexceptrend142,3748
  const_reverse_iterator rend()    const noexcept rend144,3838
  const_iterator         cbegin()  const noexcept cbegin147,3936
  const_iterator         cend()    const noexceptcend149,4009
  const_reverse_iterator crbegin() const noexceptcrbegin151,4079
  const_reverse_iterator crend()   const noexceptcrend153,4152
  bool      empty()    const noexceptempty157,4248
  size_type size()     const noexceptsize159,4315
  size_type max_size() const noexceptmax_size161,4405
  size_type capacity() const noexceptcapacity163,4496
  reference operator[](size_type n)operator []169,4680
  const_reference operator[](size_type n) constoperator []174,4779
  reference at(size_type n)at179,4890
  const_reference at(size_type n) constat184,5033
  reference front()front190,5189
  const_reference front() constfront195,5264
  reference back()back200,5351
  const_reference back() constback205,5429
  pointer       data()       noexcept { return begin_; }data211,5520
  const_pointer data() const noexcept { return begin_; }data212,5577
  void assign(size_type n, const value_type& value)assign218,5679
  void assign(Iter first, Iter last)assign223,5869
  void assign(std::initializer_list<value_type> il)assign229,6005
  void push_back(value_type&& value)push_back243,6378
  iterator insert(const_iterator pos, value_type&& value)insert251,6553
  iterator insert(const_iterator pos, size_type n, const value_type& value)insert254,6659
  void     insert(const_iterator pos, Iter first, Iter last)insert262,6962
  void     clear() { erase(begin(), end()); }clear271,7275
  void     resize(size_type new_size) { return resize(new_size, value_type()); }resize274,7344
  void     reverse() { mystl::reverse(begin(), end()); }reverse277,7490
vector<T>& vector<T>::operator=(const vector& rhs)operator =330,8861
vector<T>& vector<T>::operator=(vector&& rhs) noexceptoperator =358,9494
void vector<T>::reserve(size_type n)reserve372,9849
void vector<T>::shrink_to_fit()shrink_to_fit390,10346
vector<T>::emplace(const_iterator pos, Args&& ...args)emplace402,10580
void vector<T>::emplace_back(Args&& ...args)emplace_back431,11391
void vector<T>::push_back(const value_type& value)push_back446,11688
void vector<T>::pop_back()pop_back461,11940
vector<T>::insert(const_iterator pos, const value_type& value)insert471,12119
vector<T>::erase(const_iterator pos)erase501,12915
vector<T>::erase(const_iterator first, const_iterator last)erase514,13229
void vector<T>::resize(size_type new_size, const value_type& value)resize526,13609
void vector<T>::swap(vector<T>& rhs) noexceptswap540,13862
void vector<T>::try_init() noexcepttry_init555,14239
void vector<T>::init_space(size_type size, size_type cap)init_space573,14504
fill_init(size_type n, const value_type& value)fill_init593,14827
range_init(Iter first, Iter last)range_init604,15109
destroy_and_recover(iterator first, iterator last, size_type n)destroy_and_recover615,15423
get_new_cap(size_type add_size)get_new_cap625,15656
fill_assign(size_type n, const value_type& value)fill_assign644,16236
copy_assign(IIter first, IIter last, input_iterator_tag)copy_assign666,16644
copy_assign(FIter first, FIter last, forward_iterator_tag)copy_assign687,17002
reallocate_emplace(iterator pos, Args&& ...args)reallocate_emplace715,17652
void vector<T>::reallocate_insert(iterator pos, const value_type& value)reallocate_insert740,18351
fill_insert(iterator pos, size_type n, const value_type& value)fill_insert768,19111
copy_insert(iterator pos, IIter first, IIter last)copy_insert820,20644
void vector<T>::reinsert(size_type size)reinsert869,22017
bool operator==(const vector<T>& lhs, const vector<T>& rhs)operator ==891,22526
bool operator<(const vector<T>& lhs, const vector<T>& rhs)operator <898,22702
bool operator!=(const vector<T>& lhs, const vector<T>& rhs)operator !=904,22874
bool operator>(const vector<T>& lhs, const vector<T>& rhs)operator >910,22982
bool operator<=(const vector<T>& lhs, const vector<T>& rhs)operator <=916,23085
bool operator>=(const vector<T>& lhs, const vector<T>& rhs)operator >=922,23192
void swap(vector<T>& lhs, vector<T>& rhs)swap929,23324

MyTinySTL/MyTinySTL/hashtable.h,17765
#define MYTINYSTL_HASHTABLE_H_MYTINYSTL_HASHTABLE_H_2,34
namespace mystlmystl16,328
struct hashtable_nodehashtable_node21,395
  hashtable_node* next;   // 指向下一个节点next23,419
  T               value;  // 储存实值value24,470
  hashtable_node(const T& n) :next(nullptr), value(n) {}hashtable_node27,543
  hashtable_node(const hashtable_node& node) :next(node.next), value(node.value) {}hashtable_node29,601
  hashtable_node(hashtable_node&& node) :next(node.next), value(mystl::move(node.value))hashtable_node30,685
struct ht_value_traits_impht_value_traits_imp38,852
  typedef T key_type;key_type40,881
  typedef T mapped_type;mapped_type41,903
  typedef T value_type;value_type42,928
  static const key_type& get_key(const Ty& value)get_key45,975
  static const value_type& get_value(const Ty& value)get_value51,1074
struct ht_value_traits_imp<T, true>ht_value_traits_imp58,1177
  typedef typename std::remove_cv<typename T::first_type>::type key_type;key_type60,1215
  typedef typename T::second_type                               mapped_type;mapped_type61,1289
  typedef T                                                     value_type;value_type62,1366
  static const key_type& get_key(const Ty& value)get_key65,1465
  static const value_type& get_value(const Ty& value)get_value71,1570
struct ht_value_traitsht_value_traits78,1673
  static constexpr bool is_map = mystl::is_pair<T>::value;is_map80,1698
  typedef ht_value_traits_imp<T, is_map> value_traits_type;value_traits_type82,1758
  typedef typename value_traits_type::key_type    key_type;key_type84,1819
  typedef typename value_traits_type::mapped_type mapped_type;mapped_type85,1879
  typedef typename value_traits_type::value_type  value_type;value_type86,1942
  static const key_type& get_key(const Ty& value)get_key89,2027
  static const value_type& get_value(const Ty& value)get_value95,2154
struct ht_iterator_base :public mystl::iterator<mystl::forward_iterator_tag, T>ht_iterator_base122,2670
  typedef mystl::hashtable<T, Hash, KeyEqual>         hashtable;hashtable124,2752
  typedef ht_iterator_base<T, Hash, KeyEqual>         base;base125,2817
  typedef mystl::ht_iterator<T, Hash, KeyEqual>       iterator;iterator126,2877
  typedef mystl::ht_const_iterator<T, Hash, KeyEqual> const_iterator;const_iterator127,2941
  typedef hashtable_node<T>*                          node_ptr;node_ptr128,3011
  typedef hashtable*                                  contain_ptr;contain_ptr129,3075
  typedef const node_ptr                              const_node_ptr;const_node_ptr130,3142
  typedef const contain_ptr                           const_contain_ptr;const_contain_ptr131,3212
  typedef size_t                                      size_type;size_type133,3286
  typedef ptrdiff_t                                   difference_type;difference_type134,3351
  node_ptr    node;  // 迭代器当前所指节点node136,3423
  contain_ptr ht;    // 保持与容器的连结 // hashtable_ptrht137,3475
  bool operator==(const base& rhs) const { return node == rhs.node; }operator ==141,3575
  bool operator!=(const base& rhs) const { return node != rhs.node; }operator !=142,3645
struct ht_iterator :public ht_iterator_base<T, Hash, KeyEqual>ht_iterator146,3766
  typedef ht_iterator_base<T, Hash, KeyEqual> base;base148,3831
  typedef typename base::hashtable            hashtable;hashtable149,3883
  typedef typename base::iterator             iterator;iterator150,3940
  typedef typename base::const_iterator       const_iterator;const_iterator151,3996
  typedef typename base::node_ptr             node_ptr;node_ptr152,4058
  typedef typename base::contain_ptr          contain_ptr;contain_ptr153,4114
  typedef ht_value_traits<T>                  value_traits;value_traits155,4174
  typedef T                                   value_type;value_type156,4234
  typedef value_type*                         pointer;pointer157,4292
  typedef value_type&                         reference;reference158,4347
  ht_iterator(node_ptr n, contain_ptr t)ht_iterator164,4471
  ht_iterator(const iterator& rhs)ht_iterator169,4546
  ht_iterator(const const_iterator& rhs)ht_iterator174,4627
  iterator& operator=(const iterator& rhs)operator =179,4714
  iterator& operator=(const const_iterator& rhs)operator =188,4859
  reference operator*()  const { return node->value; }operator *199,5032
  pointer   operator->() const { return &(operator*()); }operator ->200,5087
  iterator& operator++()operator ++202,5146
  iterator operator++(int)operator ++215,5541
struct ht_const_iterator :public ht_iterator_base<T, Hash, KeyEqual>ht_const_iterator224,5682
  typedef ht_iterator_base<T, Hash, KeyEqual> base;base226,5753
  typedef typename base::hashtable            hashtable;hashtable227,5805
  typedef typename base::iterator             iterator;iterator228,5862
  typedef typename base::const_iterator       const_iterator;const_iterator229,5918
  typedef typename base::const_node_ptr       node_ptr;node_ptr230,5980
  typedef typename base::const_contain_ptr    contain_ptr;contain_ptr231,6036
  typedef ht_value_traits<T>                  value_traits;value_traits233,6096
  typedef T                                   value_type;value_type234,6156
  typedef const value_type*                   pointer;pointer235,6214
  typedef const value_type&                   reference;reference236,6269
  ht_const_iterator(node_ptr n, contain_ptr t)ht_const_iterator242,6399
  ht_const_iterator(const iterator& rhs)ht_const_iterator247,6480
  ht_const_iterator(const const_iterator& rhs)ht_const_iterator252,6567
  const_iterator& operator=(const iterator& rhs)operator =257,6660
  const_iterator& operator=(const const_iterator& rhs)operator =266,6811
  reference operator*()  const { return node->value; }operator *277,6990
  pointer   operator->() const { return &(operator*()); }operator ->278,7045
  const_iterator& operator++()operator ++280,7104
  const_iterator operator++(int)operator ++295,7521
struct ht_local_iterator :public mystl::iterator<mystl::forward_iterator_tag, T>ht_local_iterator305,7664
  typedef T                          value_type;value_type307,7747
  typedef value_type*                pointer;pointer308,7796
  typedef value_type&                reference;reference309,7842
  typedef size_t                     size_type;size_type310,7890
  typedef ptrdiff_t                  difference_type;difference_type311,7938
  typedef hashtable_node<T>*         node_ptr;node_ptr312,7992
  typedef ht_local_iterator<T>       self;self314,8040
  typedef ht_local_iterator<T>       local_iterator;local_iterator315,8083
  typedef ht_const_local_iterator<T> const_local_iterator;const_local_iterator316,8136
  node_ptr node;node317,8195
  ht_local_iterator(node_ptr n)ht_local_iterator319,8213
  ht_local_iterator(const local_iterator& rhs)ht_local_iterator323,8266
  ht_local_iterator(const const_local_iterator& rhs)ht_local_iterator327,8341
  reference operator*()  const { return node->value; }operator *332,8423
  pointer   operator->() const { return &(operator*()); }operator ->333,8478
  self& operator++()operator ++335,8537
  self operator++(int)operator ++342,8644
  bool operator==(const self& other) const { return node == other.node; }operator ==349,8726
  bool operator!=(const self& other) const { return node != other.node; }operator !=350,8800
struct ht_const_local_iterator :public mystl::iterator<mystl::forward_iterator_tag, T>ht_const_local_iterator354,8897
  typedef T                          value_type;value_type356,8986
  typedef const value_type*          pointer;pointer357,9035
  typedef const value_type&          reference;reference358,9081
  typedef size_t                     size_type;size_type359,9129
  typedef ptrdiff_t                  difference_type;difference_type360,9177
  typedef const hashtable_node<T>*   node_ptr;node_ptr361,9231
  typedef ht_const_local_iterator<T> self;self363,9279
  typedef ht_local_iterator<T>       local_iterator;local_iterator364,9322
  typedef ht_const_local_iterator<T> const_local_iterator;const_local_iterator365,9375
  node_ptr node;node367,9435
  ht_const_local_iterator(node_ptr n)ht_const_local_iterator369,9453
  ht_const_local_iterator(const local_iterator& rhs)ht_const_local_iterator373,9512
  ht_const_local_iterator(const const_local_iterator& rhs)ht_const_local_iterator377,9593
  reference operator*()  const { return node->value; }operator *382,9681
  pointer   operator->() const { return &(operator*()); }operator ->383,9736
  self& operator++()operator ++385,9795
  self operator++(int)operator ++392,9900
  bool operator==(const self& other) const { return node == other.node; }operator ==399,9982
  bool operator!=(const self& other) const { return node != other.node; }operator !=400,10056
#define SYSTEM_64 SYSTEM_64406,10241
#define SYSTEM_32 SYSTEM_32408,10267
#define PRIME_NUM PRIME_NUM413,10313
static constexpr size_t ht_prime_list[] = {ht_prime_list419,10495
#define PRIME_NUM PRIME_NUM444,12197
static constexpr size_t ht_prime_list[] = {ht_prime_list450,12379
inline size_t ht_next_prime(size_t n)ht_next_prime462,12912
class hashtablehashtable473,13321
  typedef ht_value_traits<T>                          value_traits;value_traits481,13496
  typedef typename value_traits::key_type             key_type;key_type482,13564
  typedef typename value_traits::mapped_type          mapped_type;mapped_type483,13628
  typedef typename value_traits::value_type           value_type;value_type484,13695
  typedef Hash                                        hasher;hasher485,13761
  typedef KeyEqual                                    key_equal;key_equal486,13823
  typedef hashtable_node<T>                           node_type;node_type488,13889
  typedef node_type*                                  node_ptr;node_ptr489,13954
  typedef mystl::vector<node_ptr>                     bucket_type;bucket_type490,14018
  typedef mystl::allocator<T>                         allocator_type;allocator_type492,14086
  typedef mystl::allocator<T>                         data_allocator;data_allocator493,14156
  typedef mystl::allocator<node_type>                 node_allocator;node_allocator494,14226
  typedef typename allocator_type::pointer            pointer;pointer496,14297
  typedef typename allocator_type::const_pointer      const_pointer;const_pointer497,14360
  typedef typename allocator_type::reference          reference;reference498,14429
  typedef typename allocator_type::const_reference    const_reference;const_reference499,14494
  typedef typename allocator_type::size_type          size_type;size_type500,14565
  typedef typename allocator_type::difference_type    difference_type;difference_type501,14630
  typedef mystl::ht_iterator<T, Hash, KeyEqual>       iterator;iterator503,14702
  typedef mystl::ht_const_iterator<T, Hash, KeyEqual> const_iterator;const_iterator504,14766
  typedef mystl::ht_local_iterator<T>                 local_iterator;local_iterator505,14836
  typedef mystl::ht_const_local_iterator<T>           const_local_iterator;const_local_iterator506,14906
  allocator_type get_allocator() const { return allocator_type(); }get_allocator508,14983
  bucket_type buckets_;buckets_512,15107
  size_type   bucket_size_;bucket_size_513,15131
  size_type   size_;size_514,15159
  float       mlf_;mlf_515,15180
  hasher      hash_;hash_516,15200
  key_equal   equal_;equal_517,15221
  bool is_equal(const key_type& key1, const key_type& key2)is_equal520,15253
  bool is_equal(const key_type& key1, const key_type& key2) constis_equal525,15353
  const_iterator M_cit(node_ptr node) const noexceptM_cit530,15459
  iterator M_begin() noexceptM_begin535,15584
  const_iterator M_begin() const noexceptM_begin545,15834
  explicit hashtable(size_type bucket_count,hashtable557,16131
    hashtable(Iter first, Iter last,hashtable568,16515
  hashtable(const hashtable& rhs)hashtable577,16861
  hashtable(hashtable&& rhs) noexcepthashtable582,16965
  ~hashtable() { clear(); }~hashtable598,17342
  iterator       begin()        noexceptbegin601,17398
  const_iterator begin()  const noexceptbegin603,17463
  iterator       end()          noexceptend605,17528
  const_iterator end()    const noexceptend607,17607
  const_iterator cbegin() const noexceptcbegin610,17678
  const_iterator cend()   const noexceptcend612,17741
  bool      empty()    const noexcept { return size_ == 0; }empty616,17827
  size_type size()     const noexcept { return size_; }size617,17888
  size_type max_size() const noexcept { return static_cast<size_type>(-1); }max_size618,17944
  iterator emplace_multi_use_hint(const_iterator /*hint*/, Args&& ...args)emplace_multi_use_hint633,18432
  iterator emplace_unique_use_hint(const_iterator /*hint*/, Args&& ...args)emplace_unique_use_hint637,18594
  iterator insert_multi(const value_type& value)insert_multi645,18894
  iterator insert_multi(value_type&& value)insert_multi650,19015
  pair<iterator, bool> insert_unique(const value_type& value)insert_unique654,19109
  pair<iterator, bool> insert_unique(value_type&& value)insert_unique659,19244
  iterator insert_multi_use_hint(const_iterator /*hint*/, const value_type& value)insert_multi_use_hint663,19381
  iterator insert_multi_use_hint(const_iterator /*hint*/, value_type&& value)insert_multi_use_hint665,19498
  iterator insert_unique_use_hint(const_iterator /*hint*/, const value_type& value)insert_unique_use_hint668,19625
  iterator insert_unique_use_hint(const_iterator /*hint*/, value_type&& value)insert_unique_use_hint670,19750
  void insert_multi(InputIter first, InputIter last)insert_multi674,19908
  void insert_unique(InputIter first, InputIter last)insert_unique678,20055
  local_iterator       begin(size_type n)        noexceptbegin708,21055
  const_local_iterator begin(size_type n)  const noexceptbegin713,21173
  const_local_iterator cbegin(size_type n) const noexceptcbegin718,21291
  local_iterator       end(size_type n)          noexceptend724,21410
  const_local_iterator end(size_type n)    const noexceptend729,21524
  const_local_iterator cend(size_type n)   const noexceptcend734,21638
  size_type bucket_count()                 const noexceptbucket_count740,21753
  size_type max_bucket_count()             const noexceptmax_bucket_count742,21838
  size_type bucket(const key_type& key)    constbucket746,21999
  float load_factor() const noexceptload_factor751,22091
  float max_load_factor() const noexceptmax_load_factor754,22198
  void max_load_factor(float ml)max_load_factor756,22258
  void reserve(size_type count)reserve765,22502
  hasher    hash_fcn() const { return hash_; }hash_fcn768,22614
  key_equal key_eq()   const { return equal_; }key_eq769,22661
operator=(const hashtable& rhs)operator =819,24294
operator=(hashtable&& rhs) noexceptoperator =833,24547
emplace_multi(Args&& ...args)emplace_multi846,24871
emplace_unique(Args&& ...args)emplace_unique868,25392
insert_unique_noresize(const value_type& value)insert_unique_noresize888,25898
insert_multi_noresize(const value_type& value)insert_multi_noresize909,26621
erase(const_iterator position)erase934,27347
erase(const_iterator first, const_iterator last)erase972,28066
erase_multi(const key_type& key)erase_multi1005,28970
erase_unique(const key_type& key)erase_unique1019,29298
clear()clear1055,30017
bucket_size(size_type n) const noexceptbucket_size1078,30485
rehash(size_type count)rehash1091,30790
find(const key_type& key)find1112,31266
find(const key_type& key) constfind1123,31616
count(const key_type& key) constcount1135,31997
equal_range_multi(const key_type& key)equal_range_multi1152,32515
equal_range_multi(const key_type& key) constequal_range_multi1179,33539
equal_range_unique(const key_type& key)equal_range_unique1206,34484
equal_range_unique(const key_type& key) constequal_range_unique1230,35349
swap(hashtable& rhs) noexceptswap1253,36086
init(size_type n)init1272,36580
copy_init(const hashtable& ht)copy_init1292,36943
create_node(Args&& ...args)create_node1329,37835
destroy_node(node_ptr node)destroy_node1348,38236
hashtable<T, Hash, KeyEqual>::next_size(size_type n) constnext_size1358,38498
hash(const key_type& key, size_type n) consthash1367,38731
hash(const key_type& key) consthash1375,38933
rehash_if_need(size_type n)rehash_if_need1383,39114
copy_insert_multi(InputIter first, InputIter last, mystl::input_iterator_tag)copy_insert_multi1393,39374
copy_insert_multi(ForwardIter first, ForwardIter last, mystl::forward_iterator_tag)copy_insert_multi1403,39685
copy_insert_unique(InputIter first, InputIter last, mystl::input_iterator_tag)copy_insert_unique1414,40016
copy_insert_unique(ForwardIter first, ForwardIter last, mystl::forward_iterator_tag)copy_insert_unique1424,40329
insert_node_multi(node_ptr np)insert_node_multi1436,40700
insert_node_unique(node_ptr np)insert_node_unique1466,41404
replace_bucket(size_type bucket_count)replace_bucket1492,42059
erase_bucket(size_type n, node_ptr first, node_ptr last)erase_bucket1531,43122
erase_bucket(size_type n, node_ptr last)erase_bucket1556,43674
bool hashtable<T, Hash, KeyEqual>::equal_to_multi(const hashtable& other)equal_to_multi1571,43943
bool hashtable<T, Hash, KeyEqual>::equal_to_unique(const hashtable& other)equal_to_unique1588,44500
void swap(hashtable<T, Hash, KeyEqual>& lhs,swap1603,44887

MyTinySTL/MyTinySTL/exceptdef.h,309
#define MYTINYSTL_EXCEPTDEF_H_MYTINYSTL_EXCEPTDEF_H_2,31
namespace mystlmystl8,105
#define MYSTL_DEBUG(MYSTL_DEBUG11,124
#define THROW_LENGTH_ERROR_IF(THROW_LENGTH_ERROR_IF14,168
#define THROW_OUT_OF_RANGE_IF(THROW_OUT_OF_RANGE_IF17,257
#define THROW_RUNTIME_ERROR_IF(THROW_RUNTIME_ERROR_IF20,346

MyTinySTL/MyTinySTL/uninitialized.h,1843
#define MYTINYSTL_UNINITIALIZED_H_MYTINYSTL_UNINITIALIZED_H_2,38
namespace mystlmystl12,244
unchecked_uninit_copy(InputIter first, InputIter last, ForwardIter result, std::true_type)unchecked_uninit_copy21,633
unchecked_uninit_copy(InputIter first, InputIter last, ForwardIter result, std::false_type)unchecked_uninit_copy28,830
ForwardIter uninitialized_copy(InputIter first, InputIter last, ForwardIter result)uninitialized_copy47,1199
unchecked_uninit_copy_n(InputIter first, Size n, ForwardIter result, std::true_type)unchecked_uninit_copy_n61,1939
unchecked_uninit_copy_n(InputIter first, Size n, ForwardIter result, std::false_type)unchecked_uninit_copy_n68,2148
ForwardIter uninitialized_copy_n(InputIter first, Size n, ForwardIter result)uninitialized_copy_n87,2520
unchecked_uninit_fill(ForwardIter first, ForwardIter last, const T& value, std::true_type)unchecked_uninit_fill101,3166
unchecked_uninit_fill(ForwardIter first, ForwardIter last, const T& value, std::false_type)unchecked_uninit_fill108,3341
void  uninitialized_fill(ForwardIter first, ForwardIter last, const T& value)uninitialized_fill126,3677
unchecked_uninit_move(InputIter first, InputIter last, ForwardIter result, std::true_type)unchecked_uninit_move180,5611
unchecked_uninit_move(InputIter first, InputIter last, ForwardIter result, std::false_type)unchecked_uninit_move187,5809
ForwardIter uninitialized_move(InputIter first, InputIter last, ForwardIter result)uninitialized_move205,6169
unchecked_uninit_move_n(InputIter first, Size n, ForwardIter result, std::true_type)unchecked_uninit_move_n219,6907
unchecked_uninit_move_n(InputIter first, Size n, ForwardIter result, std::false_type)unchecked_uninit_move_n226,7115
ForwardIter uninitialized_move_n(InputIter first, Size n, ForwardIter result)uninitialized_move_n246,7517

MyTinySTL/MyTinySTL/functional.h,4291
#define MYTINYSTL_FUNCTIONAL_H_MYTINYSTL_FUNCTIONAL_H_2,35
namespace mystlmystl8,154
struct unarg_functionunarg_function13,263
  typedef Arg       argument_type;argument_type15,287
  typedef Result    result_type;result_type16,322
struct binary_functionbinary_function21,462
  typedef Arg1      first_argument_type;first_argument_type23,487
  typedef Arg2      second_argument_type;second_argument_type24,528
  typedef Result    result_type;result_type25,570
struct plus :public binary_function<T, T, T>plus30,651
  T operator()(const T& x, const T& y) const { return x + y; }operator ()32,698
struct minus :public binary_function<T, T, T>minus37,809
  T operator()(const T& x, const T& y) const { return x - y; }operator ()39,857
struct multiplies :public binary_function<T, T, T>multiplies44,968
  T operator()(const T& x, const T& y) const { return x * y; }operator ()46,1021
struct divides :public binary_function<T, T, T>divides51,1132
  T operator()(const T& x, const T& y) const { return x / y; }operator ()53,1182
struct modulus :public binary_function<T, T, T>modulus58,1293
  T operator()(const T& x, const T& y) const { return x % y; }operator ()60,1343
struct negate :public unarg_function<T, T>negate65,1454
  T operator()(const T& x) const { return -x; }operator ()67,1499
T identity_element(plus<T>) { return T(0); }identity_element72,1595
T identity_element(multiplies<T>) { return T(1); }identity_element76,1685
struct equal_to :public binary_function<T, T, bool>equal_to80,1781
  bool operator()(const T& x, const T& y) const { return x == y; }operator ()82,1835
struct not_equal_to :public binary_function<T, T, bool>not_equal_to87,1953
  bool operator()(const T& x, const T& y) const { return x != y; }operator ()89,2011
struct greater :public binary_function<T, T, bool>greater94,2126
  bool operator()(const T& x, const T& y) const { return x > y; }operator ()96,2179
struct less :public binary_function<T, T, bool>less101,2293
  bool operator()(const T& x, const T& y) const { return x < y; }operator ()103,2343
struct greater_equal :public binary_function<T, T, bool>greater_equal108,2463
  bool operator()(const T& x, const T& y) const { return x >= y; }operator ()110,2522
struct less_equal :public binary_function<T, T, bool>less_equal115,2643
  bool operator()(const T& x, const T& y) const { return x <= y; }operator ()117,2699
struct logical_and :public binary_function<T, T, bool>logical_and122,2817
  bool operator()(const T& x, const T& y) const { return x && y; }operator ()124,2874
struct logical_or :public binary_function<T, T, bool>logical_or129,2992
  bool operator()(const T& x, const T& y) const { return x || y; }operator ()131,3048
struct logical_not :public unarg_function<T, bool>logical_not136,3166
  bool operator()(const T& x) const { return !x; }operator ()138,3219
struct identity :public unarg_function<T, bool>identity143,3345
  const T& operator()(const T& x) const { return x; }operator ()145,3395
struct selectfirst :public unarg_function<Pair, typename Pair::first_type>selectfirst150,3535
  const typename Pair::first_type& operator()(const Pair& x) constoperator ()152,3612
struct selectsecond :public unarg_function<Pair, typename Pair::second_type>selectsecond160,3793
  const typename Pair::second_type& operator()(const Pair& x) constoperator ()162,3872
struct projectfirst :public binary_function<Arg1, Arg2, Arg1>projectfirst170,4044
  Arg1 operator()(const Arg1& x, const Arg2&) const { return x; }operator ()172,4108
struct projectsecond :public binary_function<Arg1, Arg2, Arg1>projectsecond177,4249
  Arg2 operator()(const Arg1&, const Arg2& y) const { return y; }operator ()179,4314
struct hash {};hash187,4577
struct hash<T*>hash191,4647
  size_t operator()(T* p) const noexceptoperator ()193,4665
#define MYSTL_TRIVIAL_HASH_FCN(MYSTL_TRIVIAL_HASH_FCN198,4795
MYSTL_TRIVIAL_HASH_FCN(char)MYSTL_TRIVIAL_HASH_FCN207,5064
struct hash<float>hash257,6127
  size_t operator()(const float& val)operator ()259,6148
struct hash<double>hash266,6297
  size_t operator()(const double& val)operator ()268,6319
struct hash<long double>hash275,6469
  size_t operator()(const long double& val)operator ()277,6496

MyTinySTL/MyTinySTL/rb_tree.h,16568
#define MYTINYSTL_RB_TREE_H_MYTINYSTL_RB_TREE_H_2,32
namespace mystlmystl17,298
typedef bool rb_tree_color_type;rb_tree_color_type22,351
static constexpr rb_tree_color_type rb_tree_red   = false;rb_tree_red24,385
static constexpr rb_tree_color_type rb_tree_black = true;rb_tree_black25,444
struct rb_tree_value_traits_imprb_tree_value_traits_imp38,758
  typedef T key_type;key_type40,792
  typedef T mapped_type;mapped_type41,814
  typedef T value_type;value_type42,839
  static const key_type& get_key(const Ty& value)get_key45,886
  static const value_type& get_value(const Ty& value)get_value51,985
struct rb_tree_value_traits_imp<T, true>rb_tree_value_traits_imp58,1088
  typedef typename std::remove_cv<typename T::first_type>::type key_type;key_type60,1131
  typedef typename T::second_type                               mapped_type;mapped_type61,1205
  typedef T                                                     value_type;value_type62,1282
  static const key_type& get_key(const Ty& value)get_key65,1381
  static const value_type& get_value(const Ty& value)get_value71,1486
struct rb_tree_value_traitsrb_tree_value_traits78,1589
  static constexpr bool is_map = mystl::is_pair<T>::value;is_map80,1619
  typedef rb_tree_value_traits_imp<T, is_map> value_traits_type;value_traits_type82,1679
  typedef typename value_traits_type::key_type    key_type;key_type84,1745
  typedef typename value_traits_type::mapped_type mapped_type;mapped_type85,1805
  typedef typename value_traits_type::value_type  value_type;value_type86,1868
  static const key_type& get_key(const Ty& value)get_key89,1953
  static const value_type& get_value(const Ty& value)get_value95,2080
struct rb_tree_node_traitsrb_tree_node_traits104,2237
  typedef rb_tree_color_type                 color_type;color_type106,2266
  typedef rb_tree_value_traits<T>            value_traits;value_traits108,2324
  typedef typename value_traits::key_type    key_type;key_type109,2383
  typedef typename value_traits::mapped_type mapped_type;mapped_type110,2438
  typedef typename value_traits::value_type  value_type;value_type111,2496
  typedef rb_tree_node_base<T>*              base_ptr;base_ptr113,2554
  typedef rb_tree_node<T>*                   node_ptr;node_ptr114,2609
struct rb_tree_node_baserb_tree_node_base120,2715
  typedef rb_tree_color_type    color_type;color_type122,2742
  typedef rb_tree_node_base<T>* base_ptr;base_ptr123,2786
  typedef rb_tree_node<T>*      node_ptr;node_ptr124,2828
  base_ptr   parent;  // 父节点parent126,2871
  base_ptr   left;    // 左子节点left127,2906
  base_ptr   right;   // 右子节点right128,2944
  color_type color;   // 节点颜色color129,2982
  base_ptr get_base_ptr()get_base_ptr131,3021
  node_ptr get_node_ptr()get_node_ptr136,3075
  node_ptr& get_node_ref()get_node_ref141,3157
struct rb_tree_node :public rb_tree_node_base<T>rb_tree_node148,3262
  typedef rb_tree_node_base<T>* base_ptr;base_ptr150,3313
  typedef rb_tree_node<T>*      node_ptr;node_ptr151,3355
  T value;  // 节点值value153,3398
  base_ptr get_base_ptr()get_base_ptr155,3424
  node_ptr get_node_ptr()get_node_ptr160,3501
struct rb_tree_traitsrb_tree_traits169,3596
  typedef rb_tree_value_traits<T>            value_traits;value_traits171,3620
  typedef typename value_traits::key_type    key_type;key_type173,3680
  typedef typename value_traits::mapped_type mapped_type;mapped_type174,3735
  typedef typename value_traits::value_type  value_type;value_type175,3793
  typedef value_type*                        pointer;pointer177,3851
  typedef value_type&                        reference;reference178,3905
  typedef const value_type*                  const_pointer;const_pointer179,3961
  typedef const value_type&                  const_reference;const_reference180,4021
  typedef rb_tree_node_base<T>               base_type;base_type182,4084
  typedef rb_tree_node<T>                    node_type;node_type183,4140
  typedef base_type*                         base_ptr;base_ptr185,4197
  typedef node_type*                         node_ptr;node_ptr186,4252
struct rb_tree_iterator_base :public mystl::iterator<mystl::bidirectional_iterator_tag, T>rb_tree_iterator_base192,4361
  typedef typename rb_tree_traits<T>::base_ptr  base_ptr;base_ptr194,4454
  base_ptr node;  // 指向节点本身node196,4513
  rb_tree_iterator_base() :node(nullptr) {}rb_tree_iterator_base198,4554
  void inc()inc201,4623
  void dec()dec221,5061
  bool operator==(const rb_tree_iterator_base& rhs) { return node == rhs.node; }operator ==243,5525
  bool operator!=(const rb_tree_iterator_base& rhs) { return node != rhs.node; }operator !=244,5606
struct rb_tree_iterator :public rb_tree_iterator_base<T>rb_tree_iterator248,5710
  typedef rb_tree_traits<T>                tree_traits;tree_traits250,5769
  typedef typename tree_traits::value_type value_type;value_type252,5826
  typedef typename tree_traits::pointer    pointer;pointer253,5881
  typedef typename tree_traits::reference  reference;reference254,5933
  typedef typename tree_traits::base_ptr   base_ptr;base_ptr255,5987
  typedef typename tree_traits::node_ptr   node_ptr;node_ptr256,6040
  typedef rb_tree_iterator<T>              iterator;iterator258,6094
  typedef rb_tree_const_iterator<T>        const_iterator;const_iterator259,6147
  typedef iterator                         self;self260,6206
  rb_tree_iterator() {}rb_tree_iterator265,6315
  rb_tree_iterator(base_ptr x) { node = x; }rb_tree_iterator266,6339
  rb_tree_iterator(node_ptr x) { node = x; }rb_tree_iterator267,6384
  rb_tree_iterator(const iterator& rhs) { node = rhs.node; }rb_tree_iterator268,6429
  rb_tree_iterator(const const_iterator& rhs) { node = rhs.node; }rb_tree_iterator269,6490
  reference operator*()  const { return node->get_node_ptr()->value; }operator *272,6579
  pointer   operator->() const { return &(operator*()); }operator ->273,6650
  self& operator++()operator ++275,6709
  self operator++(int)operator ++280,6773
  self& operator--()operator --286,6858
  self operator--(int)operator --291,6922
struct rb_tree_const_iterator :public rb_tree_iterator_base<T>rb_tree_const_iterator300,7030
  typedef rb_tree_traits<T>                     tree_traits;tree_traits302,7095
  typedef typename tree_traits::value_type      value_type;value_type304,7157
  typedef typename tree_traits::const_pointer   pointer;pointer305,7217
  typedef typename tree_traits::const_reference reference;reference306,7274
  typedef typename tree_traits::base_ptr        base_ptr;base_ptr307,7333
  typedef typename tree_traits::node_ptr        node_ptr;node_ptr308,7391
  typedef rb_tree_iterator<T>                   iterator;iterator310,7450
  typedef rb_tree_const_iterator<T>             const_iterator;const_iterator311,7508
  typedef const_iterator                        self;self312,7572
  rb_tree_const_iterator() {}rb_tree_const_iterator317,7686
  rb_tree_const_iterator(base_ptr x) { node = x; }rb_tree_const_iterator318,7716
  rb_tree_const_iterator(node_ptr x) { node = x; }rb_tree_const_iterator319,7767
  rb_tree_const_iterator(const iterator& rhs) { node = rhs.node; }rb_tree_const_iterator320,7818
  rb_tree_const_iterator(const const_iterator& rhs) { node = rhs.node; }rb_tree_const_iterator321,7885
  reference operator*()  const { return node->get_node_ptr()->value; }operator *324,7980
  pointer   operator->() const { return &(operator*()); }operator ->325,8051
  self& operator++()operator ++327,8110
  self operator++(int)operator ++332,8174
  self& operator--()operator --338,8259
  self operator--(int)operator --343,8323
NodePtr rb_tree_min(NodePtr x) noexceptrb_tree_min354,8456
NodePtr rb_tree_max(NodePtr x) noexceptrb_tree_max362,8584
bool rb_tree_is_lchild(NodePtr node) noexceptrb_tree_is_lchild370,8714
bool rb_tree_is_red(NodePtr node) noexceptrb_tree_is_red376,8827
void rb_tree_set_black(NodePtr& node) noexceptrb_tree_set_black382,8937
void rb_tree_set_red(NodePtr& node) noexceptrb_tree_set_red388,9045
NodePtr rb_tree_next(NodePtr node) noexceptrb_tree_next394,9149
void rb_tree_rotate_left(NodePtr x, NodePtr& root) noexceptrb_tree_rotate_left414,9827
void rb_tree_rotate_right(NodePtr x, NodePtr& root) noexceptrb_tree_rotate_right450,10852
void rb_tree_insert_rebalance(NodePtr x, NodePtr& root) noexceptrb_tree_insert_rebalance489,12398
NodePtr rb_tree_erase_rebalance(NodePtr z, NodePtr& root, NodePtr& leftmost, NodePtr& rightmost)rb_tree_erase_rebalance552,14686
class rb_treerb_tree712,20184
  typedef rb_tree_traits<T>                        tree_traits;tree_traits717,20247
  typedef rb_tree_value_traits<T>                  value_traits;value_traits718,20311
  typedef typename tree_traits::base_type          base_type;base_type720,20377
  typedef typename tree_traits::base_ptr           base_ptr;base_ptr721,20439
  typedef typename tree_traits::node_type          node_type;node_type722,20500
  typedef typename tree_traits::node_ptr           node_ptr;node_ptr723,20562
  typedef typename tree_traits::key_type           key_type;key_type724,20623
  typedef typename tree_traits::mapped_type        mapped_type;mapped_type725,20684
  typedef typename tree_traits::value_type         value_type;value_type726,20748
  typedef Compare                                  key_compare;key_compare727,20811
  typedef mystl::allocator<T>                      allocator_type;allocator_type729,20876
  typedef mystl::allocator<T>                      data_allocator;data_allocator730,20943
  typedef mystl::allocator<base_type>              base_allocator;base_allocator731,21010
  typedef mystl::allocator<node_type>              node_allocator;node_allocator732,21077
  typedef typename allocator_type::pointer         pointer;pointer734,21145
  typedef typename allocator_type::const_pointer   const_pointer;const_pointer735,21205
  typedef typename allocator_type::reference       reference;reference736,21271
  typedef typename allocator_type::const_reference const_reference;const_reference737,21333
  typedef typename allocator_type::size_type       size_type;size_type738,21401
  typedef typename allocator_type::difference_type difference_type;difference_type739,21463
  typedef rb_tree_iterator<T>                      iterator;iterator741,21532
  typedef rb_tree_const_iterator<T>                const_iterator;const_iterator742,21593
  typedef mystl::reverse_iterator<iterator>        reverse_iterator;reverse_iterator743,21660
  typedef mystl::reverse_iterator<const_iterator>  const_reverse_iterator;const_reverse_iterator744,21729
  allocator_type get_allocator() const { return node_allocator(); }get_allocator746,21805
  key_compare    key_comp()      const { return key_comp_; }key_comp747,21873
  base_ptr    header_;      // 特殊节点，与根节点互为对方的父节点header_751,21985
  size_type   node_count_;  // 节点数node_count_752,22068
  key_compare key_comp_;    // 节点键值比较的准则key_comp_753,22109
  base_ptr& root()      const { return header_->parent; }root757,22253
  base_ptr& leftmost()  const { return header_->left; }leftmost758,22311
  base_ptr& rightmost() const { return header_->right; }rightmost759,22367
  rb_tree() { rb_tree_init(); }rb_tree763,22469
  ~rb_tree() { clear(); }~rb_tree771,22649
  iterator               begin()         noexcept begin776,22712
  const_iterator         begin()   const noexceptbegin778,22788
  iterator               end()           noexceptend780,22863
  const_iterator         end()     const noexceptend782,22935
  reverse_iterator       rbegin()        noexceptrbegin785,23008
  const_reverse_iterator rbegin()  const noexceptrbegin787,23096
  reverse_iterator       rend()          noexceptrend789,23190
  const_reverse_iterator rend()    const noexceptrend791,23280
  const_iterator         cbegin()  const noexceptcbegin794,23377
  const_iterator         cend()    const noexceptcend796,23449
  const_reverse_iterator crbegin() const noexceptcrbegin798,23519
  const_reverse_iterator crend()   const noexceptcrend800,23592
  bool      empty()    const noexcept { return node_count_ == 0; }empty805,23689
  size_type size()     const noexcept { return node_count_; }size806,23756
  size_type max_size() const noexcept { return static_cast<size_type>(-1); }max_size807,23818
  iterator  insert_multi(value_type&& value)insert_multi828,24357
  iterator  insert_multi(iterator hint, const value_type& value)insert_multi833,24457
  iterator  insert_multi(iterator hint, value_type&& value)insert_multi837,24578
  void      insert_multi(InputIterator first, InputIterator last)insert_multi843,24741
  mystl::pair<iterator, bool> insert_unique(value_type&& value)insert_unique852,25093
  iterator  insert_unique(iterator hint, const value_type& value)insert_unique857,25213
  iterator  insert_unique(iterator hint, value_type&& value)insert_unique861,25336
  void      insert_unique(InputIterator first, InputIterator last)insert_unique867,25501
  size_type      count_multi(const key_type& key) constcount_multi891,26121
  size_type      count_unique(const key_type& key) constcount_unique896,26293
  equal_range_multi(const key_type& key)equal_range_multi908,26663
  equal_range_multi(const key_type& key) constequal_range_multi913,26838
  equal_range_unique(const key_type& key)equal_range_unique919,27033
  equal_range_unique(const key_type& key) constequal_range_unique926,27261
rb_tree(const rb_tree& rhs)rb_tree971,28589
rb_tree(rb_tree&& rhs) noexceptrb_tree987,28938
operator=(const rb_tree& rhs)operator =999,29190
operator=(rb_tree&& rhs)operator =1022,29622
emplace_multi(Args&& ...args)emplace_multi1037,29958
emplace_unique(Args&& ...args)emplace_unique1050,30450
emplace_multi_use_hint(iterator hint, Args&& ...args)emplace_multi_use_hint1068,31169
emplace_unique_use_hint(iterator hint, Args&& ...args)emplace_unique_use_hint1109,32415
insert_multi(const value_type& value)insert_multi1159,33769
insert_unique(const value_type& value)insert_unique1170,34270
erase(iterator hint)erase1185,34783
erase_multi(const key_type& key)erase_multi1201,35167
erase_unique(const key_type& key)erase_unique1213,35488
erase(iterator first, iterator last)erase1227,35720
clear()clear1243,35966
find(const key_type& key)find1259,36288
find(const key_type& key) constfind1281,36867
lower_bound(const key_type& key)lower_bound1304,37500
lower_bound(const key_type& key) constlower_bound1325,37896
upper_bound(const key_type& key)upper_bound1347,38343
upper_bound(const key_type& key) constupper_bound1368,38737
swap(rb_tree& rhs) noexceptswap1389,39121
create_node(Args&&... args)create_node1407,39565
clone_node(base_ptr x)clone_node1429,40026
destroy_node(node_ptr p)destroy_node1441,40279
rb_tree_init()rb_tree_init1450,40460
void rb_tree<T, Compare>::reset()reset1462,40740
rb_tree<T, Compare>::get_insert_multi_pos(const key_type& key)get_insert_multi_pos1471,40942
rb_tree<T, Compare>::get_insert_unique_pos(const key_type& key)get_insert_unique_pos1488,41429
insert_value_at(base_ptr x, const value_type& value, bool add_to_left)insert_value_at1525,42863
insert_node_at(base_ptr x, node_ptr node, bool add_to_left)insert_node_at1558,43680
insert_multi_use_hint(iterator hint, key_type key, node_ptr node)insert_multi_use_hint1589,44361
insert_unique_use_hint(iterator hint, key_type key, node_ptr node)insert_unique_use_hint1616,45129
rb_tree<T, Compare>::copy_from(base_ptr x, base_ptr p)copy_from1648,45998
erase_since(base_ptr x)erase_since1681,46615
bool operator==(const rb_tree<T, Compare>& lhs, const rb_tree<T, Compare>& rhs)operator ==1694,46831
bool operator<(const rb_tree<T, Compare>& lhs, const rb_tree<T, Compare>& rhs)operator <1700,47038
bool operator!=(const rb_tree<T, Compare>& lhs, const rb_tree<T, Compare>& rhs)operator !=1706,47245
bool operator>(const rb_tree<T, Compare>& lhs, const rb_tree<T, Compare>& rhs)operator >1712,47388
bool operator<=(const rb_tree<T, Compare>& lhs, const rb_tree<T, Compare>& rhs)operator <=1718,47526
bool operator>=(const rb_tree<T, Compare>& lhs, const rb_tree<T, Compare>& rhs)operator >=1724,47668
void swap(rb_tree<T, Compare>& lhs, rb_tree<T, Compare>& rhs) noexceptswap1731,47835

MyTinySTL/MyTinySTL/algorithm.h,88
#define MYTINYSTL_ALGORITHM_H_MYTINYSTL_ALGORITHM_H_2,34
namespace mystlmystl12,302

MyTinySTL/MyTinySTL/basic_string.h,15389
#define MYTINYSTL_BASIC_STRING_H_MYTINYSTL_BASIC_STRING_H_2,37
namespace mystlmystl14,268
struct char_traitschar_traits20,329
  typedef CharType char_type;char_type22,350
  static size_t length(const char_type* str)length24,383
  static int compare(const char_type* s1, const char_type* s2, size_t n)compare32,526
  static char_type* copy(char_type* dst, const char_type* src, size_t n)copy44,749
  static char_type* move(char_type* dst, const char_type* src, size_t n)move53,977
  static char_type* fill(char_type* dst, char_type ch, size_t count)fill71,1308
struct char_traits<char>char_traits82,1529
  typedef char char_type;char_type84,1556
  static size_t length(const char_type* str) noexceptlength86,1583
  static int compare(const char_type* s1, const char_type* s2, size_t n) noexceptcompare89,1669
  static char_type* copy(char_type* dst, const char_type* src, size_t n) noexceptcopy92,1789
  static char_type* move(char_type* dst, const char_type* src, size_t n) noexceptmove98,1993
  static char_type* fill(char_type* dst, char_type ch, size_t count) noexceptfill103,2147
struct char_traits<wchar_t>char_traits111,2352
  typedef wchar_t char_type;char_type113,2382
  static size_t length(const char_type* str) noexceptlength115,2412
  static int compare(const char_type* s1, const char_type* s2, size_t n) noexceptcompare120,2504
  static char_type* copy(char_type* dst, const char_type* src, size_t n) noexceptcopy125,2631
  static char_type* move(char_type* dst, const char_type* src, size_t n) noexceptmove131,2836
  static char_type* fill(char_type* dst, char_type ch, size_t count) noexceptfill136,2991
struct char_traits<char16_t>char_traits144,3198
  typedef char16_t char_type;char_type146,3229
  static size_t length(const char_type* str) noexceptlength148,3260
  static int compare(const char_type* s1, const char_type* s2, size_t n) noexceptcompare156,3412
  static char_type* copy(char_type* dst, const char_type* src, size_t n) noexceptcopy168,3644
  static char_type* move(char_type* dst, const char_type* src, size_t n) noexceptmove177,3881
  static char_type* fill(char_type* dst, char_type ch, size_t count) noexceptfill195,4221
struct char_traits<char32_t>char_traits206,4454
  typedef char32_t char_type;char_type208,4485
  static size_t length(const char_type* str) noexceptlength210,4516
  static int compare(const char_type* s1, const char_type* s2, size_t n) noexceptcompare218,4668
  static char_type* copy(char_type* dst, const char_type* src, size_t n) noexceptcopy230,4900
  static char_type* move(char_type* dst, const char_type* src, size_t n) noexceptmove239,5137
  static char_type* fill(char_type* dst, char_type ch, size_t count) noexceptfill257,5477
#define STRING_INIT_SIZE STRING_INIT_SIZE267,5740
class basic_stringbasic_string272,5980
  typedef CharTraits                               traits_type;traits_type275,6009
  typedef CharTraits                               char_traits;char_traits276,6073
  typedef mystl::allocator<CharType>               allocator_type;allocator_type278,6138
  typedef mystl::allocator<CharType>               data_allocator;data_allocator279,6205
  typedef typename allocator_type::value_type      value_type;value_type281,6273
  typedef typename allocator_type::pointer         pointer;pointer282,6336
  typedef typename allocator_type::const_pointer   const_pointer;const_pointer283,6396
  typedef typename allocator_type::reference       reference;reference284,6462
  typedef typename allocator_type::const_reference const_reference;const_reference285,6524
  typedef typename allocator_type::size_type       size_type;size_type286,6592
  typedef typename allocator_type::difference_type difference_type;difference_type287,6654
  typedef value_type*                              iterator;iterator289,6723
  typedef const value_type*                        const_iterator;const_iterator290,6784
  typedef mystl::reverse_iterator<iterator>        reverse_iterator;reverse_iterator291,6851
  typedef mystl::reverse_iterator<const_iterator>  const_reverse_iterator;const_reverse_iterator292,6920
  allocator_type get_allocator() { return allocator_type(); }get_allocator294,6996
  static constexpr size_type npos = static_cast<size_type>(-1);npos303,7405
  iterator  buffer_;  // 储存字符串的起始位置buffer_306,7479
  size_type size_;    // 大小size_307,7535
  size_type cap_;     // 容量cap_308,7567
  basic_string() noexceptbasic_string313,7654
  basic_string(size_type n, value_type ch)basic_string316,7699
  basic_string(const basic_string& other, size_type pos)basic_string322,7814
  basic_string(const basic_string& other, size_type pos, size_type count)basic_string327,7974
  basic_string(const_pointer str)basic_string333,8140
  basic_string(const_pointer str, size_type count)basic_string338,8272
  basic_string(Iter first, Iter last)basic_string346,8511
  basic_string(const basic_string& rhs) basic_string349,8606
  basic_string(basic_string&& rhs) noexceptbasic_string354,8738
  ~basic_string() { destroy_buffer(); }~basic_string368,9113
  iterator               begin()         noexceptbegin372,9189
  const_iterator         begin()   const noexceptbegin374,9261
  iterator               end()           noexceptend376,9333
  const_iterator         end()     const noexceptend378,9413
  reverse_iterator       rbegin()        noexceptrbegin381,9494
  const_reverse_iterator rbegin()  const noexceptrbegin383,9582
  reverse_iterator       rend()          noexceptrend385,9676
  const_reverse_iterator rend()    const noexceptrend387,9766
  const_iterator         cbegin()  const noexceptcbegin390,9863
  const_iterator         cend()    const noexceptcend392,9935
  const_reverse_iterator crbegin() const noexceptcrbegin394,10005
  const_reverse_iterator crend()   const noexceptcrend396,10078
  bool      empty()    const noexceptempty400,10174
  size_type size()     const noexceptsize403,10238
  size_type length()   const noexceptlength405,10296
  size_type capacity() const noexceptcapacity407,10354
  size_type max_size() const noexceptmax_size409,10411
  reference       operator[](size_type n) operator []416,10585
  const_reference operator[](size_type n) constoperator []423,10750
  reference       at(size_type n) at431,10921
  const_reference at(size_type n) const at437,11115
  reference       front() front444,11315
  const_reference front() const front449,11400
  reference       back() back455,11492
  const_reference back()  constback460,11580
  const_pointer   data()  const noexceptdata466,11674
  const_pointer   c_str() const noexceptc_str468,11746
  void     push_back(value_type ch)push_back482,12102
  void     pop_back()pop_back484,12159
  basic_string& append(const basic_string& str)append493,12299
  basic_string& append(const basic_string& str, size_type pos)append495,12387
  basic_string& append(const_pointer s)append499,12580
  basic_string& append(Iter first, Iter last)append505,12835
  void resize(size_type count)resize513,13052
  void     clear() noexceptclear517,13166
  basic_string substr(size_type index, size_type count = npos)substr532,13737
  basic_string& replace(size_type pos, size_type count, const basic_string& str)replace539,13935
  basic_string& replace(const_iterator first, const_iterator last, const basic_string& str)replace544,14193
  basic_string& replace(size_type pos, size_type count, const_pointer str)replace550,14457
  basic_string& replace(const_iterator first, const_iterator last, const_pointer str)replace555,14716
  basic_string& replace(size_type pos, size_type count, const_pointer str, size_type count2)replace561,14981
  basic_string& replace(const_iterator first, const_iterator last, const_pointer str, size_type replace566,15240
  basic_string& replace(size_type pos, size_type count, size_type count2, value_type ch)replace573,15504
  basic_string& replace(const_iterator first, const_iterator last, size_type count, value_type creplace578,15758
  basic_string& replace(size_type pos1, size_type count1, const basic_string& str,replace584,16016
  basic_string& replace(const_iterator first, const_iterator last, Iter first2, Iter last2)replace594,16503
  basic_string& operator+=(const basic_string& str)operator +=649,19345
  basic_string& operator+=(value_type ch)operator +=651,19423
  basic_string& operator+=(const_pointer str)operator +=653,19493
  friend std::istream& operator >> (std::istream& is, basic_string& str)operator >>658,19638
  friend std::ostream& operator << (std::ostream& os, const basic_string& str)operator <<668,19864
operator=(const basic_string& rhs)operator =723,21643
operator=(basic_string&& rhs) noexceptoperator =737,21911
operator=(const_pointer str)operator =753,22259
operator=(value_type ch)operator =772,22726
reserve(size_type n)reserve789,23066
shrink_to_fit()shrink_to_fit805,23517
insert(const_iterator pos, value_type ch)insert817,23756
insert(const_iterator pos, size_type count, value_type ch)insert834,24160
insert(const_iterator pos, Iter first, Iter last)insert860,24795
append(size_type count, value_type ch)append886,25430
append(const basic_string& str, size_type pos, size_type count)append903,25908
append(const_pointer s, size_type count)append922,26449
erase(const_iterator pos)erase939,26920
erase(const_iterator first, const_iterator last)erase952,27264
resize(size_type count, value_type ch)resize969,27658
compare(const basic_string& other) constcompare984,27988
compare(size_type pos1, size_type count1, const basic_string& other) constcompare992,28263
compare(size_type pos1, size_type count1, const basic_string& other,compare1001,28660
compare(const_pointer s) constcompare1012,29048
compare(size_type pos1, size_type count1, const_pointer s) constcompare1021,29323
compare(size_type pos1, size_type count1, const_pointer s, size_type count2) constcompare1031,29698
reverse() noexceptreverse1040,29988
swap(basic_string& rhs) noexceptswap1051,30211
find(value_type ch, size_type pos) const noexceptfind1065,30619
find(const_pointer str, size_type pos) const noexceptfind1079,31018
find(const_pointer str, size_type pos, size_type count) const noexceptfind1108,31761
find(const basic_string& str, size_type pos) const noexceptfind1136,32463
rfind(value_type ch, size_type pos) const noexceptrfind1165,33165
rfind(const_pointer str, size_type pos) const noexceptrfind1181,33588
rfind(const_pointer str, size_type pos, size_type count) const noexceptrfind1225,34604
rfind(const basic_string& str, size_type pos) const noexceptrfind1254,35317
find_first_of(value_type ch, size_type pos) const noexceptfind_first_of1284,36039
find_first_of(const_pointer s, size_type pos) const noexceptfind_first_of1298,36432
find_first_of(const_pointer s, size_type pos, size_type count) const noexceptfind_first_of1317,36916
find_first_of(const basic_string& str, size_type pos) const noexceptfind_first_of1335,37415
find_first_not_of(value_type ch, size_type pos) const noexceptfind_first_not_of1353,37885
find_first_not_of(const_pointer s, size_type pos) const noexceptfind_first_not_of1367,38285
find_first_not_of(const_pointer s, size_type pos, size_type count) const noexceptfind_first_not_of1386,38825
find_first_not_of(const basic_string& str, size_type pos) const noexceptfind_first_not_of1404,39328
find_last_of(value_type ch, size_type pos) const noexceptfind_last_of1422,39802
find_last_of(const_pointer s, size_type pos) const noexceptfind_last_of1436,40202
find_last_of(const_pointer s, size_type pos, size_type count) const noexceptfind_last_of1455,40742
find_last_of(const basic_string& str, size_type pos) const noexceptfind_last_of1473,41242
find_last_not_of(value_type ch, size_type pos) const noexceptfind_last_not_of1491,41725
find_last_not_of(const_pointer s, size_type pos) const noexceptfind_last_not_of1505,42126
find_last_not_of(const_pointer s, size_type pos, size_type count) const noexceptfind_last_not_of1524,42673
find_last_not_of(const basic_string& str, size_type pos) const noexceptfind_last_not_of1542,43180
count(value_type ch, size_type pos) const noexceptcount1560,43661
try_init() noexcepttry_init1577,44112
fill_init(size_type n, value_type ch)fill_init1597,44458
copy_init(Iter first, Iter last, mystl::input_iterator_tag)copy_init1610,44834
copy_init(Iter first, Iter last, mystl::forward_iterator_tag)copy_init1634,45376
init_from(const_pointer src, size_type pos, size_type count)init_from1657,45927
destroy_buffer()destroy_buffer1669,46328
to_raw_pointer() constto_raw_pointer1684,46648
reinsert(size_type size)reinsert1693,46836
append_range(Iter first, Iter last)append_range1714,47306
compare_cstr(const_pointer s1, size_type n1, const_pointer s2, size_type n2) constcompare_cstr1730,47741
replace_cstr(const_iterator first, size_type count1, const_pointer str, size_type count2)replace_cstr1744,48201
replace_fill(const_iterator first, size_type count1, size_type count2, value_type ch)replace_fill1778,49237
replace_copy(const_iterator first, const_iterator last, Iter first2, Iter last2)replace_copy1813,50275
reallocate(size_type need)reallocate1844,51176
reallocate_and_fill(iterator pos, size_type n, value_type ch)reallocate_and_fill1858,51626
reallocate_and_copy(iterator pos, const_iterator first, const_iterator last)reallocate_and_copy1878,52328
operator+(const basic_string<CharType, CharTraits>& lhs, operator +1901,53162
operator+(const CharType* lhs, const basic_string<CharType, CharTraits>& rhs)operator +1911,53441
operator+(CharType ch, const basic_string<CharType, CharTraits>& rhs)operator +1920,53683
operator+(const basic_string<CharType, CharTraits>& lhs, const CharType* rhs)operator +1929,53919
operator+(const basic_string<CharType, CharTraits>& lhs, CharType ch)operator +1938,54161
operator+(basic_string<CharType, CharTraits>&& lhs,operator +1947,54397
operator+(const basic_string<CharType, CharTraits>& lhs,operator +1957,54683
operator+(basic_string<CharType, CharTraits>&& lhs,operator +1967,55001
operator+(const CharType* lhs, basic_string<CharType, CharTraits>&& rhs)operator +1977,55282
operator+(CharType ch, basic_string<CharType, CharTraits>&& rhs)operator +1986,55587
operator+(basic_string<CharType, CharTraits>&& lhs, const CharType* rhs)operator +1995,55841
operator+(basic_string<CharType, CharTraits>&& lhs, CharType ch)operator +2004,56091
bool operator==(const basic_string<CharType, CharTraits>& lhs,operator ==2013,56325
bool operator!=(const basic_string<CharType, CharTraits>& lhs,operator !=2020,56560
bool operator<(const basic_string<CharType, CharTraits>& lhs,operator <2027,56795
bool operator<=(const basic_string<CharType, CharTraits>& lhs,operator <=2034,56999
bool operator>(const basic_string<CharType, CharTraits>& lhs,operator >2041,57206
bool operator>=(const basic_string<CharType, CharTraits>& lhs,operator >=2048,57410
void swap(basic_string<CharType, CharTraits>& lhs,swap2056,57642
struct hash<basic_string<CharType, CharTraits>>hash2064,57841
  size_t operator()(const basic_string<CharType, CharTraits>& str)operator ()2066,57891

MyTinySTL/MyTinySTL/unordered_map.h,12216
#define MYTINYSTL_UNORDERED_MAP_H_MYTINYSTL_UNORDERED_MAP_H_2,38
namespace mystlmystl17,540
class unordered_mapunordered_map24,896
  typedef hashtable<mystl::pair<const Key, T>, Hash, KeyEqual> base_type;base_type28,968
  base_type ht_;ht_29,1042
  typedef typename base_type::allocator_type       allocator_type;allocator_type34,1101
  typedef typename base_type::key_type             key_type;key_type35,1168
  typedef typename base_type::mapped_type          mapped_type;mapped_type36,1229
  typedef typename base_type::value_type           value_type;value_type37,1293
  typedef typename base_type::hasher               hasher;hasher38,1356
  typedef typename base_type::key_equal            key_equal;key_equal39,1415
  typedef typename base_type::size_type            size_type;size_type41,1478
  typedef typename base_type::difference_type      difference_type;difference_type42,1540
  typedef typename base_type::pointer              pointer;pointer43,1608
  typedef typename base_type::const_pointer        const_pointer;const_pointer44,1668
  typedef typename base_type::reference            reference;reference45,1734
  typedef typename base_type::const_reference      const_reference;const_reference46,1796
  typedef typename base_type::iterator             iterator;iterator48,1865
  typedef typename base_type::const_iterator       const_iterator;const_iterator49,1926
  typedef typename base_type::local_iterator       local_iterator;local_iterator50,1993
  typedef typename base_type::const_local_iterator const_local_iterator;const_local_iterator51,2060
  allocator_type get_allocator() const { return ht_.get_allocator(); }get_allocator53,2134
  unordered_map()unordered_map58,2260
  explicit unordered_map(size_type bucket_count,unordered_map63,2321
  unordered_map(InputIterator first, InputIterator last,unordered_map71,2561
  unordered_map(std::initializer_list<value_type> ilist,unordered_map81,2954
  unordered_map(const unordered_map& rhs)unordered_map91,3376
  unordered_map(unordered_map&& rhs) noexceptunordered_map95,3444
  unordered_map& operator=(const unordered_map& rhs)operator =100,3530
  unordered_map& operator=(unordered_map&& rhs)operator =105,3628
  unordered_map& operator=(std::initializer_list<value_type> ilist)operator =111,3735
  iterator       begin()        noexceptbegin124,4054
  const_iterator begin()  const noexceptbegin126,4121
  iterator       end()          noexceptend128,4188
  const_iterator end()    const noexceptend130,4253
  const_iterator cbegin() const noexceptcbegin133,4319
  const_iterator cend()   const noexceptcend135,4387
  bool      empty()    const noexcept { return ht_.empty(); }empty140,4473
  size_type size()     const noexcept { return ht_.size(); }size141,4535
  size_type max_size() const noexcept { return ht_.max_size(); }max_size142,4596
  pair<iterator, bool> emplace(Args&& ...args)emplace149,4743
  iterator emplace_hint(const_iterator hint, Args&& ...args)emplace_hint153,4882
  pair<iterator, bool> insert(const value_type& value)insert158,5036
  pair<iterator, bool> insert(value_type&& value)insert160,5130
  iterator insert(const_iterator hint, const value_type& value)insert163,5234
  iterator insert(const_iterator hint, value_type&& value)insert165,5352
  void insert(InputIterator first, InputIterator last)insert169,5513
  void      erase(iterator it)erase174,5627
  void      erase(iterator first, iterator last)erase176,5679
  size_type erase(const key_type& key)erase179,5759
  void      clear()clear182,5835
  void      swap(unordered_map& other) noexceptswap185,5875
  mapped_type& at(const key_type& key)at190,5970
  const mapped_type& at(const key_type& key) constat196,6168
  mapped_type& operator[](const key_type& key)operator []203,6379
  mapped_type& operator[](key_type&& key)operator []210,6565
  size_type      count(const key_type& key) const count218,6760
  iterator       find(const key_type& key)        find221,6841
  const_iterator find(const key_type& key)  const find223,6920
  pair<iterator, iterator> equal_range(const key_type& key)equal_range226,7000
  pair<const_iterator, const_iterator> equal_range(const key_type& key) constequal_range228,7102
  local_iterator       begin(size_type n)        noexceptbegin233,7246
  const_local_iterator begin(size_type n)  const noexceptbegin235,7331
  const_local_iterator cbegin(size_type n) const noexceptcbegin237,7416
  local_iterator       end(size_type n)          noexceptend240,7503
  const_local_iterator end(size_type n)    const noexceptend242,7586
  const_local_iterator cend(size_type n)   const noexceptcend244,7669
  size_type bucket_count()                 const noexceptbucket_count247,7754
  size_type max_bucket_count()             const noexceptmax_bucket_count249,7845
  size_type bucket_size(size_type n)       const noexceptbucket_size252,7941
  size_type bucket(const key_type& key)    constbucket254,8032
  float     load_factor()            const noexcept { return ht_.load_factor(); }load_factor259,8130
  float     max_load_factor()        const noexcept { return ht_.max_load_factor(); }max_load_factor261,8213
  void      max_load_factor(float ml)               { ht_.max_load_factor(ml); }max_load_factor262,8299
  void      rehash(size_type count)                 { ht_.rehash(count); }rehash264,8381
  void      reserve(size_type count)                { ht_.reserve(count); }reserve265,8456
  hasher    hash_fcn()               const          { return ht_.hash_fcn(); }hash_fcn267,8533
  key_equal key_eq()                 const          { return ht_.key_eq(); }key_eq268,8612
  friend bool operator==(const unordered_map& lhs, const unordered_map& rhs)operator ==271,8698
  friend bool operator!=(const unordered_map& lhs, const unordered_map& rhs)operator !=275,8831
bool operator==(const unordered_map<Key, T, Hash, KeyEqual>& lhs,operator ==283,9052
bool operator!=(const unordered_map<Key, T, Hash, KeyEqual>& lhs,operator !=290,9268
void swap(unordered_map<Key, T, Hash, KeyEqual>& lhs,swap298,9509
class unordered_multimapunordered_multimap310,10071
  typedef hashtable<pair<const Key, T>, Hash, KeyEqual> base_type;base_type314,10148
  base_type ht_;ht_315,10215
  typedef typename base_type::allocator_type       allocator_type;allocator_type319,10273
  typedef typename base_type::key_type             key_type;key_type320,10340
  typedef typename base_type::mapped_type          mapped_type;mapped_type321,10401
  typedef typename base_type::value_type           value_type;value_type322,10465
  typedef typename base_type::hasher               hasher;hasher323,10528
  typedef typename base_type::key_equal            key_equal;key_equal324,10587
  typedef typename base_type::size_type            size_type;size_type326,10650
  typedef typename base_type::difference_type      difference_type;difference_type327,10712
  typedef typename base_type::pointer              pointer;pointer328,10780
  typedef typename base_type::const_pointer        const_pointer;const_pointer329,10840
  typedef typename base_type::reference            reference;reference330,10906
  typedef typename base_type::const_reference      const_reference;const_reference331,10968
  typedef typename base_type::iterator             iterator;iterator333,11037
  typedef typename base_type::const_iterator       const_iterator;const_iterator334,11098
  typedef typename base_type::local_iterator       local_iterator;local_iterator335,11165
  typedef typename base_type::const_local_iterator const_local_iterator;const_local_iterator336,11232
  allocator_type get_allocator() const { return ht_.get_allocator(); }get_allocator338,11306
  unordered_multimap() unordered_multimap343,11423
  explicit unordered_multimap(size_type bucket_count,unordered_multimap348,11490
  unordered_multimap(InputIterator first, InputIterator last,unordered_multimap356,11746
  unordered_multimap(std::initializer_list<value_type> ilist,unordered_multimap366,12157
  unordered_multimap(const unordered_multimap& rhs) unordered_multimap376,12598
  unordered_multimap(unordered_multimap&& rhs) noexceptunordered_multimap380,12678
  unordered_multimap& operator=(const unordered_multimap& rhs)operator =385,12774
  unordered_multimap& operator=(unordered_multimap&& rhs)operator =390,12884
  unordered_multimap& operator=(std::initializer_list<value_type> ilist)operator =396,13003
  iterator       begin()        noexceptbegin409,13331
  const_iterator begin()  const noexceptbegin411,13398
  iterator       end()          noexceptend413,13465
  const_iterator end()    const noexceptend415,13530
  const_iterator cbegin() const noexceptcbegin418,13596
  const_iterator cend()   const noexceptcend420,13664
  bool      empty()    const noexcept { return ht_.empty(); }empty425,13750
  size_type size()     const noexcept { return ht_.size(); }size426,13812
  size_type max_size() const noexcept { return ht_.max_size(); }max_size427,13873
  iterator emplace(Args&& ...args)emplace434,14020
  iterator emplace_hint(const_iterator hint, Args&& ...args)emplace_hint438,14146
  iterator insert(const value_type& value) insert443,14299
  iterator insert(value_type&& value)insert445,14381
  iterator insert(const_iterator hint, const value_type& value)insert448,14472
  iterator insert(const_iterator hint, value_type&& value)insert450,14589
  void     insert(InputIterator first, InputIterator last) insert454,14749
  void      erase(iterator it)erase459,14869
  void      erase(iterator first, iterator last)erase461,14921
  size_type erase(const key_type& key) erase464,15001
  void      clear()clear467,15077
  void      swap(unordered_multimap& other) noexcept swap470,15117
  size_type      count(const key_type& key) const count475,15218
  iterator       find(const key_type& key)        find478,15299
  const_iterator find(const key_type& key)  const find480,15378
  pair<iterator, iterator> equal_range(const key_type& key) equal_range483,15458
  pair<const_iterator, const_iterator> equal_range(const key_type& key) const equal_range485,15560
  local_iterator       begin(size_type n)        noexceptbegin490,15704
  const_local_iterator begin(size_type n)  const noexceptbegin492,15789
  const_local_iterator cbegin(size_type n) const noexceptcbegin494,15874
  local_iterator       end(size_type n)          noexceptend497,15961
  const_local_iterator end(size_type n)    const noexceptend499,16044
  const_local_iterator cend(size_type n)   const noexceptcend501,16127
  size_type bucket_count()                 const noexceptbucket_count504,16212
  size_type max_bucket_count()             const noexceptmax_bucket_count506,16303
  size_type bucket_size(size_type n)       const noexceptbucket_size509,16399
  size_type bucket(const key_type& key)    constbucket511,16490
  float     load_factor()            const noexcept { return ht_.load_factor(); }load_factor516,16588
  float     max_load_factor()        const noexcept { return ht_.max_load_factor(); }max_load_factor518,16671
  void      max_load_factor(float ml)               { ht_.max_load_factor(ml); }max_load_factor519,16757
  void      rehash(size_type count)                 { ht_.rehash(count); }rehash521,16839
  void      reserve(size_type count)                { ht_.reserve(count); }reserve522,16914
  hasher    hash_fcn()               const          { return ht_.hash_fcn(); }hash_fcn524,16991
  key_equal key_eq()                 const          { return ht_.key_eq(); }key_eq525,17070
  friend bool operator==(const unordered_multimap& lhs, const unordered_multimap& rhs)operator ==528,17156
  friend bool operator!=(const unordered_multimap& lhs, const unordered_multimap& rhs)operator !=532,17298
bool operator==(const unordered_multimap<Key, T, Hash, KeyEqual>& lhs,operator ==540,17528
bool operator!=(const unordered_multimap<Key, T, Hash, KeyEqual>& lhs,operator !=547,17754
void swap(unordered_multimap<Key, T, Hash, KeyEqual>& lhs,swap555,18005

MyTinySTL/MyTinySTL/queue.h,5393
#define MYTINYSTL_QUEUE_H_MYTINYSTL_QUEUE_H_2,30
namespace mystlmystl13,274
class queuequeue19,480
  typedef Container                           container_type;container_type22,502
  typedef typename Container::value_type      value_type;value_type24,597
  typedef typename Container::size_type       size_type;size_type25,655
  typedef typename Container::reference       reference;reference26,712
  typedef typename Container::const_reference const_reference;const_reference27,769
  container_type c_;  // 用底层容器表现 queuec_32,964
  explicit queue(size_type n) queue39,1085
  queue(size_type n, const value_type& value)queue43,1136
  queue(IIter first, IIter last)queue49,1234
  queue(std::initializer_list<T> ilist)queue54,1298
  queue(const Container& c) queue59,1384
  queue(Container&& c) noexcept(std::is_nothrow_move_constructible<Container>::value)queue63,1433
  queue(const queue& rhs) queue68,1553
  queue(queue&& rhs) noexcept(std::is_nothrow_move_constructible<Container>::value)queue72,1605
  queue& operator=(const queue& rhs) operator =77,1728
  queue& operator=(queue&& rhs) noexcept(std::is_nothrow_move_assignable<Container>::value)operator =82,1811
  queue& operator=(std::initializer_list<T> ilist)operator =88,1961
  reference       front()       { return c_.front(); }front97,2111
  const_reference front() const { return c_.front(); }front98,2166
  reference       back()        { return c_.back(); }back99,2221
  const_reference back()  const { return c_.back(); }back100,2275
  bool      empty() const noexcept { return c_.empty(); }empty103,2354
  size_type size()  const noexcept { return c_.size(); }size104,2412
  void emplace(Args&& ...args)emplace108,2527
  void push(const value_type& value) push111,2613
  void push(value_type&& value)      push113,2678
  void pop()                         pop116,2760
  void clear()         clear119,2821
  void swap(queue& rhs) noexcept(noexcept(mystl::swap(c_, rhs.c_)))swap125,2890
  friend bool operator==(const queue& lhs, const queue& rhs) { return lhs.c_ == rhs.c_; }operator ==129,2998
  friend bool operator< (const queue& lhs, const queue& rhs) { return lhs.c_ <  rhs.c_; }operator <130,3088
bool operator==(const queue<T, Container>& lhs, const queue<T, Container>& rhs)operator ==135,3243
bool operator!=(const queue<T, Container>& lhs, const queue<T, Container>& rhs)operator !=141,3385
bool operator<(const queue<T, Container>& lhs, const queue<T, Container>& rhs)operator <147,3530
bool operator>(const queue<T, Container>& lhs, const queue<T, Container>& rhs)operator >153,3670
bool operator<=(const queue<T, Container>& lhs, const queue<T, Container>& rhs)operator <=159,3810
bool operator>=(const queue<T, Container>& lhs, const queue<T, Container>& rhs)operator >=165,3954
void swap(queue<T, Container>& lhs, queue<T, Container>& rhs) noexcept(noexcept(lhs.swap(rhs)))swap172,4123
class priority_queuepriority_queue184,4675
  typedef Container                           container_type;container_type187,4706
  typedef Compare                             value_compare;value_compare188,4768
  typedef typename Container::value_type      value_type;value_type190,4862
  typedef typename Container::size_type       size_type;size_type191,4920
  typedef typename Container::reference       reference;reference192,4977
  typedef typename Container::const_reference const_reference;const_reference193,5034
  container_type c_;     // 用底层容器来表现 priority_queuec_199,5230
  value_compare  comp_;  // 权值比较的标准comp_200,5298
  priority_queue(const Compare& c) priority_queue206,5424
  explicit priority_queue(size_type n)priority_queue211,5490
  priority_queue(size_type n, const value_type& value) priority_queue216,5599
  priority_queue(IIter first, IIter last) priority_queue223,5758
  priority_queue(std::initializer_list<T> ilist)priority_queue229,5882
  priority_queue(const Container& s)priority_queue235,6006
  priority_queue(Container&& s) priority_queue240,6113
  priority_queue(const priority_queue& rhs)priority_queue246,6230
  priority_queue(priority_queue&& rhs) priority_queue251,6367
  priority_queue& operator=(const priority_queue& rhs)operator =257,6514
  priority_queue& operator=(priority_queue&& rhs)operator =264,6686
  priority_queue& operator=(std::initializer_list<T> ilist)operator =271,6866
  const_reference top() const { return c_.front(); }top284,7120
  bool      empty() const noexcept { return c_.empty(); }empty287,7198
  size_type size()  const noexcept { return c_.size(); }size288,7256
  void emplace(Args&& ...args)emplace292,7371
  void push(const value_type& value)push298,7514
  void push(value_type&& value)push303,7635
  void pop()pop309,7765
  void clear()clear315,7856
  void swap(priority_queue& rhs) noexcept(noexcept(mystl::swap(c_, rhs.c_)) &&swap321,7914
  friend bool operator==(const priority_queue& lhs, const priority_queue& rhs)operator ==329,8157
  friend bool operator!=(const priority_queue& lhs, const priority_queue& rhs)operator !=333,8273
bool operator==(priority_queue<T, Container, Compare>& lhs,operator ==341,8469
bool operator!=(priority_queue<T, Container, Compare>& lhs,operator !=348,8666
void swap(priority_queue<T, Container, Compare>& lhs, swap356,8888

MyTinySTL/MyTinySTL/algobase.h,3582
#define MYTINYSTL_ALGOBASE_H_MYTINYSTL_ALGOBASE_H_2,33
namespace mystlmystl11,176
const T& max(const T& lhs, const T& rhs)max29,630
const T& max(const T& lhs, const T& rhs, Compare comp)max36,800
const T& min(const T& lhs, const T& rhs)min46,1181
const T& min(const T& lhs, const T& rhs, Compare comp)min53,1351
void iter_swap(FIter1 lhs, FIter2 rhs)iter_swap63,1723
unchecked_copy_cat(InputIter first, InputIter last, OutputIter result, unchecked_copy_cat75,2157
unchecked_copy_cat(RandomIter first, RandomIter last, OutputIter result,unchecked_copy_cat88,2465
unchecked_copy(InputIter first, InputIter last, OutputIter result)unchecked_copy100,2762
unchecked_copy(Tp* first, Tp* last, Up* result)unchecked_copy111,3151
OutputIter copy(InputIter first, InputIter last, OutputIter result)copy120,3385
unchecked_copy_backward_cat(BidirectionalIter1 first, BidirectionalIter1 last,unchecked_copy_backward_cat132,3941
unchecked_copy_backward_cat(RandomIter1 first, RandomIter1 last,unchecked_copy_backward_cat143,4325
unchecked_copy_backward(BidirectionalIter1 first, BidirectionalIter1 last,unchecked_copy_backward153,4651
unchecked_copy_backward(Tp* first, Tp* last, Up* result)unchecked_copy_backward166,5145
copy_backward(BidirectionalIter1 first, BidirectionalIter1 last, BidirectionalIter2 result)copy_backward179,5446
unchecked_copy_n(InputIter first, Size n, OutputIter result, mystl::input_iterator_tag)unchecked_copy_n207,6597
unchecked_copy_n(RandomIter first, Size n, OutputIter result, unchecked_copy_n218,6914
copy_n(InputIter first, Size n, OutputIter result)copy_n227,7238
unchecked_move_cat(InputIter first, InputIter last, OutputIter result,unchecked_move_cat239,7728
unchecked_move_cat(RandomIter first, RandomIter last, OutputIter result,unchecked_move_cat252,8048
unchecked_move(InputIter first, InputIter last, OutputIter result)unchecked_move264,8358
unchecked_move(Tp* first, Tp* last, Up* result)unchecked_move275,8747
OutputIter move(InputIter first, InputIter last, OutputIter result)move284,8983
unchecked_move_backward_cat(BidirectionalIter1 first, BidirectionalIter1 last,unchecked_move_backward_cat296,9506
unchecked_move_backward_cat(RandomIter1 first, RandomIter1 last,unchecked_move_backward_cat307,9856
unchecked_move_backward(BidirectionalIter1 first, BidirectionalIter1 last, unchecked_move_backward317,10187
unchecked_move_backward(Tp* first, Tp* last, Up* result)unchecked_move_backward330,10682
move_backward(BidirectionalIter1 first, BidirectionalIter1 last, BidirectionalIter2 result)move_backward343,10984
bool equal(InputIter1 first1, InputIter1 last1, InputIter2 first2)equal353,11462
bool equal(InputIter1 first1, InputIter1 last1, InputIter2 first2, Compared comp)equal365,11773
unchecked_fill_n(Tp* first, Size n, Up value)unchecked_fill_n396,12676
void fill_cat(ForwardIter first, ForwardIter last, const T& value,fill_cat416,13272
void fill_cat(RandomIter first, RandomIter last, const T& value,fill_cat426,13485
void fill(ForwardIter first, ForwardIter last, const T& value)fill433,13680
bool lexicographical_compare(InputIter1 first1, InputIter1 last1,lexicographical_compare447,14442
bool lexicographical_compare(InputIter1 first1, InputIter1 last1,lexicographical_compare462,14909
bool lexicographical_compare(const unsigned char* first1,lexicographical_compare476,15328
mismatch(InputIter1 first1, InputIter1 last1, InputIter2 first2)mismatch495,16246
mismatch(InputIter1 first1, InputIter1 last1, InputIter2 first2, Compred comp)mismatch508,16618

MyTinySTL/MyTinySTL/deque.h,10599
#define MYTINYSTL_DEQUE_H_MYTINYSTL_DEQUE_H_2,30
namespace mystlmystl25,507
#define DEQUE_MAP_INIT_SIZE DEQUE_MAP_INIT_SIZE40,738
struct deque_buf_sizedeque_buf_size44,795
  static constexpr size_t value = sizeof(T) < 256 ? 4096 / sizeof(T) : 16;value46,819
struct deque_iterator : public iterator<random_access_iterator_tag, T>deque_iterator51,967
  typedef deque_iterator<T, T&, T*>             iterator;iterator53,1040
  typedef deque_iterator<T, const T&, const T*> const_iterator;const_iterator54,1098
  typedef deque_iterator                        self;self55,1162
  typedef T            value_type;value_type57,1217
  typedef Ptr          pointer;pointer58,1252
  typedef Ref          reference;reference59,1284
  typedef size_t       size_type;size_type60,1318
  typedef ptrdiff_t    difference_type;difference_type61,1352
  typedef T*           value_pointer;value_pointer62,1392
  typedef T**          map_pointer;map_pointer63,1430
  static const size_type buffer_size = deque_buf_size<T>::value;buffer_size65,1467
  value_pointer cur;    // 指向所在缓冲区的当前元素cur68,1566
  value_pointer first;  // 指向所在缓冲区的头部first69,1630
  value_pointer last;   // 指向所在缓冲区的尾部last70,1688
  map_pointer   node;   // 缓冲区所在节点node71,1746
  deque_iterator() noexceptdeque_iterator74,1832
  deque_iterator(value_pointer v, map_pointer n)deque_iterator77,1928
  deque_iterator(const iterator& rhs)deque_iterator80,2037
  deque_iterator(iterator&& rhs) noexceptdeque_iterator84,2151
  deque_iterator(const const_iterator& rhs)deque_iterator93,2366
  self& operator=(const iterator& rhs)operator =98,2487
  void set_node(map_pointer new_node)set_node111,2709
  reference operator*()  const { return *cur; }operator *119,2853
  pointer   operator->() const { return cur; }operator ->120,2901
  difference_type operator-(const self& x) constoperator -122,2949
  self& operator++()operator ++128,3121
  self operator++(int)operator ++138,3288
  self& operator--()operator --145,3371
  self operator--(int)operator --155,3538
  self& operator+=(difference_type n)operator +=162,3621
  self operator+(difference_type n) constoperator +179,4209
  self& operator-=(difference_type n)operator -=184,4302
  self operator-(difference_type n) constoperator -188,4372
  reference operator[](difference_type n) const { return *(*this + n); }operator []194,4466
  bool operator==(const self& rhs) const { return cur == rhs.cur; }operator ==197,4567
  bool operator< (const self& rhs) constoperator <198,4635
  bool operator!=(const self& rhs) const { return !(*this == rhs); }operator !=200,4745
  bool operator> (const self& rhs) const { return rhs < *this; }operator >201,4814
  bool operator<=(const self& rhs) const { return !(rhs < *this); }operator <=202,4879
  bool operator>=(const self& rhs) const { return !(*this < rhs); }operator >=203,4947
class dequedeque209,5091
  typedef mystl::allocator<T>                      allocator_type;allocator_type213,5140
  typedef mystl::allocator<T>                      data_allocator;data_allocator214,5207
  typedef mystl::allocator<T*>                     map_allocator;map_allocator215,5274
  typedef typename allocator_type::value_type      value_type;value_type217,5341
  typedef typename allocator_type::pointer         pointer;pointer218,5404
  typedef typename allocator_type::const_pointer   const_pointer;const_pointer219,5464
  typedef typename allocator_type::reference       reference;reference220,5530
  typedef typename allocator_type::const_reference const_reference;const_reference221,5592
  typedef typename allocator_type::size_type       size_type;size_type222,5660
  typedef typename allocator_type::difference_type difference_type;difference_type223,5722
  typedef pointer*                                 map_pointer;map_pointer224,5790
  typedef const_pointer*                           const_map_pointer;const_map_pointer225,5854
  typedef deque_iterator<T, T&, T*>                iterator;iterator227,5925
  typedef deque_iterator<T, const T&, const T*>    const_iterator;const_iterator228,5986
  typedef mystl::reverse_iterator<iterator>        reverse_iterator;reverse_iterator229,6053
  typedef mystl::reverse_iterator<const_iterator>  const_reverse_iterator;const_reverse_iterator230,6122
  allocator_type get_allocator() { return allocator_type(); }get_allocator232,6198
  static const size_type buffer_size = deque_buf_size<T>::value;buffer_size234,6261
  iterator       begin_;     // 指向第一个节点begin_238,6384
  iterator       end_;       // 指向最后一个结点end_239,6438
  map_pointer    map_;       // 指向一块 map，map 中的每个元素都是一个指针，指map_240,6495
  size_type      map_size_;  // map 内指针的数目map_size_241,6611
  deque()deque246,6721
  explicit deque(size_type n)deque249,6766
  deque(size_type n, const value_type& value)deque252,6831
  deque(IIter first, IIter last)deque257,7015
  deque(std::initializer_list<value_type> ilist)deque260,7105
  deque(const deque& rhs)deque265,7237
  deque(deque&& rhs) noexceptdeque269,7341
  deque& operator=(std::initializer_list<value_type> ilist)operator =282,7619
  ~deque()~deque289,7743
  iterator               begin()         noexceptbegin304,8014
  const_iterator         begin()   const noexceptbegin306,8085
  iterator               end()           noexceptend308,8156
  const_iterator         end()     const noexceptend310,8225
  reverse_iterator       rbegin()        noexceptrbegin313,8295
  const_reverse_iterator rbegin()  const noexceptrbegin315,8383
  reverse_iterator       rend()          noexceptrend317,8471
  const_reverse_iterator rend()    const noexceptrend319,8561
  const_iterator         cbegin()  const noexceptcbegin322,8652
  const_iterator         cend()    const noexceptcend324,8724
  const_reverse_iterator crbegin() const noexceptcrbegin326,8794
  const_reverse_iterator crend()   const noexceptcrend328,8867
  bool      empty()    const noexcept  { return begin() == end(); }empty333,8964
  size_type size()     const noexcept  { return end_ - begin_; }size334,9032
  size_type max_size() const noexcept  { return static_cast<size_type>(-1); }max_size335,9097
  void      resize(size_type new_size) { resize(new_size, value_type()); }resize336,9175
  reference       operator[](size_type n)operator []341,9385
  const_reference operator[](size_type n) constoperator []346,9486
  reference       at(size_type n)      at352,9594
  const_reference at(size_type n) constat357,9749
  reference       front()front363,9905
  const_reference front() constfront368,9987
  reference       back()back373,10075
  const_reference back() constback378,10160
  void     assign(size_type n, const value_type& value)assign388,10296
  void     assign(IIter first, IIter last)assign393,10492
  void     assign(std::initializer_list<value_type> ilist)assign396,10594
  void     push_front(value_type&& value) { emplace_front(mystl::move(value)); }push_front413,11117
  void     push_back(value_type&& value)  { emplace_back(mystl::move(value)); }push_back414,11198
  void     insert(iterator position, IIter first, IIter last)insert428,11674
deque<T>& deque<T>::operator=(const deque& rhs)operator =486,13592
deque<T>& deque<T>::operator=(deque&& rhs)operator =507,14033
void deque<T>::resize(size_type new_size, const value_type& value)resize521,14308
void deque<T>::shrink_to_fit() noexceptshrink_to_fit536,14570
void deque<T>::emplace_front(Args&& ...args)emplace_front554,14998
void deque<T>::emplace_back(Args&& ...args)emplace_back580,15476
typename deque<T>::iterator deque<T>::emplace(iterator pos, Args&& ...args)emplace598,15865
void deque<T>::push_front(const value_type& value)push_front615,16263
void deque<T>::push_back(const value_type& value)push_back640,16668
void deque<T>::pop_front()pop_front657,16976
void deque<T>::pop_back()pop_back675,17302
deque<T>::insert(iterator position, const value_type& value)insert694,17646
deque<T>::insert(iterator position, value_type&& value)insert716,18013
void deque<T>::insert(iterator position, size_type n, const value_type& value)insert738,18433
deque<T>::erase(iterator position)erase763,19007
deque<T>::erase(iterator first, iterator last)erase784,19427
void deque<T>::clear()clear815,20126
void deque<T>::swap(deque& rhs) noexceptswap837,20614
deque<T>::create_map(size_type size)create_map853,20996
create_buffer(map_pointer nstart, map_pointer nfinish)create_buffer865,21240
destroy_buffer(map_pointer nstart, map_pointer nfinish)destroy_buffer890,21662
map_init(size_type nElem)map_init902,21902
fill_init(size_type n, const value_type& value)fill_init940,22763
copy_init(IIter first, IIter last, input_iterator_tag)copy_init957,23126
copy_init(FIter first, FIter last, forward_iterator_tag)copy_init968,23370
fill_assign(size_type n, const value_type& value)fill_assign985,23803
copy_assign(IIter first, IIter last, input_iterator_tag)copy_assign1003,24128
copy_assign(FIter first, FIter last, forward_iterator_tag)copy_assign1024,24521
insert_aux(iterator position, Args&& ...args)insert_aux1046,25028
fill_insert(iterator position, size_type n, const value_type& value)fill_insert1079,25824
copy_insert(iterator position, FIter first, FIter last, size_type n)copy_insert1155,27844
insert_dispatch(iterator position, IIter first, IIter last, input_iterator_tag)insert_dispatch1234,29942
insert_dispatch(iterator position, FIter first, FIter last, forward_iterator_tag)insert_dispatch1258,30476
void deque<T>::require_capacity(size_type n, bool front)require_capacity1302,31426
void deque<T>::reallocate_map_at_front(size_type need_buffer)reallocate_map_at_front1328,32288
void deque<T>::reallocate_map_at_back(size_type need_buffer)reallocate_map_at_back1354,33307
bool operator==(const deque<T>& lhs, const deque<T>& rhs)operator ==1380,34323
bool operator<(const deque<T>& lhs, const deque<T>& rhs)operator <1387,34498
bool operator!=(const deque<T>& lhs, const deque<T>& rhs)operator !=1394,34673
bool operator>(const deque<T>& lhs, const deque<T>& rhs)operator >1400,34779
bool operator<=(const deque<T>& lhs, const deque<T>& rhs)operator <=1406,34880
bool operator>=(const deque<T>& lhs, const deque<T>& rhs)operator >=1412,34985
void swap(deque<T>& lhs, deque<T>& rhs)swap1419,35115

MyTinySTL/MyTinySTL/algo.h,7248
#define MYTINYSTL_ALGO_H_MYTINYSTL_ALGO_H_2,29
namespace mystlmystl19,315
bool all_of(InputIter first, InputIter last, UnaryPredicate unary_pred)all_of27,695
bool any_of(InputIter first, InputIter last, UnaryPredicate unary_pred)any_of42,1241
bool none_of(InputIter first, InputIter last, UnaryPredicate unary_pred)none_of57,1787
size_t count(InputIter first, InputIter last, const T& value)count72,2316
size_t count_if(InputIter first, InputIter last, UnaryPredicate unary_pred)count_if88,2843
Function for_each(InputIter first, InputIter last, Function f)for_each478,13795
ForwardIter adjacent_find(ForwardIter first, ForwardIter last)adjacent_find492,14309
bool binary_search(ForwardIter first, ForwardIter last, const T& value)binary_search777,21257
bool binary_search(ForwardIter first, ForwardIter last, const T& value, Compared comp)binary_search785,21534
erange_dispatch(ForwardIter first, ForwardIter last,erange_dispatch799,22279
erange_dispatch(RandomIter first, RandomIter last,erange_dispatch834,23172
equal_range(ForwardIter first, ForwardIter last, const T& value)equal_range865,23930
erange_dispatch(ForwardIter first, ForwardIter last,erange_dispatch874,24276
erange_dispatch(RandomIter first, RandomIter last,erange_dispatch909,25218
equal_range(ForwardIter first, ForwardIter last, const T& value, Compared comp)equal_range940,26029
void generate(ForwardIter first, ForwardIter last, Generator gen)generate950,26520
void generate_n(ForwardIter first, Size n, Generator gen)generate_n963,26959
bool includes(InputIter1 first1, InputIter1 last1,includes976,27367
bool includes(InputIter1 first1, InputIter1 last1,includes999,27839
bool is_heap(RandomIter first, RandomIter last)is_heap1025,28521
bool is_heap(RandomIter first, RandomIter last, Compared comp)is_heap1041,28902
bool is_sorted(ForwardIter first, ForwardIter last)is_sorted1060,29509
bool is_sorted(ForwardIter first, ForwardIter last, Compared comp)is_sorted1076,29850
const T& median(const T& left, const T& mid, const T& right)median1095,30352
const T& median(const T& left, const T& mid, const T& right, Compared comp)median1114,30949
ForwardIter max_element(ForwardIter first, ForwardIter last)max_element1136,31580
ForwardIter min_elememt(ForwardIter first, ForwardIter last)min_elememt1169,32443
swap_ranges(ForwardIter1 first1, ForwardIter1 last1,swap_ranges1204,33499
void replace(ForwardIter first, ForwardIter last,replace1312,37554
void replace_if(ForwardIter first, ForwardIter last,replace_if1359,39392
void reverse_dispatch(BidirectionalIter first, BidirectionalIter last,reverse_dispatch1375,39940
void reverse_dispatch(RandomIter first, RandomIter last,reverse_dispatch1388,40268
void reverse(BidirectionalIter first, BidirectionalIter last)reverse1396,40477
reverse_copy(BidirectionalIter first, BidirectionalIter last,reverse_copy1407,40958
void random_shuffle(RandomIter first, RandomIter last)random_shuffle1425,41496
void random_shuffle(RandomIter first, RandomIter last,random_shuffle1438,41849
rotate_dispatch(ForwardIter first, ForwardIter middle,rotate_dispatch1458,42581
rotate_dispatch(BidirectionalIter first, BidirectionalIter middle,rotate_dispatch1489,43297
EuclideanRingElement rgcd(EuclideanRingElement m, EuclideanRingElement n)rgcd1510,43948
rotate_dispatch(RandomIter first, RandomIter middle,rotate_dispatch1524,44202
rotate(ForwardIter first, ForwardIter middle, ForwardIter last)rotate1576,45249
bool is_permutation_aux(ForwardIter1 first1, ForwardIter1 last1,is_permutation_aux1602,46332
bool is_permutation(ForwardIter1 first1, ForwardIter1 last1,is_permutation1678,48002
bool is_permutation(ForwardIter1 first1, ForwardIter1 last1,is_permutation1686,48281
  typedef typename iterator_traits<ForwardIter1>::value_type v1;v11689,48405
  typedef typename iterator_traits<ForwardIter2>::value_type v2;v21690,48470
bool next_permutation(BidirectionalIter first, BidirectionalIter last)next_permutation1702,49134
bool next_permutation(BidirectionalIter first, BidirectionalIter last, Compared comp)next_permutation1728,49811
bool prev_permutation(BidirectionalIter first, BidirectionalIter last)prev_permutation1757,50718
bool prev_permutation(BidirectionalIter first, BidirectionalIter last, Compared comp)prev_permutation1783,51381
merge(InputIter1 first1, InputIter1 last1,merge1813,52311
void merge_without_buffer(BidirectionalIter first, BidirectionalIter middle,merge_without_buffer1864,53644
void merge_adaptive(BidirectionalIter first, BidirectionalIter middle,merge_adaptive1956,56456
inplace_merge_aux(BidirectionalIter first, BidirectionalIter middle,inplace_merge_aux2001,58060
inplace_merge(BidirectionalIter first, BidirectionalIter middle,inplace_merge2019,58564
void merge_without_buffer(BidirectionalIter first, BidirectionalIter middle,merge_without_buffer2030,58955
void merge_adaptive(BidirectionalIter first, BidirectionalIter middle,merge_adaptive2098,60991
inplace_merge_aux(BidirectionalIter first, BidirectionalIter middle,inplace_merge_aux2144,62688
inplace_merge(BidirectionalIter first, BidirectionalIter middle,inplace_merge2162,63235
void partial_sort(RandomIter first, RandomIter middle,partial_sort2175,63819
void partial_sort(RandomIter first, RandomIter middle,partial_sort2191,64237
partial_sort_copy(InputIter first, InputIter last,partial_sort_copy2240,65705
partition_copy(InputIter first, InputIter last,partition_copy2324,68600
constexpr static size_t kSmallSectionSize = 128;  // 小型区间的大小，在这个大小内采kSmallSectionSize2346,69249
Size slg2(Size n)slg22350,69473
void intro_sort(RandomIter first, RandomIter last, Size depth_limit)intro_sort2379,70101
void unchecked_linear_insert(RandomIter last, const T& value)unchecked_linear_insert2398,70737
void unchecked_insertion_sort(RandomIter first, RandomIter last)unchecked_insertion_sort2413,71006
void insertion_sort(RandomIter first, RandomIter last)insertion_sort2423,71231
void final_insertion_sort(RandomIter first, RandomIter last)final_insertion_sort2444,71645
void sort(RandomIter first, RandomIter last)sort2458,71994
void intro_sort(RandomIter first, RandomIter last,intro_sort2491,72916
void unchecked_linear_insert(RandomIter last, const T& value, Compared comp)unchecked_linear_insert2511,73623
void unchecked_insertion_sort(RandomIter first, RandomIter last,unchecked_insertion_sort2526,73978
void insertion_sort(RandomIter first, RandomIter last, Compared comp)insertion_sort2537,74270
void final_insertion_sort(RandomIter first, RandomIter last, Compared comp)final_insertion_sort2558,74726
void sort(RandomIter first, RandomIter last, Compared comp)sort2572,75124
void nth_element(RandomIter first, RandomIter nth,nth_element2587,75779
void nth_element(RandomIter first, RandomIter nth,nth_element2607,76371
unique_copy_dispatch(InputIter first, InputIter last,unique_copy_dispatch2632,77323
unique_copy_dispatch(InputIter first, InputIter last,unique_copy_dispatch2648,77785
unique_copy(InputIter first, InputIter last, OutputIter result)unique_copy2666,78140
ForwardIter unique(ForwardIter first, ForwardIter last)unique2723,79975

MyTinySTL/.travis.yml,0
